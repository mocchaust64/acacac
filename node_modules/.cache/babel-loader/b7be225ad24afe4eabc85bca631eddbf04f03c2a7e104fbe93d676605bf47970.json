{"ast":null,"code":"var _jsxFileName = \"/Users/tai/Documents/MoonWallet/moonwallet/frontend_test/src/components/TransferForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PublicKey, SendTransactionError } from '@solana/web3.js';\nimport { web3 } from '@coral-xyz/anchor';\n// Xóa useConnection hook vì sẽ nhận connection từ props\n// import { useConnection } from '@solana/wallet-adapter-react';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport { createTransferTx, createSecp256r1Instruction, programID } from '../utils/transactionUtils';\nimport { getWebAuthnAssertion, derToRaw, normalizeSignatureToLowS } from '../utils/webauthnUtils';\nimport { getGuardianPDA, getMultisigPDA } from '../utils/credentialUtils';\nimport { getWalletByCredentialId } from '../firebase/webAuthnService';\n\n// Interface cho props của component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Enum cho các trạng thái giao dịch\nvar TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[\"IDLE\"] = \"idle\";\n  TransactionStatus[\"PREPARING\"] = \"preparing\";\n  TransactionStatus[\"SIGNING\"] = \"signing\";\n  TransactionStatus[\"BUILDING_TX\"] = \"building_tx\";\n  TransactionStatus[\"SUBMITTING\"] = \"submitting\";\n  TransactionStatus[\"CONFIRMING\"] = \"confirming\";\n  TransactionStatus[\"SUCCESS\"] = \"success\";\n  TransactionStatus[\"ERROR\"] = \"error\";\n  return TransactionStatus;\n}(TransactionStatus || {});\nexport const TransferForm = ({\n  walletAddress,\n  credentialId,\n  guardianId,\n  onTransferSuccess,\n  onTransferError,\n  // Thêm connection và pdaBalance vào tham số destructuring\n  connection,\n  pdaBalance = 0\n}) => {\n  _s();\n  // State\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [isTransferring, setIsTransferring] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [walletBalance, setWalletBalance] = useState(0);\n  const [nonce, setNonce] = useState(0);\n  const [txStatus, setTxStatus] = useState(TransactionStatus.IDLE);\n  const [txId, setTxId] = useState('');\n  const [isMoonWalletAvailable, setIsMoonWalletAvailable] = useState(false);\n  const [connectionEndpoint, setConnectionEndpoint] = useState('');\n\n  // Kiểm tra chương trình MoonWallet\n  useEffect(() => {\n    const checkPrograms = async () => {\n      try {\n        // Lấy endpoint của connection để hiển thị\n        const endpoint = connection.rpcEndpoint;\n        setConnectionEndpoint(endpoint);\n        console.log(\"Đang kết nối đến:\", endpoint);\n\n        // Chỉ kiểm tra chương trình MoonWallet\n        try {\n          const moonWalletInfo = await connection.getAccountInfo(programID);\n          setIsMoonWalletAvailable(moonWalletInfo !== null);\n          if (moonWalletInfo === null) {\n            console.warn(\"Chương trình MoonWallet không tồn tại trên validator này!\");\n          } else {\n            console.log(\"Đã tìm thấy chương trình MoonWallet:\", programID.toString());\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi kiểm tra chương trình MoonWallet:\", error);\n          setIsMoonWalletAvailable(false);\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi kiểm tra chương trình:\", error);\n      }\n    };\n    checkPrograms();\n  }, [connection]);\n\n  // Cập nhật walletBalance khi pdaBalance thay đổi\n  useEffect(() => {\n    if (pdaBalance !== undefined) {\n      setWalletBalance(pdaBalance);\n    }\n  }, [pdaBalance]);\n\n  // Lấy số dư ví và nonce hiện tại từ blockchain\n  useEffect(() => {\n    const loadWalletInfo = async () => {\n      try {\n        if (!walletAddress) return;\n\n        // Tính PDA của ví từ credential ID\n        const multisigPDA = await getMultisigPDA(credentialId);\n\n        // Lấy thông tin account\n        const accountInfo = await connection.getAccountInfo(multisigPDA);\n        if (!accountInfo) {\n          console.error('Không tìm thấy thông tin ví');\n          return;\n        }\n        try {\n          // Đọc nonce từ account data (từ vị trí thích hợp theo layout)\n          // Giả sử nonce nằm ở offset 18 (8 bytes for discriminator + 1 byte threshold + 1 byte guardian_count + 8 bytes recovery_nonce)\n          const transactionNonce = accountInfo.data.readBigUInt64LE(18);\n          setNonce(Number(transactionNonce));\n          console.log(\"Transaction nonce hiện tại:\", Number(transactionNonce));\n        } catch (error) {\n          console.error(\"Lỗi khi đọc nonce từ account data:\", error);\n          // Fallback về nonce = 0 nếu không đọc được\n          setNonce(0);\n        }\n      } catch (error) {\n        console.error('Lỗi khi tải thông tin ví:', error);\n      }\n    };\n    loadWalletInfo();\n  }, [walletAddress, credentialId, connection]);\n\n  // Xử lý khi nhập địa chỉ đích\n  const handleDestinationChange = e => {\n    setDestinationAddress(e.target.value);\n    // Reset thông báo lỗi và thành công\n    setError('');\n    setSuccess('');\n    setTxStatus(TransactionStatus.IDLE);\n    setTxId('');\n  };\n\n  // Xử lý khi nhập số lượng SOL\n  const handleAmountChange = e => {\n    // Chỉ cho phép nhập số dương và dấu chấm (số thập phân)\n    const value = e.target.value;\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setAmount(value);\n      // Reset thông báo lỗi và thành công\n      setError('');\n      setSuccess('');\n      setTxStatus(TransactionStatus.IDLE);\n      setTxId('');\n    }\n  };\n\n  // Xử lý khi submit form\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsTransferring(true);\n    setError('');\n    setSuccess('');\n    setTxStatus(TransactionStatus.PREPARING);\n    setTxId('');\n    try {\n      // Kiểm tra nếu MoonWallet program không khả dụng\n      if (!isMoonWalletAvailable) {\n        let errorMsg = \"Không thể thực hiện giao dịch vì chương trình MoonWallet không tồn tại trên validator.\\n\";\n        errorMsg += `Địa chỉ chương trình: ${programID.toString()}\\n\\n`;\n        errorMsg += `Đảm bảo chạy validator với lệnh:\\n`;\n        errorMsg += `solana-test-validator --bpf-program ${programID.toString()} path/to/moon_wallet.so`;\n        throw new Error(errorMsg);\n      }\n\n      // Kiểm tra đầu vào\n      if (!destinationAddress) {\n        throw new Error('Vui lòng nhập địa chỉ đích');\n      }\n      if (!amount || parseFloat(amount) <= 0) {\n        throw new Error('Vui lòng nhập số lượng SOL hợp lệ');\n      }\n\n      // Chuyển đổi số lượng SOL sang lamports\n      const amountLamports = Math.floor(parseFloat(amount) * LAMPORTS_PER_SOL);\n\n      // Kiểm tra số dư\n      if (amountLamports > pdaBalance * LAMPORTS_PER_SOL) {\n        throw new Error('Số dư không đủ để thực hiện giao dịch');\n      }\n\n      // Kiểm tra địa chỉ hợp lệ\n      let destinationPublicKey;\n      try {\n        destinationPublicKey = new PublicKey(destinationAddress);\n      } catch (error) {\n        throw new Error('Địa chỉ đích không hợp lệ');\n      }\n\n      // Thêm 1 vào nonce hiện tại\n      const nextNonce = nonce + 1;\n\n      // Lấy timestamp hiện tại (giây)\n      const timestamp = Math.floor(Date.now() / 1000);\n\n      // Tạo message chuẩn theo format phía backend yêu cầu:\n      // \"transfer:{amount}_SOL_to_{destination},nonce:{nonce},timestamp:{timestamp}\"\n      const formattedAmount = parseFloat(amount).toString(); // Đảm bảo định dạng số không có số 0 thừa\n      const messageString = `transfer:${formattedAmount}_SOL_to_${destinationAddress},nonce:${nextNonce},timestamp:${timestamp}`;\n      console.log('Message gốc:', messageString);\n\n      // Chuyển message thành bytes\n      const messageBytes = new TextEncoder().encode(messageString);\n      console.log('Message bytes (UTF-8):', Array.from(messageBytes));\n      console.log('Message bytes (hex):', Array.from(messageBytes).map(b => b.toString(16).padStart(2, '0')).join(''));\n\n      // Tính hash của message\n      const messageHash = await crypto.subtle.digest('SHA-256', messageBytes);\n      const messageHashBytes = new Uint8Array(messageHash);\n      console.log('Message hash bytes (hex):', Buffer.from(messageHashBytes).toString('hex'));\n      console.log('Message hash bytes (array):', Array.from(messageHashBytes));\n\n      // Lấy PDA từ credential ID\n      const multisigPDA = await getMultisigPDA(credentialId);\n      console.log('MultisigPDA:', multisigPDA.toBase58());\n\n      // Lấy PDA của guardian\n      const guardianPDA = await getGuardianPDA(multisigPDA, guardianId);\n      console.log('GuardianPDA:', guardianPDA.toBase58());\n\n      // Ký message bằng WebAuthn\n      setTxStatus(TransactionStatus.SIGNING);\n\n      // Hiển thị thông báo\n      console.log('Đang yêu cầu xác thực WebAuthn...');\n      setError(''); // Xóa thông báo lỗi trước đó\n      setSuccess('Đang hiển thị danh sách khóa WebAuthn, vui lòng chọn khóa để xác thực giao dịch...');\n\n      // Sử dụng trực tiếp message gốc làm dữ liệu để ký với WebAuthn\n      // WebAuthn sẽ tự động hash dữ liệu này với SHA-256 trước khi ký\n      const assertion = await getWebAuthnAssertion(null, messageString, true);\n      if (!assertion) {\n        throw new Error('Lỗi khi ký message bằng WebAuthn hoặc người dùng đã hủy xác thực');\n      }\n      console.log('Đã ký thành công bằng WebAuthn');\n      console.log('ClientDataJSON:', new TextDecoder().decode(assertion.clientDataJSON));\n\n      // Phân tích clientDataJSON để hiểu cách WebAuthn hash message\n      try {\n        const clientDataObj = JSON.parse(new TextDecoder().decode(assertion.clientDataJSON));\n        console.log('ClientData object:', clientDataObj);\n\n        // Lấy challenge từ clientData\n        if (clientDataObj.challenge) {\n          const challengeBase64 = clientDataObj.challenge;\n          // Fix lỗi base64url encoding\n          const base64Standard = challengeBase64.replace(/-/g, '+').replace(/_/g, '/').padEnd(challengeBase64.length + (4 - challengeBase64.length % 4) % 4, '=');\n          const challengeBytes = Buffer.from(base64Standard, 'base64');\n          console.log('Challenge from WebAuthn (hex):', challengeBytes.toString('hex'));\n\n          // Kiểm tra xem challenge từ WebAuthn có giống với hash của message không\n          const originalHashHex = Buffer.from(messageHashBytes).toString('hex');\n          const challengeHex = challengeBytes.toString('hex');\n          console.log('Original hash vs WebAuthn challenge:');\n          console.log('- Original hash:', originalHashHex);\n          console.log('- WebAuthn challenge:', challengeHex);\n          console.log('- Match?', originalHashHex === challengeHex);\n        }\n      } catch (e) {\n        console.error('Lỗi khi phân tích clientDataJSON:', e);\n      }\n      setSuccess(''); // Xóa thông báo thành công tạm thời\n\n      // Lấy chữ ký từ WebAuthn assertion và chuyển đổi từ DER sang raw format\n      console.log('Signature từ WebAuthn (DER format):', Buffer.from(assertion.signature).toString('hex'));\n      console.log('Độ dài signature ban đầu:', assertion.signature.byteLength);\n\n      // Chuyển đổi signature từ DER sang raw format (r, s) sử dụng hàm mới\n      const rawSignature = derToRaw(assertion.signature);\n\n      // Chuẩn hóa chữ ký về dạng Low-S (yêu cầu của Solana)\n      const normalizedSignature = normalizeSignatureToLowS(rawSignature);\n      console.log('Signature sau khi chuyển đổi (raw format):', rawSignature.toString('hex'));\n      console.log('Signature sau khi chuẩn hóa (Low-S):', normalizedSignature.toString('hex'));\n      console.log('Độ dài signature sau khi xử lý:', normalizedSignature.length);\n\n      // LẤY WEBAUTHN PUBLIC KEY TỪ FIREBASE\n      console.log('Lấy WebAuthn public key từ Firebase...');\n      const credentialMapping = await getWalletByCredentialId(credentialId);\n      if (!credentialMapping || !credentialMapping.guardianPublicKey || credentialMapping.guardianPublicKey.length === 0) {\n        // Thử tìm trong localStorage nếu không có trong Firebase\n        console.log('Không tìm thấy trong Firebase, thử tìm trong localStorage...');\n        try {\n          const localStorageData = localStorage.getItem('webauthn_credential_' + credentialId);\n          if (localStorageData) {\n            const localMapping = JSON.parse(localStorageData);\n            if (localMapping && localMapping.guardianPublicKey && localMapping.guardianPublicKey.length > 0) {\n              console.log('Đã tìm thấy WebAuthn public key trong localStorage:', localMapping);\n\n              // Tạo webAuthnPubKey từ dữ liệu trong localStorage\n              const webAuthnPubKey = Buffer.from(new Uint8Array(localMapping.guardianPublicKey));\n\n              // Kiểm tra độ dài\n              if (webAuthnPubKey.length !== 33) {\n                console.warn(`WebAuthn public key từ localStorage có độ dài không đúng: ${webAuthnPubKey.length} bytes, cần 33 bytes`);\n              }\n\n              // Tạo instruction secp256r1\n              setTxStatus(TransactionStatus.BUILDING_TX);\n              console.log('\\n=== CHI TIẾT XÁC THỰC SECP256R1 ===');\n              console.log('1. Thông tin message:');\n              console.log('- Độ dài:', messageBytes.length, 'bytes');\n              console.log('- Nội dung:', Buffer.from(messageBytes).toString('utf8'));\n              console.log('- Hex:', Buffer.from(messageBytes).toString('hex'));\n              console.log('\\n2. Thông tin public key:');\n              console.log('- Độ dài:', webAuthnPubKey.length, 'bytes');\n              console.log('- Byte đầu tiên:', webAuthnPubKey[0].toString(16));\n              console.log('- Hex:', webAuthnPubKey.toString('hex'));\n              console.log('\\n3. Thông tin signature:');\n              console.log('- Độ dài:', normalizedSignature.length, 'bytes');\n              console.log('- Hex:', normalizedSignature.toString('hex'));\n\n              // QUAN TRỌNG: Sử dụng message gốc (không hash) cho secp256r1 instruction\n              const secp256r1Ix = createSecp256r1Instruction(Buffer.from(messageBytes),\n              // Message gốc, không hash\n              webAuthnPubKey, normalizedSignature);\n              console.log('\\n4. Chi tiết instruction secp256r1:');\n              console.log('- Program ID:', secp256r1Ix.programId.toString());\n              console.log('- Data length:', secp256r1Ix.data.length);\n              console.log('- Data hex (first 60 chars):', Buffer.from(secp256r1Ix.data).toString('hex').substring(0, 60) + '...');\n\n              // Tạo ví tạm để trả phí giao dịch\n              const feePayer = web3.Keypair.generate();\n\n              // Xin SOL airdrop để trả phí\n              try {\n                const airdropSignature = await connection.requestAirdrop(feePayer.publicKey, web3.LAMPORTS_PER_SOL / 50 // 0.02 SOL để trả phí\n                );\n                await connection.confirmTransaction(airdropSignature);\n\n                // Kiểm tra số dư sau khi airdrop\n                const feePayerBalance = await connection.getBalance(feePayer.publicKey);\n                console.log(`\\n5. Thông tin fee payer:`);\n                console.log(`- Địa chỉ: ${feePayer.publicKey.toString()}`);\n                console.log(`- Số dư: ${feePayerBalance / LAMPORTS_PER_SOL} SOL`);\n                if (feePayerBalance === 0) {\n                  throw new Error('Không thể airdrop SOL cho fee payer');\n                }\n              } catch (airdropError) {\n                console.warn('\\n5. Lỗi airdrop SOL:', airdropError);\n              }\n\n              // Tạo transaction với verify_and_execute instruction\n              const transferTx = createTransferTx(multisigPDA, guardianPDA, destinationPublicKey, amountLamports, nextNonce, timestamp, messageBytes,\n              // Sử dụng messageBytes (chưa hash) cho verify_and_execute\n              feePayer.publicKey);\n\n              // Đặt secp256r1 instruction là ix đầu tiên\n              transferTx.instructions.unshift(secp256r1Ix);\n\n              // Đặt fee payer và blockhash\n              transferTx.feePayer = feePayer.publicKey;\n              const {\n                blockhash\n              } = await connection.getLatestBlockhash();\n              transferTx.recentBlockhash = blockhash;\n\n              // Ký transaction bằng fee payer\n              transferTx.sign(feePayer);\n              console.log('\\n6. Chi tiết transaction:');\n              console.log('- Fee payer:', feePayer.publicKey.toString());\n              console.log('- Recent blockhash:', blockhash);\n              console.log('- Số lượng instructions:', transferTx.instructions.length);\n              console.log('\\n7. Chi tiết từng instruction:');\n              transferTx.instructions.forEach((ix, index) => {\n                console.log(`\\nInstruction ${index}:`);\n                console.log('- Program ID:', ix.programId.toString());\n                console.log('- Data length:', ix.data.length);\n                console.log('- Keys:', ix.keys.map(k => ({\n                  pubkey: k.pubkey.toString(),\n                  isSigner: k.isSigner,\n                  isWritable: k.isWritable\n                })));\n              });\n\n              // Gửi transaction\n              setTxStatus(TransactionStatus.SUBMITTING);\n              try {\n                console.log('\\n8. Đang gửi transaction...');\n                const transactionId = await connection.sendRawTransaction(transferTx.serialize(), {\n                  skipPreflight: true,\n                  preflightCommitment: 'confirmed'\n                });\n                console.log('Transaction ID:', transactionId);\n                setTxId(transactionId);\n\n                // Chờ xác nhận\n                setTxStatus(TransactionStatus.CONFIRMING);\n                console.log('\\n9. Đang chờ xác nhận transaction...');\n                const confirmation = await connection.confirmTransaction(transactionId, 'confirmed');\n                if (confirmation.value.err) {\n                  console.error('\\n10. Lỗi xác nhận transaction:');\n                  console.error(JSON.stringify(confirmation.value.err, null, 2));\n\n                  // Phân tích lỗi chi tiết\n                  if (confirmation.value.err.InstructionError) {\n                    const [index, error] = confirmation.value.err.InstructionError;\n                    console.error(`\\nLỗi tại instruction ${index}:`);\n                    console.error(error);\n                    if (error.Custom) {\n                      console.error(`Custom error code: ${error.Custom}`);\n                      if (index === 0) {\n                        console.error('Lỗi xác thực secp256r1! Kiểm tra lại:');\n                        console.error('- Message có đúng không');\n                        console.error('- Public key có đúng định dạng không');\n                        console.error('- Signature có đúng định dạng không');\n                      } else {\n                        console.error('Lỗi tại instruction của chương trình!');\n                      }\n                    }\n                  }\n                  throw new Error(`Lỗi khi xác nhận giao dịch: ${JSON.stringify(confirmation.value.err)}`);\n                }\n                console.log('\\n10. Transaction thành công!');\n                setTxStatus(TransactionStatus.SUCCESS);\n                setSuccess(`Đã chuyển ${amount} SOL đến ${destinationAddress} thành công! ID giao dịch: ${transactionId}`);\n                setAmount('');\n                setDestinationAddress('');\n\n                // Gọi callback nếu có\n                if (onTransferSuccess) {\n                  onTransferSuccess();\n                }\n              } catch (sendError) {\n                console.error('\\n10. Lỗi gửi transaction:');\n                console.error(sendError);\n                if (sendError instanceof SendTransactionError) {\n                  console.error(\"Chi tiết lỗi:\", sendError.message);\n                  if (sendError.logs) {\n                    console.error(\"Transaction logs:\", sendError.logs);\n                  }\n                }\n                throw sendError;\n              }\n            }\n          }\n        } catch (localStorageError) {\n          console.error('Lỗi khi đọc từ localStorage:', localStorageError);\n        }\n\n        // Nếu không tìm thấy trong localStorage, thử lấy từ account data\n        console.warn('Không tìm thấy WebAuthn public key trong localStorage, thử lấy từ guardian account...');\n\n        // Lấy dữ liệu tài khoản guardian để lấy public key\n        const guardianAccount = await connection.getAccountInfo(guardianPDA);\n        if (!guardianAccount) {\n          throw new Error('Không thể tìm thấy thông tin guardian');\n        }\n\n        // Lấy WebAuthn public key từ guardian account\n        // Giả sử webauthn_pubkey nằm ở vị trí phù hợp trong account data\n        // Offset phụ thuộc vào layout của Anchor account\n        // NOTE: Đây là ví dụ, offset thực tế cần được xác định chính xác dựa trên layout của account\n        // +8 (discriminator) + 32 (wallet) + 8 (guardian_id) + nameLen + 1 (is_active) + 32 (recovery_hash) + 1 (is_owner) = ~82\n        // webauthn_pubkey là Option<[u8; 33]> nên có thêm 1 byte đánh dấu Some(1) hoặc None(0)\n\n        let webAuthnPubKey;\n        // Giả định cho mục đích demo - trong thực tế bạn cần đọc đúng vị trí\n        if (guardianAccount.data.length > 100) {\n          const hasWebAuthnPubKey = guardianAccount.data[83] === 1; // 1 = Some, 0 = None\n          if (hasWebAuthnPubKey) {\n            webAuthnPubKey = Buffer.from(guardianAccount.data.slice(84, 84 + 33));\n          } else {\n            throw new Error('Guardian không có WebAuthn public key trong account data');\n          }\n        } else {\n          // Nếu không thể đọc được dữ liệu, báo lỗi\n          throw new Error('Không thể đọc được public key từ guardian account (dữ liệu quá ngắn)');\n        }\n      } else {\n        // Sử dụng WebAuthn public key từ Firebase\n        console.log('Đã tìm thấy WebAuthn public key trong Firebase:', credentialMapping.guardianPublicKey);\n        // Chuyển đổi từ mảng số về Buffer\n        const webAuthnPubKey = Buffer.from(new Uint8Array(credentialMapping.guardianPublicKey));\n\n        // Kiểm tra độ dài khóa và định dạng\n        if (webAuthnPubKey.length !== 33) {\n          console.warn(`WebAuthn public key từ Firebase có độ dài không đúng: ${webAuthnPubKey.length} bytes, cần 33 bytes`);\n        }\n\n        // Kiểm tra byte đầu tiên của khóa\n        const firstByte = webAuthnPubKey[0];\n        console.log(`Byte đầu tiên của public key: 0x${firstByte.toString(16)}`);\n\n        // Kiểm tra xem có phải khóa dạng nén không\n        if (firstByte !== 0x02 && firstByte !== 0x03) {\n          console.warn(`Public key không phải dạng nén! Byte đầu tiên là 0x${firstByte.toString(16)}, phải là 0x02 hoặc 0x03`);\n        }\n        console.log('Public key chi tiết:');\n        console.log('- Độ dài:', webAuthnPubKey.length, 'bytes');\n        console.log('- Hex:', webAuthnPubKey.toString('hex'));\n        console.log('Signature chi tiết:');\n        console.log('- Độ dài:', normalizedSignature.length, 'bytes');\n        console.log('- Hex:', normalizedSignature.toString('hex'));\n        console.log('Message chi tiết:');\n        console.log('- Độ dài:', messageBytes.length, 'bytes');\n        console.log('- Hex:', Buffer.from(messageBytes).toString('hex'));\n        console.log('- Text:', Buffer.from(messageBytes).toString('utf8'));\n\n        // Tạo instruction secp256r1\n        setTxStatus(TransactionStatus.BUILDING_TX);\n        console.log('\\n=== CHI TIẾT XÁC THỰC SECP256R1 ===');\n        console.log('1. Thông tin message:');\n        console.log('- Độ dài:', messageBytes.length, 'bytes');\n        console.log('- Nội dung:', Buffer.from(messageBytes).toString('utf8'));\n        console.log('- Hex:', Buffer.from(messageBytes).toString('hex'));\n        console.log('\\n2. Thông tin public key:');\n        console.log('- Độ dài:', webAuthnPubKey.length, 'bytes');\n        console.log('- Byte đầu tiên:', webAuthnPubKey[0].toString(16));\n        console.log('- Hex:', webAuthnPubKey.toString('hex'));\n        console.log('\\n3. Thông tin signature:');\n        console.log('- Độ dài:', normalizedSignature.length, 'bytes');\n        console.log('- Hex:', normalizedSignature.toString('hex'));\n\n        // QUAN TRỌNG: Sử dụng message gốc (không hash) cho secp256r1 instruction\n        const secp256r1Ix = createSecp256r1Instruction(Buffer.from(messageBytes),\n        // Message gốc, không hash\n        webAuthnPubKey, normalizedSignature);\n        console.log('\\n4. Chi tiết instruction secp256r1:');\n        console.log('- Program ID:', secp256r1Ix.programId.toString());\n        console.log('- Data length:', secp256r1Ix.data.length);\n        console.log('- Data hex (first 60 chars):', Buffer.from(secp256r1Ix.data).toString('hex').substring(0, 60) + '...');\n\n        // Tạo ví tạm để trả phí giao dịch\n        const feePayer = web3.Keypair.generate();\n\n        // Xin SOL airdrop để trả phí\n        try {\n          const airdropSignature = await connection.requestAirdrop(feePayer.publicKey, web3.LAMPORTS_PER_SOL / 50 // 0.02 SOL để trả phí\n          );\n          await connection.confirmTransaction(airdropSignature);\n\n          // Kiểm tra số dư sau khi airdrop\n          const feePayerBalance = await connection.getBalance(feePayer.publicKey);\n          console.log(`\\n5. Thông tin fee payer:`);\n          console.log(`- Địa chỉ: ${feePayer.publicKey.toString()}`);\n          console.log(`- Số dư: ${feePayerBalance / LAMPORTS_PER_SOL} SOL`);\n          if (feePayerBalance === 0) {\n            throw new Error('Không thể airdrop SOL cho fee payer');\n          }\n        } catch (airdropError) {\n          console.warn('\\n5. Lỗi airdrop SOL:', airdropError);\n        }\n\n        // Tạo transaction với verify_and_execute instruction\n        const transferTx = createTransferTx(multisigPDA, guardianPDA, destinationPublicKey, amountLamports, nextNonce, timestamp, messageBytes,\n        // Sử dụng messageBytes (chưa hash) cho verify_and_execute\n        feePayer.publicKey);\n\n        // Đặt secp256r1 instruction là ix đầu tiên\n        transferTx.instructions.unshift(secp256r1Ix);\n\n        // Đặt fee payer và blockhash\n        transferTx.feePayer = feePayer.publicKey;\n        const {\n          blockhash\n        } = await connection.getLatestBlockhash();\n        transferTx.recentBlockhash = blockhash;\n\n        // Ký transaction bằng fee payer\n        transferTx.sign(feePayer);\n        console.log('\\n6. Chi tiết transaction:');\n        console.log('- Fee payer:', feePayer.publicKey.toString());\n        console.log('- Recent blockhash:', blockhash);\n        console.log('- Số lượng instructions:', transferTx.instructions.length);\n        console.log('\\n7. Chi tiết từng instruction:');\n        transferTx.instructions.forEach((ix, index) => {\n          console.log(`\\nInstruction ${index}:`);\n          console.log('- Program ID:', ix.programId.toString());\n          console.log('- Data length:', ix.data.length);\n          console.log('- Keys:', ix.keys.map(k => ({\n            pubkey: k.pubkey.toString(),\n            isSigner: k.isSigner,\n            isWritable: k.isWritable\n          })));\n        });\n\n        // Gửi transaction\n        setTxStatus(TransactionStatus.SUBMITTING);\n        try {\n          console.log('\\n8. Đang gửi transaction...');\n          const transactionId = await connection.sendRawTransaction(transferTx.serialize(), {\n            skipPreflight: true,\n            preflightCommitment: 'confirmed'\n          });\n          console.log('Transaction ID:', transactionId);\n          setTxId(transactionId);\n\n          // Chờ xác nhận\n          setTxStatus(TransactionStatus.CONFIRMING);\n          console.log('\\n9. Đang chờ xác nhận transaction...');\n          const confirmation = await connection.confirmTransaction(transactionId, 'confirmed');\n          if (confirmation.value.err) {\n            console.error('\\n10. Lỗi xác nhận transaction:');\n            console.error(JSON.stringify(confirmation.value.err, null, 2));\n\n            // Phân tích lỗi chi tiết\n            if (confirmation.value.err.InstructionError) {\n              const [index, error] = confirmation.value.err.InstructionError;\n              console.error(`\\nLỗi tại instruction ${index}:`);\n              console.error(error);\n              if (error.Custom) {\n                console.error(`Custom error code: ${error.Custom}`);\n                if (index === 0) {\n                  console.error('Lỗi xác thực secp256r1! Kiểm tra lại:');\n                  console.error('- Message có đúng không');\n                  console.error('- Public key có đúng định dạng không');\n                  console.error('- Signature có đúng định dạng không');\n                } else {\n                  console.error('Lỗi tại instruction của chương trình!');\n                }\n              }\n            }\n            throw new Error(`Lỗi khi xác nhận giao dịch: ${JSON.stringify(confirmation.value.err)}`);\n          }\n          console.log('\\n10. Transaction thành công!');\n          setTxStatus(TransactionStatus.SUCCESS);\n          setSuccess(`Đã chuyển ${amount} SOL đến ${destinationAddress} thành công! ID giao dịch: ${transactionId}`);\n          setAmount('');\n          setDestinationAddress('');\n\n          // Gọi callback nếu có\n          if (onTransferSuccess) {\n            onTransferSuccess();\n          }\n        } catch (sendError) {\n          console.error('\\n10. Lỗi gửi transaction:');\n          console.error(sendError);\n          if (sendError instanceof SendTransactionError) {\n            console.error(\"Chi tiết lỗi:\", sendError.message);\n            if (sendError.logs) {\n              console.error(\"Transaction logs:\", sendError.logs);\n            }\n          }\n          throw sendError;\n        }\n      }\n    } catch (error) {\n      console.error('Lỗi khi chuyển tiền:', error);\n      setError(error.message || 'Đã xảy ra lỗi khi chuyển tiền');\n      setTxStatus(TransactionStatus.ERROR);\n\n      // Gọi callback lỗi nếu có\n      if (onTransferError) {\n        onTransferError(error);\n      }\n    } finally {\n      setIsTransferring(false);\n    }\n  };\n\n  // Render status message dựa trên txStatus\n  const renderStatusMessage = () => {\n    switch (txStatus) {\n      case TransactionStatus.PREPARING:\n        return 'Đang chuẩn bị giao dịch...';\n      case TransactionStatus.SIGNING:\n        return 'Vui lòng xác thực bằng WebAuthn (vân tay hoặc Face ID) khi được yêu cầu...';\n      case TransactionStatus.BUILDING_TX:\n        return 'Đang xây dựng giao dịch...';\n      case TransactionStatus.SUBMITTING:\n        return 'Đang gửi giao dịch lên blockchain...';\n      case TransactionStatus.CONFIRMING:\n        return 'Đang chờ xác nhận giao dịch...';\n      case TransactionStatus.SUCCESS:\n        return 'Giao dịch thành công!';\n      case TransactionStatus.ERROR:\n        return 'Giao dịch thất bại!';\n      default:\n        return '';\n    }\n  };\n\n  // Hiển thị ghi chú về validator cục bộ\n  const renderValidatorNote = () => {\n    if (connectionEndpoint.includes('localhost') || connectionEndpoint.includes('127.0.0.1')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-note\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"L\\u01B0u \\xFD:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 14\n          }, this), \" B\\u1EA1n \\u0111ang k\\u1EBFt n\\u1ED1i \\u0111\\u1EBFn validator c\\u1EE5c b\\u1ED9.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"C\\u1EA7n kh\\u1EDFi \\u0111\\u1ED9ng validator v\\u1EDBi c\\xE1c tham s\\u1ED1 \\u0111\\xFAng \\u0111\\u1EC3 c\\xE0i \\u0111\\u1EB7t ch\\u01B0\\u01A1ng tr\\xECnh MoonWallet:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: [\"solana-test-validator --bpf-program \", programID.toString(), \" path/to/moon_wallet.so\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transfer-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chuy\\u1EC3n SOL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"K\\u1EBFt n\\u1ED1i \\u0111\\u1EBFn: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: connectionEndpoint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"S\\u1ED1 d\\u01B0 hi\\u1EC7n t\\u1EA1i: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pdaBalance.toFixed(5), \" SOL\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !isMoonWalletAvailable ? \"warning-message\" : \"info-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tr\\u1EA1ng th\\xE1i ch\\u01B0\\u01A1ng tr\\xECnh:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: isMoonWalletAvailable ? \"status-ok\" : \"status-error\",\n              children: isMoonWalletAvailable ? '✅' : '❌'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 15\n            }, this), \"MoonWallet: \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: programID.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 11\n        }, this), renderValidatorNote(), !isMoonWalletAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"L\\u01B0u \\xFD:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 18\n            }, this), \" Ch\\u01B0\\u01A1ng tr\\xECnh MoonWallet ch\\u01B0a \\u0111\\u01B0\\u1EE3c c\\xE0i \\u0111\\u1EB7t tr\\xEAn validator.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0110\\u1EC3 c\\xE0i \\u0111\\u1EB7t, ch\\u1EA1y validator v\\u1EDBi l\\u1EC7nh:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: [\"solana-test-validator --bpf-program \", programID.toString(), \" path/to/moon_wallet.so\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"destination\",\n          children: \"\\u0110\\u1ECBa ch\\u1EC9 \\u0111\\xEDch:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"destination\",\n          value: destinationAddress,\n          onChange: handleDestinationChange,\n          placeholder: \"Nh\\u1EADp \\u0111\\u1ECBa ch\\u1EC9 Solana\",\n          disabled: isTransferring,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"S\\u1ED1 l\\u01B0\\u1EE3ng SOL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"amount\",\n          value: amount,\n          onChange: handleAmountChange,\n          placeholder: \"V\\xED d\\u1EE5: 0.1\",\n          disabled: isTransferring,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 19\n      }, this), txStatus !== TransactionStatus.IDLE && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: renderStatusMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 13\n        }, this), txStatus === TransactionStatus.CONFIRMING && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-indicator\",\n          children: \"\\u0110ang x\\xE1c nh\\u1EADn...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 15\n        }, this), txId && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"transaction-id\",\n          children: [\"ID Giao d\\u1ECBch: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://explorer.solana.com/tx/${txId}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [txId.slice(0, 8), \"...\", txId.slice(-8)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"primary-button\",\n        disabled: isTransferring || !isMoonWalletAvailable,\n        children: isTransferring ? 'Đang xử lý...' : 'Chuyển SOL'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .success-message, .error-message, .warning-message, .info-message {\n            margin: 12px 0;\n            padding: 10px;\n            border-radius: 4px;\n            font-weight: 500;\n          }\n          \n          .success-message {\n            background-color: rgba(0, 200, 83, 0.1);\n            color: #00C853;\n            border: 1px solid #00C853;\n          }\n          \n          .error-message {\n            background-color: rgba(255, 87, 34, 0.1);\n            color: #FF5722;\n            border: 1px solid #FF5722;\n          }\n          \n          .warning-message {\n            background-color: rgba(255, 152, 0, 0.1);\n            color: #FF9800;\n            border: 1px solid #FF9800;\n          }\n          \n          .info-message {\n            background-color: rgba(33, 150, 243, 0.1);\n            color: #333;\n            border: 1px solid #2196F3;\n          }\n          \n          .status-message {\n            margin: 12px 0;\n            padding: 10px;\n            background-color: rgba(33, 150, 243, 0.1);\n            border: 1px solid #2196F3;\n            border-radius: 4px;\n            color: #2196F3;\n          }\n          \n          .loading-indicator {\n            margin-top: 8px;\n            font-style: italic;\n          }\n          \n          .transaction-id {\n            margin-top: 8px;\n            word-break: break-all;\n            font-size: 14px;\n          }\n          \n          .transaction-id a {\n            color: #2196F3;\n            text-decoration: none;\n          }\n          \n          .transaction-id a:hover {\n            text-decoration: underline;\n          }\n          \n          .status-ok {\n            color: #00C853;\n          }\n          \n          .status-error {\n            color: #FF5722;\n          }\n          \n          pre {\n            background-color: #f5f5f5;\n            padding: 10px;\n            border-radius: 4px;\n            overflow-x: auto;\n            font-size: 12px;\n          }\n          \n          ul {\n            padding-left: 20px;\n          }\n          \n          code {\n            font-family: monospace;\n            background-color: #f5f5f5;\n            padding: 2px 4px;\n            border-radius: 2px;\n          }\n          \n          .info-note {\n            margin-top: 12px;\n            padding: 8px;\n            background-color: #f8f9fa;\n            border-left: 4px solid #2196F3;\n            font-size: 0.9em;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 774,\n    columnNumber: 5\n  }, this);\n};\n_s(TransferForm, \"03LlHdEfN95TQ4IN3Tx5AKL7gOo=\");\n_c = TransferForm;\nvar _c;\n$RefreshReg$(_c, \"TransferForm\");","map":{"version":3,"names":["React","useState","useEffect","PublicKey","SendTransactionError","web3","LAMPORTS_PER_SOL","createTransferTx","createSecp256r1Instruction","programID","getWebAuthnAssertion","derToRaw","normalizeSignatureToLowS","getGuardianPDA","getMultisigPDA","getWalletByCredentialId","jsxDEV","_jsxDEV","TransactionStatus","TransferForm","walletAddress","credentialId","guardianId","onTransferSuccess","onTransferError","connection","pdaBalance","_s","destinationAddress","setDestinationAddress","amount","setAmount","isTransferring","setIsTransferring","error","setError","success","setSuccess","walletBalance","setWalletBalance","nonce","setNonce","txStatus","setTxStatus","IDLE","txId","setTxId","isMoonWalletAvailable","setIsMoonWalletAvailable","connectionEndpoint","setConnectionEndpoint","checkPrograms","endpoint","rpcEndpoint","console","log","moonWalletInfo","getAccountInfo","warn","toString","undefined","loadWalletInfo","multisigPDA","accountInfo","transactionNonce","data","readBigUInt64LE","Number","handleDestinationChange","e","target","value","handleAmountChange","test","handleSubmit","preventDefault","PREPARING","errorMsg","Error","parseFloat","amountLamports","Math","floor","destinationPublicKey","nextNonce","timestamp","Date","now","formattedAmount","messageString","messageBytes","TextEncoder","encode","Array","from","map","b","padStart","join","messageHash","crypto","subtle","digest","messageHashBytes","Uint8Array","Buffer","toBase58","guardianPDA","SIGNING","assertion","TextDecoder","decode","clientDataJSON","clientDataObj","JSON","parse","challenge","challengeBase64","base64Standard","replace","padEnd","length","challengeBytes","originalHashHex","challengeHex","signature","byteLength","rawSignature","normalizedSignature","credentialMapping","guardianPublicKey","localStorageData","localStorage","getItem","localMapping","webAuthnPubKey","BUILDING_TX","secp256r1Ix","programId","substring","feePayer","Keypair","generate","airdropSignature","requestAirdrop","publicKey","confirmTransaction","feePayerBalance","getBalance","airdropError","transferTx","instructions","unshift","blockhash","getLatestBlockhash","recentBlockhash","sign","forEach","ix","index","keys","k","pubkey","isSigner","isWritable","SUBMITTING","transactionId","sendRawTransaction","serialize","skipPreflight","preflightCommitment","CONFIRMING","confirmation","err","stringify","InstructionError","Custom","SUCCESS","sendError","message","logs","localStorageError","guardianAccount","hasWebAuthnPubKey","slice","firstByte","ERROR","renderStatusMessage","renderValidatorNote","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onSubmit","htmlFor","type","id","onChange","placeholder","disabled","required","href","rel","_c","$RefreshReg$"],"sources":["/Users/tai/Documents/MoonWallet/moonwallet/frontend_test/src/components/TransferForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PublicKey, Transaction, Connection, SendTransactionError } from '@solana/web3.js';\nimport { web3 } from '@coral-xyz/anchor';\n// Xóa useConnection hook vì sẽ nhận connection từ props\n// import { useConnection } from '@solana/wallet-adapter-react';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport { \n  createTransferTx, \n  createSecp256r1Instruction,\n  programID,\n  SECP256R1_PROGRAM_ID\n} from '../utils/transactionUtils';\nimport { getWebAuthnAssertion, derToRaw, normalizeSignatureToLowS } from '../utils/webauthnUtils';\nimport { getGuardianPDA, getMultisigPDA } from '../utils/credentialUtils';\nimport { getWalletByCredentialId } from '../firebase/webAuthnService';\n\n// Interface cho props của component\ninterface TransferFormProps {\n  walletAddress: string;  \n  credentialId: string;   \n  guardianId: number;     \n  onTransferSuccess?: () => void;\n  onTransferError?: (error: Error) => void;\n  // Thêm connection vào props\n  connection: Connection;\n  // Thêm pdaBalance để hiển thị số dư chính xác\n  pdaBalance?: number;\n}\n\n// Enum cho các trạng thái giao dịch\nenum TransactionStatus {\n  IDLE = 'idle',\n  PREPARING = 'preparing',\n  SIGNING = 'signing',\n  BUILDING_TX = 'building_tx',\n  SUBMITTING = 'submitting',\n  CONFIRMING = 'confirming',\n  SUCCESS = 'success',\n  ERROR = 'error'\n}\n\nexport const TransferForm: React.FC<TransferFormProps> = ({\n  walletAddress,\n  credentialId,\n  guardianId,\n  onTransferSuccess,\n  onTransferError,\n  // Thêm connection và pdaBalance vào tham số destructuring\n  connection,\n  pdaBalance = 0\n}) => {\n  // State\n  const [destinationAddress, setDestinationAddress] = useState<string>('');\n  const [amount, setAmount] = useState<string>('');\n  const [isTransferring, setIsTransferring] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [walletBalance, setWalletBalance] = useState<number>(0);\n  const [nonce, setNonce] = useState<number>(0);\n  const [txStatus, setTxStatus] = useState<TransactionStatus>(TransactionStatus.IDLE);\n  const [txId, setTxId] = useState<string>('');\n  const [isMoonWalletAvailable, setIsMoonWalletAvailable] = useState<boolean>(false);\n  const [connectionEndpoint, setConnectionEndpoint] = useState<string>('');\n  \n  // Kiểm tra chương trình MoonWallet\n  useEffect(() => {\n    const checkPrograms = async () => {\n      try {\n        // Lấy endpoint của connection để hiển thị\n        const endpoint = connection.rpcEndpoint;\n        setConnectionEndpoint(endpoint);\n        console.log(\"Đang kết nối đến:\", endpoint);\n        \n        // Chỉ kiểm tra chương trình MoonWallet\n        try {\n          const moonWalletInfo = await connection.getAccountInfo(programID);\n          setIsMoonWalletAvailable(moonWalletInfo !== null);\n          \n          if (moonWalletInfo === null) {\n            console.warn(\"Chương trình MoonWallet không tồn tại trên validator này!\");\n          } else {\n            console.log(\"Đã tìm thấy chương trình MoonWallet:\", programID.toString());\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi kiểm tra chương trình MoonWallet:\", error);\n          setIsMoonWalletAvailable(false);\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi kiểm tra chương trình:\", error);\n      }\n    };\n    \n    checkPrograms();\n  }, [connection]);\n  \n  // Cập nhật walletBalance khi pdaBalance thay đổi\n  useEffect(() => {\n    if (pdaBalance !== undefined) {\n      setWalletBalance(pdaBalance);\n    }\n  }, [pdaBalance]);\n  \n  // Lấy số dư ví và nonce hiện tại từ blockchain\n  useEffect(() => {\n    const loadWalletInfo = async () => {\n      try {\n        if (!walletAddress) return;\n        \n        // Tính PDA của ví từ credential ID\n        const multisigPDA = await getMultisigPDA(credentialId);\n        \n        // Lấy thông tin account\n        const accountInfo = await connection.getAccountInfo(multisigPDA);\n        \n        if (!accountInfo) {\n          console.error('Không tìm thấy thông tin ví');\n          return;\n        }\n        \n        try {\n          // Đọc nonce từ account data (từ vị trí thích hợp theo layout)\n          // Giả sử nonce nằm ở offset 18 (8 bytes for discriminator + 1 byte threshold + 1 byte guardian_count + 8 bytes recovery_nonce)\n          const transactionNonce = accountInfo.data.readBigUInt64LE(18);\n          setNonce(Number(transactionNonce));\n          console.log(\"Transaction nonce hiện tại:\", Number(transactionNonce));\n        } catch (error) {\n          console.error(\"Lỗi khi đọc nonce từ account data:\", error);\n          // Fallback về nonce = 0 nếu không đọc được\n          setNonce(0);\n        }\n        \n      } catch (error) {\n        console.error('Lỗi khi tải thông tin ví:', error);\n      }\n    };\n    \n    loadWalletInfo();\n  }, [walletAddress, credentialId, connection]);\n  \n  // Xử lý khi nhập địa chỉ đích\n  const handleDestinationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setDestinationAddress(e.target.value);\n    // Reset thông báo lỗi và thành công\n    setError('');\n    setSuccess('');\n    setTxStatus(TransactionStatus.IDLE);\n    setTxId('');\n  };\n  \n  // Xử lý khi nhập số lượng SOL\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // Chỉ cho phép nhập số dương và dấu chấm (số thập phân)\n    const value = e.target.value;\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setAmount(value);\n      // Reset thông báo lỗi và thành công\n      setError('');\n      setSuccess('');\n      setTxStatus(TransactionStatus.IDLE);\n      setTxId('');\n    }\n  };\n  \n  // Xử lý khi submit form\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    setIsTransferring(true);\n    setError('');\n    setSuccess('');\n    setTxStatus(TransactionStatus.PREPARING);\n    setTxId('');\n    \n    try {\n      // Kiểm tra nếu MoonWallet program không khả dụng\n      if (!isMoonWalletAvailable) {\n        let errorMsg = \"Không thể thực hiện giao dịch vì chương trình MoonWallet không tồn tại trên validator.\\n\";\n        errorMsg += `Địa chỉ chương trình: ${programID.toString()}\\n\\n`;\n        errorMsg += `Đảm bảo chạy validator với lệnh:\\n`;\n        errorMsg += `solana-test-validator --bpf-program ${programID.toString()} path/to/moon_wallet.so`;\n        \n        throw new Error(errorMsg);\n      }\n      \n      // Kiểm tra đầu vào\n      if (!destinationAddress) {\n        throw new Error('Vui lòng nhập địa chỉ đích');\n      }\n      \n      if (!amount || parseFloat(amount) <= 0) {\n        throw new Error('Vui lòng nhập số lượng SOL hợp lệ');\n      }\n      \n      // Chuyển đổi số lượng SOL sang lamports\n      const amountLamports = Math.floor(parseFloat(amount) * LAMPORTS_PER_SOL);\n      \n      // Kiểm tra số dư\n      if (amountLamports > pdaBalance * LAMPORTS_PER_SOL) {\n        throw new Error('Số dư không đủ để thực hiện giao dịch');\n      }\n      \n      // Kiểm tra địa chỉ hợp lệ\n      let destinationPublicKey: PublicKey;\n      try {\n        destinationPublicKey = new PublicKey(destinationAddress);\n      } catch (error) {\n        throw new Error('Địa chỉ đích không hợp lệ');\n      }\n      \n      // Thêm 1 vào nonce hiện tại\n      const nextNonce = nonce + 1;\n      \n      // Lấy timestamp hiện tại (giây)\n      const timestamp = Math.floor(Date.now() / 1000);\n      \n      // Tạo message chuẩn theo format phía backend yêu cầu:\n      // \"transfer:{amount}_SOL_to_{destination},nonce:{nonce},timestamp:{timestamp}\"\n      const formattedAmount = parseFloat(amount).toString(); // Đảm bảo định dạng số không có số 0 thừa\n      const messageString = `transfer:${formattedAmount}_SOL_to_${destinationAddress},nonce:${nextNonce},timestamp:${timestamp}`;\n      console.log('Message gốc:', messageString);\n      \n      // Chuyển message thành bytes\n      const messageBytes = new TextEncoder().encode(messageString);\n      \n      console.log('Message bytes (UTF-8):', Array.from(messageBytes));\n      console.log('Message bytes (hex):', Array.from(messageBytes).map(b => b.toString(16).padStart(2, '0')).join(''));\n      \n      // Tính hash của message\n      const messageHash = await crypto.subtle.digest('SHA-256', messageBytes);\n      const messageHashBytes = new Uint8Array(messageHash);\n      console.log('Message hash bytes (hex):', Buffer.from(messageHashBytes).toString('hex'));\n      console.log('Message hash bytes (array):', Array.from(messageHashBytes));\n      \n      // Lấy PDA từ credential ID\n      const multisigPDA = await getMultisigPDA(credentialId);\n      console.log('MultisigPDA:', multisigPDA.toBase58());\n      \n      // Lấy PDA của guardian\n      const guardianPDA = await getGuardianPDA(multisigPDA, guardianId);\n      console.log('GuardianPDA:', guardianPDA.toBase58());\n      \n      // Ký message bằng WebAuthn\n      setTxStatus(TransactionStatus.SIGNING);\n      \n      // Hiển thị thông báo\n      console.log('Đang yêu cầu xác thực WebAuthn...');\n      setError(''); // Xóa thông báo lỗi trước đó\n      setSuccess('Đang hiển thị danh sách khóa WebAuthn, vui lòng chọn khóa để xác thực giao dịch...');\n      \n      // Sử dụng trực tiếp message gốc làm dữ liệu để ký với WebAuthn\n      // WebAuthn sẽ tự động hash dữ liệu này với SHA-256 trước khi ký\n      const assertion = await getWebAuthnAssertion(null, messageString, true);\n      \n      if (!assertion) {\n        throw new Error('Lỗi khi ký message bằng WebAuthn hoặc người dùng đã hủy xác thực');\n      }\n      \n      console.log('Đã ký thành công bằng WebAuthn');\n      console.log('ClientDataJSON:', new TextDecoder().decode(assertion.clientDataJSON));\n      \n      // Phân tích clientDataJSON để hiểu cách WebAuthn hash message\n      try {\n        const clientDataObj = JSON.parse(new TextDecoder().decode(assertion.clientDataJSON));\n        console.log('ClientData object:', clientDataObj);\n        \n        // Lấy challenge từ clientData\n        if (clientDataObj.challenge) {\n          const challengeBase64 = clientDataObj.challenge;\n          // Fix lỗi base64url encoding\n          const base64Standard = challengeBase64\n            .replace(/-/g, '+')\n            .replace(/_/g, '/')\n            .padEnd(challengeBase64.length + (4 - challengeBase64.length % 4) % 4, '=');\n          const challengeBytes = Buffer.from(base64Standard, 'base64');\n          console.log('Challenge from WebAuthn (hex):', challengeBytes.toString('hex'));\n          \n          // Kiểm tra xem challenge từ WebAuthn có giống với hash của message không\n          const originalHashHex = Buffer.from(messageHashBytes).toString('hex');\n          const challengeHex = challengeBytes.toString('hex');\n          console.log('Original hash vs WebAuthn challenge:');\n          console.log('- Original hash:', originalHashHex);\n          console.log('- WebAuthn challenge:', challengeHex);\n          console.log('- Match?', originalHashHex === challengeHex);\n        }\n      } catch (e) {\n        console.error('Lỗi khi phân tích clientDataJSON:', e);\n      }\n      \n      setSuccess(''); // Xóa thông báo thành công tạm thời\n      \n      // Lấy chữ ký từ WebAuthn assertion và chuyển đổi từ DER sang raw format\n      console.log('Signature từ WebAuthn (DER format):', Buffer.from(assertion.signature).toString('hex'));\n      console.log('Độ dài signature ban đầu:', assertion.signature.byteLength);\n      \n      // Chuyển đổi signature từ DER sang raw format (r, s) sử dụng hàm mới\n      const rawSignature = derToRaw(assertion.signature);\n      \n      // Chuẩn hóa chữ ký về dạng Low-S (yêu cầu của Solana)\n      const normalizedSignature = normalizeSignatureToLowS(rawSignature);\n      \n      console.log('Signature sau khi chuyển đổi (raw format):', rawSignature.toString('hex'));\n      console.log('Signature sau khi chuẩn hóa (Low-S):', normalizedSignature.toString('hex'));\n      console.log('Độ dài signature sau khi xử lý:', normalizedSignature.length);\n      \n      // LẤY WEBAUTHN PUBLIC KEY TỪ FIREBASE\n      console.log('Lấy WebAuthn public key từ Firebase...');\n      const credentialMapping = await getWalletByCredentialId(credentialId);\n      \n      if (!credentialMapping || !credentialMapping.guardianPublicKey || credentialMapping.guardianPublicKey.length === 0) {\n        // Thử tìm trong localStorage nếu không có trong Firebase\n        console.log('Không tìm thấy trong Firebase, thử tìm trong localStorage...');\n        try {\n          const localStorageData = localStorage.getItem('webauthn_credential_' + credentialId);\n          if (localStorageData) {\n            const localMapping = JSON.parse(localStorageData);\n            if (localMapping && localMapping.guardianPublicKey && localMapping.guardianPublicKey.length > 0) {\n              console.log('Đã tìm thấy WebAuthn public key trong localStorage:', localMapping);\n              \n              // Tạo webAuthnPubKey từ dữ liệu trong localStorage\n              const webAuthnPubKey = Buffer.from(new Uint8Array(localMapping.guardianPublicKey));\n              \n              // Kiểm tra độ dài\n              if (webAuthnPubKey.length !== 33) {\n                console.warn(`WebAuthn public key từ localStorage có độ dài không đúng: ${webAuthnPubKey.length} bytes, cần 33 bytes`);\n              }\n              \n              // Tạo instruction secp256r1\n              setTxStatus(TransactionStatus.BUILDING_TX);\n              \n              console.log('\\n=== CHI TIẾT XÁC THỰC SECP256R1 ===');\n              console.log('1. Thông tin message:');\n              console.log('- Độ dài:', messageBytes.length, 'bytes');\n              console.log('- Nội dung:', Buffer.from(messageBytes).toString('utf8'));\n              console.log('- Hex:', Buffer.from(messageBytes).toString('hex'));\n              \n              console.log('\\n2. Thông tin public key:');\n              console.log('- Độ dài:', webAuthnPubKey.length, 'bytes');\n              console.log('- Byte đầu tiên:', webAuthnPubKey[0].toString(16));\n              console.log('- Hex:', webAuthnPubKey.toString('hex'));\n              \n              console.log('\\n3. Thông tin signature:');\n              console.log('- Độ dài:', normalizedSignature.length, 'bytes');\n              console.log('- Hex:', normalizedSignature.toString('hex'));\n              \n              // QUAN TRỌNG: Sử dụng message gốc (không hash) cho secp256r1 instruction\n              const secp256r1Ix = createSecp256r1Instruction(\n                Buffer.from(messageBytes),  // Message gốc, không hash\n                webAuthnPubKey,\n                normalizedSignature\n              );\n              \n              console.log('\\n4. Chi tiết instruction secp256r1:');\n              console.log('- Program ID:', secp256r1Ix.programId.toString());\n              console.log('- Data length:', secp256r1Ix.data.length);\n              console.log('- Data hex (first 60 chars):', Buffer.from(secp256r1Ix.data).toString('hex').substring(0, 60) + '...');\n              \n              // Tạo ví tạm để trả phí giao dịch\n              const feePayer = web3.Keypair.generate();\n              \n              // Xin SOL airdrop để trả phí\n              try {\n                const airdropSignature = await connection.requestAirdrop(\n                  feePayer.publicKey,\n                  web3.LAMPORTS_PER_SOL / 50 // 0.02 SOL để trả phí\n                );\n                await connection.confirmTransaction(airdropSignature);\n                \n                // Kiểm tra số dư sau khi airdrop\n                const feePayerBalance = await connection.getBalance(feePayer.publicKey);\n                console.log(`\\n5. Thông tin fee payer:`);\n                console.log(`- Địa chỉ: ${feePayer.publicKey.toString()}`);\n                console.log(`- Số dư: ${feePayerBalance / LAMPORTS_PER_SOL} SOL`);\n                \n                if (feePayerBalance === 0) {\n                  throw new Error('Không thể airdrop SOL cho fee payer');\n                }\n              } catch (airdropError) {\n                console.warn('\\n5. Lỗi airdrop SOL:', airdropError);\n              }\n              \n              // Tạo transaction với verify_and_execute instruction\n              const transferTx = createTransferTx(\n                multisigPDA,\n                guardianPDA,\n                destinationPublicKey,\n                amountLamports,\n                nextNonce,\n                timestamp,\n                messageBytes, // Sử dụng messageBytes (chưa hash) cho verify_and_execute\n                feePayer.publicKey\n              );\n              \n              // Đặt secp256r1 instruction là ix đầu tiên\n              transferTx.instructions.unshift(secp256r1Ix);\n              \n              // Đặt fee payer và blockhash\n              transferTx.feePayer = feePayer.publicKey;\n              const { blockhash } = await connection.getLatestBlockhash();\n              transferTx.recentBlockhash = blockhash;\n              \n              // Ký transaction bằng fee payer\n              transferTx.sign(feePayer);\n              \n              console.log('\\n6. Chi tiết transaction:');\n              console.log('- Fee payer:', feePayer.publicKey.toString());\n              console.log('- Recent blockhash:', blockhash);\n              console.log('- Số lượng instructions:', transferTx.instructions.length);\n              \n              console.log('\\n7. Chi tiết từng instruction:');\n              transferTx.instructions.forEach((ix, index) => {\n                console.log(`\\nInstruction ${index}:`);\n                console.log('- Program ID:', ix.programId.toString());\n                console.log('- Data length:', ix.data.length);\n                console.log('- Keys:', ix.keys.map(k => ({\n                  pubkey: k.pubkey.toString(),\n                  isSigner: k.isSigner,\n                  isWritable: k.isWritable\n                })));\n              });\n              \n              // Gửi transaction\n              setTxStatus(TransactionStatus.SUBMITTING);\n              \n              try {\n                console.log('\\n8. Đang gửi transaction...');\n                const transactionId = await connection.sendRawTransaction(transferTx.serialize(), {\n                  skipPreflight: true,\n                  preflightCommitment: 'confirmed'\n                });\n                \n                console.log('Transaction ID:', transactionId);\n                setTxId(transactionId);\n                \n                // Chờ xác nhận\n                setTxStatus(TransactionStatus.CONFIRMING);\n                \n                console.log('\\n9. Đang chờ xác nhận transaction...');\n                const confirmation = await connection.confirmTransaction(transactionId, 'confirmed');\n                \n                if (confirmation.value.err) {\n                  console.error('\\n10. Lỗi xác nhận transaction:');\n                  console.error(JSON.stringify(confirmation.value.err, null, 2));\n                  \n                  // Phân tích lỗi chi tiết\n                  if (confirmation.value.err.InstructionError) {\n                    const [index, error] = confirmation.value.err.InstructionError;\n                    console.error(`\\nLỗi tại instruction ${index}:`);\n                    console.error(error);\n                    \n                    if (error.Custom) {\n                      console.error(`Custom error code: ${error.Custom}`);\n                      if (index === 0) {\n                        console.error('Lỗi xác thực secp256r1! Kiểm tra lại:');\n                        console.error('- Message có đúng không');\n                        console.error('- Public key có đúng định dạng không');\n                        console.error('- Signature có đúng định dạng không');\n                      } else {\n                        console.error('Lỗi tại instruction của chương trình!');\n                      }\n                    }\n                  }\n                  \n                  throw new Error(`Lỗi khi xác nhận giao dịch: ${JSON.stringify(confirmation.value.err)}`);\n                }\n                \n                console.log('\\n10. Transaction thành công!');\n                setTxStatus(TransactionStatus.SUCCESS);\n                setSuccess(`Đã chuyển ${amount} SOL đến ${destinationAddress} thành công! ID giao dịch: ${transactionId}`);\n                setAmount('');\n                setDestinationAddress('');\n                \n                // Gọi callback nếu có\n                if (onTransferSuccess) {\n                  onTransferSuccess();\n                }\n              } catch (sendError: any) {\n                console.error('\\n10. Lỗi gửi transaction:');\n                console.error(sendError);\n                \n                if (sendError instanceof SendTransactionError) {\n                  console.error(\"Chi tiết lỗi:\", sendError.message);\n                  if (sendError.logs) {\n                    console.error(\"Transaction logs:\", sendError.logs);\n                  }\n                }\n                \n                throw sendError;\n              }\n            }\n          }\n        } catch (localStorageError) {\n          console.error('Lỗi khi đọc từ localStorage:', localStorageError);\n        }\n        \n        // Nếu không tìm thấy trong localStorage, thử lấy từ account data\n        console.warn('Không tìm thấy WebAuthn public key trong localStorage, thử lấy từ guardian account...');\n        \n        // Lấy dữ liệu tài khoản guardian để lấy public key\n      const guardianAccount = await connection.getAccountInfo(guardianPDA);\n      \n      if (!guardianAccount) {\n        throw new Error('Không thể tìm thấy thông tin guardian');\n      }\n      \n        // Lấy WebAuthn public key từ guardian account\n        // Giả sử webauthn_pubkey nằm ở vị trí phù hợp trong account data\n        // Offset phụ thuộc vào layout của Anchor account\n        // NOTE: Đây là ví dụ, offset thực tế cần được xác định chính xác dựa trên layout của account\n        // +8 (discriminator) + 32 (wallet) + 8 (guardian_id) + nameLen + 1 (is_active) + 32 (recovery_hash) + 1 (is_owner) = ~82\n        // webauthn_pubkey là Option<[u8; 33]> nên có thêm 1 byte đánh dấu Some(1) hoặc None(0)\n        \n        let webAuthnPubKey: Buffer; \n        // Giả định cho mục đích demo - trong thực tế bạn cần đọc đúng vị trí\n        if (guardianAccount.data.length > 100) {\n          const hasWebAuthnPubKey = guardianAccount.data[83] === 1; // 1 = Some, 0 = None\n          if (hasWebAuthnPubKey) {\n            webAuthnPubKey = Buffer.from(guardianAccount.data.slice(84, 84 + 33));\n          } else {\n            throw new Error('Guardian không có WebAuthn public key trong account data');\n          }\n        } else {\n          // Nếu không thể đọc được dữ liệu, báo lỗi\n          throw new Error('Không thể đọc được public key từ guardian account (dữ liệu quá ngắn)');\n        }\n      } else {\n        // Sử dụng WebAuthn public key từ Firebase\n        console.log('Đã tìm thấy WebAuthn public key trong Firebase:', credentialMapping.guardianPublicKey);\n        // Chuyển đổi từ mảng số về Buffer\n        const webAuthnPubKey = Buffer.from(new Uint8Array(credentialMapping.guardianPublicKey));\n        \n        // Kiểm tra độ dài khóa và định dạng\n        if (webAuthnPubKey.length !== 33) {\n          console.warn(`WebAuthn public key từ Firebase có độ dài không đúng: ${webAuthnPubKey.length} bytes, cần 33 bytes`);\n        }\n        \n        // Kiểm tra byte đầu tiên của khóa\n        const firstByte = webAuthnPubKey[0];\n        console.log(`Byte đầu tiên của public key: 0x${firstByte.toString(16)}`);\n        \n        // Kiểm tra xem có phải khóa dạng nén không\n        if (firstByte !== 0x02 && firstByte !== 0x03) {\n          console.warn(`Public key không phải dạng nén! Byte đầu tiên là 0x${firstByte.toString(16)}, phải là 0x02 hoặc 0x03`);\n        }\n        \n        console.log('Public key chi tiết:');\n        console.log('- Độ dài:', webAuthnPubKey.length, 'bytes');\n        console.log('- Hex:', webAuthnPubKey.toString('hex'));\n        \n        console.log('Signature chi tiết:');\n        console.log('- Độ dài:', normalizedSignature.length, 'bytes');\n        console.log('- Hex:', normalizedSignature.toString('hex'));\n        \n        console.log('Message chi tiết:');\n        console.log('- Độ dài:', messageBytes.length, 'bytes');\n        console.log('- Hex:', Buffer.from(messageBytes).toString('hex'));\n        console.log('- Text:', Buffer.from(messageBytes).toString('utf8'));\n        \n        // Tạo instruction secp256r1\n        setTxStatus(TransactionStatus.BUILDING_TX);\n        \n        console.log('\\n=== CHI TIẾT XÁC THỰC SECP256R1 ===');\n        console.log('1. Thông tin message:');\n        console.log('- Độ dài:', messageBytes.length, 'bytes');\n        console.log('- Nội dung:', Buffer.from(messageBytes).toString('utf8'));\n        console.log('- Hex:', Buffer.from(messageBytes).toString('hex'));\n        \n        console.log('\\n2. Thông tin public key:');\n        console.log('- Độ dài:', webAuthnPubKey.length, 'bytes');\n        console.log('- Byte đầu tiên:', webAuthnPubKey[0].toString(16));\n        console.log('- Hex:', webAuthnPubKey.toString('hex'));\n        \n        console.log('\\n3. Thông tin signature:');\n        console.log('- Độ dài:', normalizedSignature.length, 'bytes');\n        console.log('- Hex:', normalizedSignature.toString('hex'));\n        \n        // QUAN TRỌNG: Sử dụng message gốc (không hash) cho secp256r1 instruction\n        const secp256r1Ix = createSecp256r1Instruction(\n          Buffer.from(messageBytes),  // Message gốc, không hash\n          webAuthnPubKey,\n          normalizedSignature\n        );\n        \n        console.log('\\n4. Chi tiết instruction secp256r1:');\n        console.log('- Program ID:', secp256r1Ix.programId.toString());\n        console.log('- Data length:', secp256r1Ix.data.length);\n        console.log('- Data hex (first 60 chars):', Buffer.from(secp256r1Ix.data).toString('hex').substring(0, 60) + '...');\n        \n        // Tạo ví tạm để trả phí giao dịch\n        const feePayer = web3.Keypair.generate();\n        \n        // Xin SOL airdrop để trả phí\n        try {\n          const airdropSignature = await connection.requestAirdrop(\n            feePayer.publicKey,\n            web3.LAMPORTS_PER_SOL / 50 // 0.02 SOL để trả phí\n          );\n          await connection.confirmTransaction(airdropSignature);\n          \n          // Kiểm tra số dư sau khi airdrop\n          const feePayerBalance = await connection.getBalance(feePayer.publicKey);\n          console.log(`\\n5. Thông tin fee payer:`);\n          console.log(`- Địa chỉ: ${feePayer.publicKey.toString()}`);\n          console.log(`- Số dư: ${feePayerBalance / LAMPORTS_PER_SOL} SOL`);\n          \n          if (feePayerBalance === 0) {\n            throw new Error('Không thể airdrop SOL cho fee payer');\n          }\n        } catch (airdropError) {\n          console.warn('\\n5. Lỗi airdrop SOL:', airdropError);\n        }\n        \n        // Tạo transaction với verify_and_execute instruction\n        const transferTx = createTransferTx(\n          multisigPDA,\n          guardianPDA,\n          destinationPublicKey,\n          amountLamports,\n          nextNonce,\n          timestamp,\n          messageBytes, // Sử dụng messageBytes (chưa hash) cho verify_and_execute\n          feePayer.publicKey\n        );\n        \n        // Đặt secp256r1 instruction là ix đầu tiên\n        transferTx.instructions.unshift(secp256r1Ix);\n        \n        // Đặt fee payer và blockhash\n        transferTx.feePayer = feePayer.publicKey;\n        const { blockhash } = await connection.getLatestBlockhash();\n        transferTx.recentBlockhash = blockhash;\n        \n        // Ký transaction bằng fee payer\n        transferTx.sign(feePayer);\n        \n        console.log('\\n6. Chi tiết transaction:');\n        console.log('- Fee payer:', feePayer.publicKey.toString());\n        console.log('- Recent blockhash:', blockhash);\n        console.log('- Số lượng instructions:', transferTx.instructions.length);\n        \n        console.log('\\n7. Chi tiết từng instruction:');\n        transferTx.instructions.forEach((ix, index) => {\n          console.log(`\\nInstruction ${index}:`);\n          console.log('- Program ID:', ix.programId.toString());\n          console.log('- Data length:', ix.data.length);\n          console.log('- Keys:', ix.keys.map(k => ({\n            pubkey: k.pubkey.toString(),\n            isSigner: k.isSigner,\n            isWritable: k.isWritable\n          })));\n        });\n        \n        // Gửi transaction\n        setTxStatus(TransactionStatus.SUBMITTING);\n        \n        try {\n          console.log('\\n8. Đang gửi transaction...');\n          const transactionId = await connection.sendRawTransaction(transferTx.serialize(), {\n            skipPreflight: true,\n            preflightCommitment: 'confirmed'\n          });\n          \n          console.log('Transaction ID:', transactionId);\n          setTxId(transactionId);\n          \n          // Chờ xác nhận\n          setTxStatus(TransactionStatus.CONFIRMING);\n          \n          console.log('\\n9. Đang chờ xác nhận transaction...');\n          const confirmation = await connection.confirmTransaction(transactionId, 'confirmed');\n          \n          if (confirmation.value.err) {\n            console.error('\\n10. Lỗi xác nhận transaction:');\n            console.error(JSON.stringify(confirmation.value.err, null, 2));\n            \n            // Phân tích lỗi chi tiết\n            if (confirmation.value.err.InstructionError) {\n              const [index, error] = confirmation.value.err.InstructionError;\n              console.error(`\\nLỗi tại instruction ${index}:`);\n              console.error(error);\n              \n              if (error.Custom) {\n                console.error(`Custom error code: ${error.Custom}`);\n                if (index === 0) {\n                  console.error('Lỗi xác thực secp256r1! Kiểm tra lại:');\n                  console.error('- Message có đúng không');\n                  console.error('- Public key có đúng định dạng không');\n                  console.error('- Signature có đúng định dạng không');\n                } else {\n                  console.error('Lỗi tại instruction của chương trình!');\n                }\n              }\n            }\n            \n            throw new Error(`Lỗi khi xác nhận giao dịch: ${JSON.stringify(confirmation.value.err)}`);\n          }\n          \n          console.log('\\n10. Transaction thành công!');\n          setTxStatus(TransactionStatus.SUCCESS);\n          setSuccess(`Đã chuyển ${amount} SOL đến ${destinationAddress} thành công! ID giao dịch: ${transactionId}`);\n          setAmount('');\n          setDestinationAddress('');\n          \n          // Gọi callback nếu có\n          if (onTransferSuccess) {\n            onTransferSuccess();\n          }\n        } catch (sendError: any) {\n          console.error('\\n10. Lỗi gửi transaction:');\n          console.error(sendError);\n          \n          if (sendError instanceof SendTransactionError) {\n            console.error(\"Chi tiết lỗi:\", sendError.message);\n            if (sendError.logs) {\n              console.error(\"Transaction logs:\", sendError.logs);\n            }\n          }\n          \n          throw sendError;\n        }\n      }\n    } catch (error: any) {\n      console.error('Lỗi khi chuyển tiền:', error);\n      setError(error.message || 'Đã xảy ra lỗi khi chuyển tiền');\n      setTxStatus(TransactionStatus.ERROR);\n      \n      // Gọi callback lỗi nếu có\n      if (onTransferError) {\n        onTransferError(error);\n      }\n    } finally {\n      setIsTransferring(false);\n    }\n  };\n  \n  // Render status message dựa trên txStatus\n  const renderStatusMessage = () => {\n    switch (txStatus) {\n      case TransactionStatus.PREPARING:\n        return 'Đang chuẩn bị giao dịch...';\n      case TransactionStatus.SIGNING:\n        return 'Vui lòng xác thực bằng WebAuthn (vân tay hoặc Face ID) khi được yêu cầu...';\n      case TransactionStatus.BUILDING_TX:\n        return 'Đang xây dựng giao dịch...';\n      case TransactionStatus.SUBMITTING:\n        return 'Đang gửi giao dịch lên blockchain...';\n      case TransactionStatus.CONFIRMING:\n        return 'Đang chờ xác nhận giao dịch...';\n      case TransactionStatus.SUCCESS:\n        return 'Giao dịch thành công!';\n      case TransactionStatus.ERROR:\n        return 'Giao dịch thất bại!';\n      default:\n        return '';\n    }\n  };\n  \n  // Hiển thị ghi chú về validator cục bộ\n  const renderValidatorNote = () => {\n    if (connectionEndpoint.includes('localhost') || connectionEndpoint.includes('127.0.0.1')) {\n      return (\n        <div className=\"info-note\">\n          <p><strong>Lưu ý:</strong> Bạn đang kết nối đến validator cục bộ.</p>\n          <p>Cần khởi động validator với các tham số đúng để cài đặt chương trình MoonWallet:</p>\n          <pre>\n            solana-test-validator --bpf-program {programID.toString()} path/to/moon_wallet.so\n          </pre>\n        </div>\n      );\n    }\n    return null;\n  };\n  \n  return (\n    <div className=\"transfer-form\">\n      <h2>Chuyển SOL</h2>\n      \n      <div className=\"wallet-info\">\n        <p>Kết nối đến: <strong>{connectionEndpoint}</strong></p>\n        <p>Số dư hiện tại: <strong>{pdaBalance.toFixed(5)} SOL</strong></p>\n        \n        {/* Hiển thị trạng thái MoonWallet program */}\n        <div className={!isMoonWalletAvailable ? \"warning-message\" : \"info-message\"}>\n          <p><strong>Trạng thái chương trình:</strong></p>\n          <ul>\n            <li>\n              <span className={isMoonWalletAvailable ? \"status-ok\" : \"status-error\"}>\n                {isMoonWalletAvailable ? '✅' : '❌'}\n              </span> \n              MoonWallet: <code>{programID.toString()}</code>\n            </li>\n          </ul>\n          \n          {renderValidatorNote()}\n          \n          {!isMoonWalletAvailable && (\n            <div>\n              <p><strong>Lưu ý:</strong> Chương trình MoonWallet chưa được cài đặt trên validator.</p>\n              <p>Để cài đặt, chạy validator với lệnh:</p>\n              <pre>\n                solana-test-validator --bpf-program {programID.toString()} path/to/moon_wallet.so\n              </pre>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"destination\">Địa chỉ đích:</label>\n          <input\n            type=\"text\"\n            id=\"destination\"\n            value={destinationAddress}\n            onChange={handleDestinationChange}\n            placeholder=\"Nhập địa chỉ Solana\"\n            disabled={isTransferring}\n            required\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Số lượng SOL:</label>\n          <input\n            type=\"text\"\n            id=\"amount\"\n            value={amount}\n            onChange={handleAmountChange}\n            placeholder=\"Ví dụ: 0.1\"\n            disabled={isTransferring}\n            required\n          />\n        </div>\n        \n        {success && <div className=\"success-message\">{success}</div>}\n        {error && <div className=\"error-message\">{error}</div>}\n        \n        {txStatus !== TransactionStatus.IDLE && (\n          <div className=\"status-message\">\n            <p>{renderStatusMessage()}</p>\n            {txStatus === TransactionStatus.CONFIRMING && (\n              <div className=\"loading-indicator\">Đang xác nhận...</div>\n            )}\n            {txId && (\n              <p className=\"transaction-id\">\n                ID Giao dịch: <a href={`https://explorer.solana.com/tx/${txId}`} target=\"_blank\" rel=\"noopener noreferrer\">{txId.slice(0, 8)}...{txId.slice(-8)}</a>\n              </p>\n            )}\n          </div>\n        )}\n        \n        <button \n          type=\"submit\" \n          className=\"primary-button\" \n          disabled={isTransferring || !isMoonWalletAvailable}\n        >\n          {isTransferring ? 'Đang xử lý...' : 'Chuyển SOL'}\n        </button>\n      </form>\n      \n      <style>\n        {`\n          .success-message, .error-message, .warning-message, .info-message {\n            margin: 12px 0;\n            padding: 10px;\n            border-radius: 4px;\n            font-weight: 500;\n          }\n          \n          .success-message {\n            background-color: rgba(0, 200, 83, 0.1);\n            color: #00C853;\n            border: 1px solid #00C853;\n          }\n          \n          .error-message {\n            background-color: rgba(255, 87, 34, 0.1);\n            color: #FF5722;\n            border: 1px solid #FF5722;\n          }\n          \n          .warning-message {\n            background-color: rgba(255, 152, 0, 0.1);\n            color: #FF9800;\n            border: 1px solid #FF9800;\n          }\n          \n          .info-message {\n            background-color: rgba(33, 150, 243, 0.1);\n            color: #333;\n            border: 1px solid #2196F3;\n          }\n          \n          .status-message {\n            margin: 12px 0;\n            padding: 10px;\n            background-color: rgba(33, 150, 243, 0.1);\n            border: 1px solid #2196F3;\n            border-radius: 4px;\n            color: #2196F3;\n          }\n          \n          .loading-indicator {\n            margin-top: 8px;\n            font-style: italic;\n          }\n          \n          .transaction-id {\n            margin-top: 8px;\n            word-break: break-all;\n            font-size: 14px;\n          }\n          \n          .transaction-id a {\n            color: #2196F3;\n            text-decoration: none;\n          }\n          \n          .transaction-id a:hover {\n            text-decoration: underline;\n          }\n          \n          .status-ok {\n            color: #00C853;\n          }\n          \n          .status-error {\n            color: #FF5722;\n          }\n          \n          pre {\n            background-color: #f5f5f5;\n            padding: 10px;\n            border-radius: 4px;\n            overflow-x: auto;\n            font-size: 12px;\n          }\n          \n          ul {\n            padding-left: 20px;\n          }\n          \n          code {\n            font-family: monospace;\n            background-color: #f5f5f5;\n            padding: 2px 4px;\n            border-radius: 2px;\n          }\n          \n          .info-note {\n            margin-top: 12px;\n            padding: 8px;\n            background-color: #f8f9fa;\n            border-left: 4px solid #2196F3;\n            font-size: 0.9em;\n          }\n        `}\n      </style>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}