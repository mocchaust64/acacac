{"ast":null,"code":"var _jsxFileName = \"/Users/tai/Documents/MoonWallet/moonwallet/frontend_test/src/components/TransferForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PublicKey, Transaction, SendTransactionError } from '@solana/web3.js';\nimport { web3 } from '@coral-xyz/anchor';\n// Xóa useConnection hook vì sẽ nhận connection từ props\n// import { useConnection } from '@solana/wallet-adapter-react';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport { createTransferTx, createSecp256r1Instruction, programID, SECP256R1_PROGRAM_ID } from '../utils/transactionUtils';\nimport { getWebAuthnAssertion } from '../utils/webauthnUtils';\nimport { getGuardianPDA, getMultisigPDA } from '../utils/credentialUtils';\nimport { getWalletByCredentialId } from '../firebase/webAuthnService';\nimport { Buffer } from 'buffer';\nimport BN from 'bn.js';\n\n// Thêm hằng số cho chuẩn hóa signature\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECP256R1_ORDER = new BN('FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551', 16);\nconst SECP256R1_HALF_ORDER = SECP256R1_ORDER.shrn(1);\n\n/**\n * Chuẩn hóa chữ ký về dạng Low-S\n * @param signature - Chữ ký raw\n * @returns Chữ ký đã chuẩn hóa\n */\nconst normalizeSignatureToLowS = sig => {\n  const r = sig.slice(0, 32);\n  const s = sig.slice(32, 64);\n  const sBN = new BN(s);\n  console.log(\"S value (BN):\", sBN.toString(16));\n  console.log(\"HALF_ORDER:\", SECP256R1_HALF_ORDER.toString(16));\n\n  // Kiểm tra nếu s > half_order\n  if (sBN.gt(SECP256R1_HALF_ORDER)) {\n    console.log(\"Chuẩn hóa signature về dạng Low-S\");\n    // Tính s' = order - s\n    const sNormalized = SECP256R1_ORDER.sub(sBN);\n    console.log(\"S normalized:\", sNormalized.toString(16));\n    const sNormalizedBuffer = sNormalized.toArrayLike(Buffer, 'be', 32);\n    return Buffer.concat([r, sNormalizedBuffer]);\n  }\n  console.log(\"Signature đã ở dạng Low-S\");\n  return sig;\n};\n\n// Hàm chuyển đổi chữ ký DER sang raw (r, s) format\nconst convertDERtoRaw = derSignature => {\n  // Đảm bảo đây là DER signature\n  if (derSignature[0] !== 0x30) {\n    console.error('Chữ ký không phải định dạng DER');\n    return new Uint8Array(64); // Trả về buffer rỗng nếu không đúng định dạng\n  }\n\n  // Parse DER format\n  // Format: 0x30 [total-length] 0x02 [r-length] [r] 0x02 [s-length] [s]\n  const rLength = derSignature[3];\n  const rStart = 4;\n  const rEnd = rStart + rLength;\n  const sLength = derSignature[rEnd + 1];\n  const sStart = rEnd + 2;\n  const sEnd = sStart + sLength;\n\n  // Trích xuất r và s\n  let r = derSignature.slice(rStart, rEnd);\n  let s = derSignature.slice(sStart, sEnd);\n\n  // Cần đảm bảo r và s đúng 32 bytes\n  // - Nếu dài hơn 32 bytes, cắt bớt (thường r và s có thể có padding)\n  // - Nếu ngắn hơn 32 bytes, thêm padding 0 vào đầu\n  const rPadded = new Uint8Array(32);\n  const sPadded = new Uint8Array(32);\n  if (r.length <= 32) {\n    // Trường hợp r ngắn hơn 32 bytes, thêm padding\n    rPadded.set(r, 32 - r.length);\n  } else {\n    // Trường hợp r dài hơn 32 bytes, cắt bớt (thường là byte đầu tiên là 0)\n    rPadded.set(r.slice(r.length - 32));\n  }\n  if (s.length <= 32) {\n    // Trường hợp s ngắn hơn 32 bytes, thêm padding\n    sPadded.set(s, 32 - s.length);\n  } else {\n    // Trường hợp s dài hơn 32 bytes, cắt bớt (thường là byte đầu tiên là 0)\n    sPadded.set(s.slice(s.length - 32));\n  }\n\n  // Nối r và s lại\n  const rawSignature = new Uint8Array(64);\n  rawSignature.set(rPadded);\n  rawSignature.set(sPadded, 32);\n  console.log('Đã chuyển đổi signature từ DER sang raw format:');\n  console.log('- DER length:', derSignature.length);\n  console.log('- Raw length:', rawSignature.length);\n  return rawSignature;\n};\n\n// Interface cho props của component\n// Enum cho các trạng thái giao dịch\nvar TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[\"IDLE\"] = \"idle\";\n  TransactionStatus[\"PREPARING\"] = \"preparing\";\n  TransactionStatus[\"SIGNING\"] = \"signing\";\n  TransactionStatus[\"BUILDING_TX\"] = \"building_tx\";\n  TransactionStatus[\"SUBMITTING\"] = \"submitting\";\n  TransactionStatus[\"CONFIRMING\"] = \"confirming\";\n  TransactionStatus[\"SUCCESS\"] = \"success\";\n  TransactionStatus[\"ERROR\"] = \"error\";\n  return TransactionStatus;\n}(TransactionStatus || {}); // Thêm enum để theo dõi trạng thái xác minh chữ ký\nvar VerificationStatus = /*#__PURE__*/function (VerificationStatus) {\n  VerificationStatus[\"IDLE\"] = \"idle\";\n  VerificationStatus[\"VERIFYING\"] = \"verifying\";\n  VerificationStatus[\"SUCCESS\"] = \"success\";\n  VerificationStatus[\"ERROR\"] = \"error\";\n  return VerificationStatus;\n}(VerificationStatus || {});\nexport const TransferForm = ({\n  walletAddress,\n  credentialId,\n  guardianId,\n  onTransferSuccess,\n  onTransferError,\n  // Thêm connection và pdaBalance vào tham số destructuring\n  connection,\n  pdaBalance = 0\n}) => {\n  _s();\n  // State\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [isTransferring, setIsTransferring] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [walletBalance, setWalletBalance] = useState(0);\n  const [nonce, setNonce] = useState(0);\n  const [txStatus, setTxStatus] = useState(TransactionStatus.IDLE);\n  const [txId, setTxId] = useState('');\n  const [isMoonWalletAvailable, setIsMoonWalletAvailable] = useState(false);\n  const [connectionEndpoint, setConnectionEndpoint] = useState('');\n  // Thêm state cho chức năng xác minh chữ ký\n  const [verificationStatus, setVerificationStatus] = useState(VerificationStatus.IDLE);\n  const [verificationMessage, setVerificationMessage] = useState('');\n\n  // Kiểm tra chương trình MoonWallet\n  useEffect(() => {\n    const checkPrograms = async () => {\n      try {\n        // Lấy endpoint của connection để hiển thị\n        const endpoint = connection.rpcEndpoint;\n        setConnectionEndpoint(endpoint);\n        console.log(\"Đang kết nối đến:\", endpoint);\n\n        // Chỉ kiểm tra chương trình MoonWallet\n        try {\n          const moonWalletInfo = await connection.getAccountInfo(programID);\n          setIsMoonWalletAvailable(moonWalletInfo !== null);\n          if (moonWalletInfo === null) {\n            console.warn(\"Chương trình MoonWallet không tồn tại trên validator này!\");\n          } else {\n            console.log(\"Đã tìm thấy chương trình MoonWallet:\", programID.toString());\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi kiểm tra chương trình MoonWallet:\", error);\n          setIsMoonWalletAvailable(false);\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi kiểm tra chương trình:\", error);\n      }\n    };\n    checkPrograms();\n  }, [connection]);\n\n  // Cập nhật walletBalance khi pdaBalance thay đổi\n  useEffect(() => {\n    if (pdaBalance !== undefined) {\n      setWalletBalance(pdaBalance);\n    }\n  }, [pdaBalance]);\n\n  // Lấy số dư ví và nonce hiện tại từ blockchain\n  useEffect(() => {\n    const loadWalletInfo = async () => {\n      try {\n        if (!walletAddress) return;\n\n        // Tính PDA của ví từ credential ID\n        const multisigPDA = await getMultisigPDA(credentialId);\n\n        // Lấy thông tin account\n        const accountInfo = await connection.getAccountInfo(multisigPDA);\n        if (!accountInfo) {\n          console.error('Không tìm thấy thông tin ví');\n          return;\n        }\n        try {\n          // Đọc nonce từ account data (từ vị trí thích hợp theo layout)\n          // Giả sử nonce nằm ở offset 18 (8 bytes for discriminator + 1 byte threshold + 1 byte guardian_count + 8 bytes recovery_nonce)\n          const transactionNonce = accountInfo.data.readBigUInt64LE(18);\n          setNonce(Number(transactionNonce));\n          console.log(\"Transaction nonce hiện tại:\", Number(transactionNonce));\n        } catch (error) {\n          console.error(\"Lỗi khi đọc nonce từ account data:\", error);\n          // Fallback về nonce = 0 nếu không đọc được\n          setNonce(0);\n        }\n      } catch (error) {\n        console.error('Lỗi khi tải thông tin ví:', error);\n      }\n    };\n    loadWalletInfo();\n  }, [walletAddress, credentialId, connection]);\n\n  // Xử lý khi nhập địa chỉ đích\n  const handleDestinationChange = e => {\n    setDestinationAddress(e.target.value);\n    // Reset thông báo lỗi và thành công\n    setError('');\n    setSuccess('');\n    setTxStatus(TransactionStatus.IDLE);\n    setTxId('');\n  };\n\n  // Xử lý khi nhập số lượng SOL\n  const handleAmountChange = e => {\n    // Chỉ cho phép nhập số dương và dấu chấm (số thập phân)\n    const value = e.target.value;\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setAmount(value);\n      // Reset thông báo lỗi và thành công\n      setError('');\n      setSuccess('');\n      setTxStatus(TransactionStatus.IDLE);\n      setTxId('');\n    }\n  };\n\n  // Xử lý khi submit form\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsTransferring(true);\n    setError('');\n    setSuccess('');\n    setTxStatus(TransactionStatus.PREPARING);\n    setTxId('');\n    try {\n      // Kiểm tra nếu MoonWallet program không khả dụng\n      if (!isMoonWalletAvailable) {\n        let errorMsg = \"Không thể thực hiện giao dịch vì chương trình MoonWallet không tồn tại trên validator.\\n\";\n        errorMsg += `Địa chỉ chương trình: ${programID.toString()}\\n\\n`;\n        errorMsg += `Đảm bảo chạy validator với lệnh:\\n`;\n        errorMsg += `solana-test-validator --bpf-program ${programID.toString()} path/to/moon_wallet.so`;\n        throw new Error(errorMsg);\n      }\n\n      // Kiểm tra đầu vào\n      if (!destinationAddress) {\n        throw new Error('Vui lòng nhập địa chỉ đích');\n      }\n      if (!amount || parseFloat(amount) <= 0) {\n        throw new Error('Vui lòng nhập số lượng SOL hợp lệ');\n      }\n\n      // Chuyển đổi SOL sang lamports\n      const amountLamports = parseFloat(amount) * LAMPORTS_PER_SOL;\n\n      // Kiểm tra số dư\n      const balance = await connection.getBalance(multisigPDA);\n      if (balance < amountLamports) {\n        throw new Error(`Số dư không đủ. Hiện tại: ${balance / LAMPORTS_PER_SOL} SOL, Cần: ${amount} SOL`);\n      }\n\n      // Kiểm tra địa chỉ hợp lệ\n      let destinationPublicKey;\n      try {\n        destinationPublicKey = new PublicKey(destinationAddress);\n      } catch (error) {\n        throw new Error('Địa chỉ đích không hợp lệ');\n      }\n\n      // Tạo ví tạm để trả phí giao dịch\n      const feePayer = web3.Keypair.generate();\n\n      // Xin SOL airdrop để trả phí\n      try {\n        const airdropSignature = await connection.requestAirdrop(feePayer.publicKey, web3.LAMPORTS_PER_SOL / 50 // 0.02 SOL để trả phí\n        );\n        await connection.confirmTransaction(airdropSignature);\n\n        // Kiểm tra số dư sau khi airdrop\n        const feePayerBalance = await connection.getBalance(feePayer.publicKey);\n        console.log(`Fee payer balance: ${feePayerBalance / LAMPORTS_PER_SOL} SOL`);\n        if (feePayerBalance === 0) {\n          throw new Error(\"Không thể airdrop SOL cho fee payer\");\n        }\n      } catch (airdropError) {\n        console.warn(\"Không thể airdrop SOL để trả phí:\", airdropError);\n        // Tiếp tục thực hiện vì có thể account đã có sẵn SOL\n      }\n\n      // Thêm 1 vào nonce hiện tại\n      const nextNonce = nonce + 1;\n\n      // Lấy timestamp hiện tại (giây)\n      const timestamp = Math.floor(Date.now() / 1000);\n\n      // LẤY WEBAUTHN PUBLIC KEY\n      console.log('Lấy WebAuthn public key...');\n      let webAuthnPubKey;\n\n      // Thử tìm trong Firebase\n      const credentialMapping = await getWalletByCredentialId(credentialId);\n      if (!credentialMapping || !credentialMapping.guardianPublicKey || credentialMapping.guardianPublicKey.length === 0) {\n        // Thử tìm trong localStorage\n        console.log('Không tìm thấy trong Firebase, thử tìm trong localStorage...');\n        const localStorageData = localStorage.getItem('webauthn_credential_' + credentialId);\n        if (localStorageData) {\n          const localMapping = JSON.parse(localStorageData);\n          if (localMapping && localMapping.guardianPublicKey && localMapping.guardianPublicKey.length > 0) {\n            webAuthnPubKey = Buffer.from(new Uint8Array(localMapping.guardianPublicKey));\n          } else {\n            throw new Error('Không tìm thấy WebAuthn public key trong localStorage');\n          }\n        } else {\n          throw new Error('Không tìm thấy WebAuthn public key');\n        }\n      } else {\n        // Sử dụng WebAuthn public key từ Firebase\n        webAuthnPubKey = Buffer.from(new Uint8Array(credentialMapping.guardianPublicKey));\n      }\n\n      // Kiểm tra độ dài khóa\n      if (webAuthnPubKey.length !== 33) {\n        console.warn(`WebAuthn public key có độ dài không đúng: ${webAuthnPubKey.length} bytes, cần 33 bytes`);\n      }\n\n      // Tính hash của public key và lấy 6 bytes đầu dưới dạng hex\n      const pubkeyHashBuffer = await crypto.subtle.digest('SHA-256', webAuthnPubKey);\n      const pubkeyHashBytes = new Uint8Array(pubkeyHashBuffer).slice(0, 6);\n      const pubkeyHashHex = Array.from(pubkeyHashBytes).map(b => b.toString(16).padStart(2, '0')).join('');\n      console.log('Public key hash (6 bytes):', pubkeyHashHex);\n\n      // Format số lượng SOL để khớp với Rust\n      // Rust sẽ tính lại: amount as f64 / 1_000_000_000.0\n      const formattedAmount = (amountLamports / LAMPORTS_PER_SOL).toString();\n\n      // Tạo message chuẩn theo format mới với pubkeyHash\n      // Đảm bảo định dạng khớp chính xác với contract\n      const messageString = `transfer:${formattedAmount}_SOL_to_${destinationAddress},nonce:${nextNonce},timestamp:${timestamp},pubkey:${pubkeyHashHex}`;\n      console.log('Message gốc:', messageString);\n      console.log('Message gửi đến contract (bytes):', Array.from(new TextEncoder().encode(messageString)));\n\n      // Chuyển message thành bytes\n      const messageBytes = new TextEncoder().encode(messageString);\n\n      // Lấy PDA từ credential ID\n      const multisigPDA = await getMultisigPDA(credentialId);\n      console.log('MultisigPDA:', multisigPDA.toBase58());\n\n      // Lấy PDA của guardian\n      const guardianPDA = await getGuardianPDA(multisigPDA, guardianId);\n      console.log('GuardianPDA:', guardianPDA.toBase58());\n\n      // Thử ký bằng WebAuthn\n      setTxStatus(TransactionStatus.SIGNING);\n\n      // Hiển thị thông báo\n      console.log('Đang yêu cầu xác thực WebAuthn...');\n      setError(''); // Xóa thông báo lỗi trước đó\n      setSuccess('Đang hiển thị danh sách khóa WebAuthn, vui lòng chọn khóa để xác thực giao dịch...');\n\n      // Sử dụng trực tiếp message làm dữ liệu để ký với WebAuthn\n      const assertion = await getWebAuthnAssertion(credentialId, messageString, true);\n      if (!assertion) {\n        throw new Error('Lỗi khi ký message bằng WebAuthn hoặc người dùng đã hủy xác thực');\n      }\n      console.log('Đã ký thành công bằng WebAuthn');\n      console.log('ClientDataJSON:', new TextDecoder().decode(assertion.clientDataJSON));\n      setSuccess(''); // Xóa thông báo thành công tạm thời\n\n      // Chuyển đổi signature từ DER sang raw format (r, s)\n      const derToRaw = derSignature => {\n        try {\n          // Kiểm tra format DER\n          if (derSignature[0] !== 0x30) {\n            throw new Error('Chữ ký không đúng định dạng DER: byte đầu tiên không phải 0x30');\n          }\n\n          // DER format: 0x30 [total-length] 0x02 [r-length] [r] 0x02 [s-length] [s]\n          const rLength = derSignature[3];\n          const rStart = 4;\n          const rEnd = rStart + rLength;\n          const sLength = derSignature[rEnd + 1];\n          const sStart = rEnd + 2;\n          const sEnd = sStart + sLength;\n\n          // Trích xuất r và s\n          let r = derSignature.slice(rStart, rEnd);\n          let s = derSignature.slice(sStart, sEnd);\n          console.log('DER r length:', r.length, 'r (hex):', Buffer.from(r).toString('hex'));\n          console.log('DER s length:', s.length, 's (hex):', Buffer.from(s).toString('hex'));\n\n          // Chuẩn bị r và s cho định dạng raw (mỗi phần 32 bytes)\n          const rPadded = new Uint8Array(32);\n          const sPadded = new Uint8Array(32);\n          if (r.length <= 32) {\n            // Trường hợp r ngắn hơn 32 bytes, thêm padding\n            rPadded.set(r, 32 - r.length);\n          } else {\n            // Trường hợp r dài hơn 32 bytes (thường là có byte 0x00 ở đầu), lấy 32 bytes cuối\n            rPadded.set(r.slice(r.length - 32));\n          }\n          if (s.length <= 32) {\n            // Trường hợp s ngắn hơn 32 bytes, thêm padding\n            sPadded.set(s, 32 - s.length);\n          } else {\n            // Trường hợp s dài hơn 32 bytes, lấy 32 bytes cuối\n            sPadded.set(s.slice(s.length - 32));\n          }\n\n          // Nối r và s lại\n          const rawSignature = new Uint8Array(64);\n          rawSignature.set(rPadded);\n          rawSignature.set(sPadded, 32);\n          return rawSignature;\n        } catch (e) {\n          console.error('Lỗi khi chuyển đổi DER sang raw:', e);\n          throw e;\n        }\n      };\n      const rawSignature = derToRaw(assertion.signature);\n      const signature = Buffer.from(rawSignature);\n      console.log('Signature sau khi chuyển đổi (raw format):', signature.toString('hex'));\n\n      // Chuẩn hóa signature về dạng Low-S\n      const normalizedSignature = normalizeSignatureToLowS(signature);\n      console.log(\"Signature sau khi chuẩn hóa (Low-S format):\", normalizedSignature.toString(\"hex\"));\n\n      // Tạo instruction secp256r1\n      setTxStatus(TransactionStatus.BUILDING_TX);\n\n      // ĐÚNG QUY TRÌNH XÁC MINH WEBAUTHN:\n      // 1. Tính hash của clientDataJSON\n      const clientDataHash = await crypto.subtle.digest('SHA-256', assertion.clientDataJSON);\n      const clientDataHashBytes = new Uint8Array(clientDataHash);\n      console.log('clientDataJSON hash:', Buffer.from(clientDataHashBytes).toString('hex'));\n\n      // 2. Tạo verification data đúng cách: authenticatorData + hash(clientDataJSON)\n      const verificationData = new Uint8Array(assertion.authenticatorData.length + clientDataHashBytes.length);\n      verificationData.set(new Uint8Array(assertion.authenticatorData), 0);\n      verificationData.set(clientDataHashBytes, assertion.authenticatorData.length);\n      console.log('Verification data length:', verificationData.length);\n      console.log('Verification data (hex):', Buffer.from(verificationData).toString('hex'));\n\n      // Tạo instruction cho secp256r1 với verification data\n      const secp256r1Ix = createSecp256r1Instruction(Buffer.from(verificationData),\n      // Sử dụng verification data\n      webAuthnPubKey,\n      // publicKey\n      normalizedSignature,\n      // signature đã chuẩn hóa\n      false // Không đảo ngược public key\n      );\n      console.log(\"Secp256r1 instruction data:\", {\n        programId: secp256r1Ix.programId.toString(),\n        dataLength: secp256r1Ix.data.length,\n        dataHex: Buffer.from(secp256r1Ix.data).toString('hex').substring(0, 60) + '...',\n        pubkeyLength: webAuthnPubKey.length,\n        signatureLength: normalizedSignature.length,\n        messageLength: verificationData.length\n      });\n\n      // Tiếp tục quá trình xử lý transaction như bình thường\n      const transferTx = createTransferTx(multisigPDA, guardianPDA, destinationPublicKey, amountLamports, nextNonce, timestamp, Buffer.from(messageBytes),\n      // Sử dụng message gốc, không phải hash\n      feePayer.publicKey);\n\n      // QUAN TRỌNG: Đặt secp256r1 instruction là ix đầu tiên (phải đứng trước verify_and_execute)\n      transferTx.instructions.unshift(secp256r1Ix);\n\n      // Đặt fee payer và blockhash\n      transferTx.feePayer = feePayer.publicKey;\n      const {\n        blockhash\n      } = await connection.getLatestBlockhash();\n      transferTx.recentBlockhash = blockhash;\n\n      // Ký transaction bằng fee payer\n      transferTx.sign(feePayer);\n\n      // Log transaction để debug\n      console.log(\"Transaction info:\", {\n        feePayer: feePayer.publicKey.toString(),\n        instructions: transferTx.instructions.map(ix => ({\n          programId: ix.programId.toString(),\n          keys: ix.keys.map(k => ({\n            pubkey: k.pubkey.toString(),\n            isSigner: k.isSigner,\n            isWritable: k.isWritable\n          })),\n          dataSize: ix.data.length\n        }))\n      });\n\n      // Gửi transaction\n      setTxStatus(TransactionStatus.SUBMITTING);\n      try {\n        console.log('Sending transaction with secp256r1 instruction...');\n        console.log('Skip preflight:', true);\n        const transactionId = await connection.sendRawTransaction(transferTx.serialize(), {\n          skipPreflight: true,\n          // Bỏ qua preflight để tránh lỗi với instruction phức tạp\n          preflightCommitment: 'confirmed'\n        });\n        console.log('Transaction đã được gửi với ID:', transactionId);\n        setTxId(transactionId);\n        console.log('Transaction ID:', transactionId);\n\n        // Chờ xác nhận\n        setTxStatus(TransactionStatus.CONFIRMING);\n        const confirmation = await connection.confirmTransaction(transactionId, 'confirmed');\n        if (confirmation.value.err) {\n          throw new Error(`Lỗi khi xác nhận giao dịch: ${JSON.stringify(confirmation.value.err)}`);\n        }\n\n        // Hiển thị thông báo thành công\n        setTxStatus(TransactionStatus.SUCCESS);\n        setSuccess(`Đã chuyển ${amount} SOL đến ${destinationAddress} thành công! ID giao dịch: ${transactionId}`);\n        setAmount('');\n        setDestinationAddress('');\n\n        // Gọi callback nếu có\n        if (onTransferSuccess) {\n          onTransferSuccess();\n        }\n        return; // Không tiếp tục chạy code bên dưới\n      } catch (sendError) {\n        // Xử lý lỗi SendTransactionError\n        if (sendError instanceof SendTransactionError) {\n          console.error(\"Transaction simulation failed:\", sendError);\n          console.error(\"Error details:\", sendError.message);\n          if (sendError.logs) {\n            console.error(\"Transaction logs:\", sendError.logs);\n          }\n\n          // Cố gắng lấy logs chi tiết\n          let logs = \"\";\n          try {\n            if (sendError.logs && Array.isArray(sendError.logs)) {\n              logs = sendError.logs.join('\\n');\n            } else {\n              logs = \"Không có logs chi tiết.\";\n            }\n          } catch (logError) {\n            logs = \"Không thể lấy logs chi tiết.\";\n          }\n\n          // Phân tích lỗi để đưa ra hướng dẫn cụ thể\n          let errorMessage = `Lỗi khi gửi giao dịch: ${sendError.message}\\n\\n`;\n          if (logs.includes(\"Attempt to load a program that does not exist\")) {\n            // Xử lý lỗi chương trình không tồn tại\n            if (logs.includes(programID.toString())) {\n              errorMessage += `Chương trình MoonWallet chưa được cài đặt trên validator.\\n`;\n              errorMessage += `Địa chỉ chương trình: ${programID.toString()}\\n\\n`;\n              errorMessage += `Hãy cài đặt chương trình với lệnh:\\n`;\n              errorMessage += `solana-test-validator --bpf-program ${programID.toString()} path/to/moon_wallet.so`;\n            } else if (logs.includes(SECP256R1_PROGRAM_ID.toString())) {\n              errorMessage += `Chương trình Secp256r1 chưa được cài đặt trên validator.\\n`;\n              errorMessage += `Địa chỉ chương trình: ${SECP256R1_PROGRAM_ID.toString()}\\n\\n`;\n              errorMessage += `Hãy cài đặt chương trình với lệnh:\\n`;\n              errorMessage += `solana-test-validator --bpf-program ${SECP256R1_PROGRAM_ID.toString()} path/to/secp256r1_verify.so`;\n            } else {\n              errorMessage += `Một chương trình cần thiết không tồn tại trên validator.\\n\\n`;\n              errorMessage += `Chi tiết lỗi: ${logs}\\n\\n`;\n              errorMessage += `Thông tin kết nối:\\n`;\n              errorMessage += `- Endpoint validator: ${connectionEndpoint}\\n`;\n            }\n          } else {\n            // Lỗi khác\n            errorMessage += `Chi tiết lỗi: ${logs}\\n\\n`;\n            errorMessage += `Thông tin kết nối:\\n`;\n            errorMessage += `- Endpoint validator: ${connectionEndpoint}\\n`;\n            errorMessage += `- MoonWallet Program: ${isMoonWalletAvailable ? '✅ Đã cài đặt' : '❌ Chưa cài đặt'} (${programID.toString()})`;\n          }\n          throw new Error(errorMessage);\n        } else {\n          throw sendError;\n        }\n      }\n    } catch (error) {\n      console.error('Lỗi khi chuyển tiền:', error);\n      setError(error.message || 'Đã xảy ra lỗi khi chuyển tiền');\n      setTxStatus(TransactionStatus.ERROR);\n\n      // Gọi callback lỗi nếu có\n      if (onTransferError) {\n        onTransferError(error);\n      }\n    } finally {\n      setIsTransferring(false);\n    }\n  };\n\n  // Hàm chỉ xác minh chữ ký, không thực hiện chuyển tiền\n  const handleVerifySignatureOnly = async () => {\n    setVerificationStatus(VerificationStatus.VERIFYING);\n    setVerificationMessage('');\n    try {\n      // Tạo message mẫu để xác minh (có thể thay đổi theo yêu cầu)\n      const testMessage = `Test message for signature verification,timestamp:${Math.floor(Date.now() / 1000)}`;\n      console.log('Message gốc:', testMessage);\n\n      // Chuyển message thành bytes\n      const messageBytes = new TextEncoder().encode(testMessage);\n      console.log('Message bytes (UTF-8):', Array.from(messageBytes));\n      console.log('Message bytes (hex):', Array.from(messageBytes).map(b => b.toString(16).padStart(2, '0')).join(''));\n\n      // Tính hash của message\n      const messageHash = await crypto.subtle.digest('SHA-256', messageBytes);\n      const messageHashBytes = new Uint8Array(messageHash);\n      console.log('Message hash bytes (hex):', Buffer.from(messageHashBytes).toString('hex'));\n      console.log('Message hash bytes (array):', Array.from(messageHashBytes));\n\n      // Hiển thị thông báo\n      console.log('Đang yêu cầu xác thực WebAuthn...');\n      setVerificationMessage('Đang hiển thị danh sách khóa WebAuthn, vui lòng chọn khóa để xác thực...');\n\n      // Sử dụng trực tiếp message gốc làm dữ liệu để ký với WebAuthn\n      const assertion = await getWebAuthnAssertion(credentialId, testMessage, true);\n      if (!assertion) {\n        throw new Error('Lỗi khi ký message bằng WebAuthn hoặc người dùng đã hủy xác thực');\n      }\n      const clientDataObj = JSON.parse(new TextDecoder().decode(assertion.clientDataJSON));\n      const derToRaw = derSignature => {\n        try {\n          // Kiểm tra format DER\n          if (derSignature[0] !== 0x30) {\n            throw new Error('Chữ ký không đúng định dạng DER: byte đầu tiên không phải 0x30');\n          }\n\n          // DER format: 0x30 [total-length] 0x02 [r-length] [r] 0x02 [s-length] [s]\n          const rLength = derSignature[3];\n          const rStart = 4;\n          const rEnd = rStart + rLength;\n          const sLength = derSignature[rEnd + 1];\n          const sStart = rEnd + 2;\n          const sEnd = sStart + sLength;\n\n          // Trích xuất r và s\n          let r = derSignature.slice(rStart, rEnd);\n          let s = derSignature.slice(sStart, sEnd);\n          console.log('DER r length:', r.length, 'r (hex):', Buffer.from(r).toString('hex'));\n          console.log('DER s length:', s.length, 's (hex):', Buffer.from(s).toString('hex'));\n\n          // Chuẩn bị r và s cho định dạng raw (mỗi phần 32 bytes)\n          const rPadded = new Uint8Array(32);\n          const sPadded = new Uint8Array(32);\n          if (r.length <= 32) {\n            // Trường hợp r ngắn hơn 32 bytes, thêm padding\n            rPadded.set(r, 32 - r.length);\n          } else {\n            // Trường hợp r dài hơn 32 bytes (thường là có byte 0x00 ở đầu), lấy 32 bytes cuối\n            rPadded.set(r.slice(r.length - 32));\n          }\n          if (s.length <= 32) {\n            // Trường hợp s ngắn hơn 32 bytes, thêm padding\n            sPadded.set(s, 32 - s.length);\n          } else {\n            // Trường hợp s dài hơn 32 bytes, lấy 32 bytes cuối\n            sPadded.set(s.slice(s.length - 32));\n          }\n\n          // Nối r và s lại\n          const rawSignature = new Uint8Array(64);\n          rawSignature.set(rPadded);\n          rawSignature.set(sPadded, 32);\n          return rawSignature;\n        } catch (e) {\n          console.error('Lỗi khi chuyển đổi DER sang raw:', e);\n          throw e;\n        }\n      };\n      const rawSignature = derToRaw(assertion.signature);\n      const signature = Buffer.from(rawSignature);\n      console.log('Signature sau khi chuyển đổi (raw format):', signature.toString('hex'));\n\n      // Chuẩn hóa signature về dạng Low-S\n      const normalizedSignature = normalizeSignatureToLowS(signature);\n      console.log(\"Signature sau khi chuẩn hóa (Low-S format):\", normalizedSignature.toString(\"hex\"));\n\n      // LẤY WEBAUTHN PUBLIC KEY\n      console.log('Lấy WebAuthn public key...');\n      const credentialMapping = await getWalletByCredentialId(credentialId);\n      let webAuthnPubKey;\n      if (!credentialMapping || !credentialMapping.guardianPublicKey || credentialMapping.guardianPublicKey.length === 0) {\n        // Thử tìm trong localStorage\n        console.log('Không tìm thấy trong Firebase, thử tìm trong localStorage...');\n        const localStorageData = localStorage.getItem('webauthn_credential_' + credentialId);\n        if (localStorageData) {\n          const localMapping = JSON.parse(localStorageData);\n          if (localMapping && localMapping.guardianPublicKey && localMapping.guardianPublicKey.length > 0) {\n            webAuthnPubKey = Buffer.from(new Uint8Array(localMapping.guardianPublicKey));\n          } else {\n            throw new Error('Không tìm thấy WebAuthn public key trong localStorage');\n          }\n        } else {\n          throw new Error('Không tìm thấy WebAuthn public key');\n        }\n      } else {\n        // Sử dụng WebAuthn public key từ Firebase\n        webAuthnPubKey = Buffer.from(new Uint8Array(credentialMapping.guardianPublicKey));\n      }\n\n      // Kiểm tra độ dài khóa\n      if (webAuthnPubKey.length !== 33) {\n        console.warn(`WebAuthn public key có độ dài không đúng: ${webAuthnPubKey.length} bytes, cần 33 bytes`);\n      }\n\n      // ĐÚNG QUY TRÌNH XÁC MINH WEBAUTHN:\n      // 1. Tính hash của clientDataJSON\n      const clientDataHash = await crypto.subtle.digest('SHA-256', assertion.clientDataJSON);\n      const clientDataHashBytes = new Uint8Array(clientDataHash);\n      console.log('clientDataJSON hash:', Buffer.from(clientDataHashBytes).toString('hex'));\n\n      // 2. Tạo verification data đúng cách: authenticatorData + hash(clientDataJSON)\n      const verificationData = new Uint8Array(assertion.authenticatorData.length + clientDataHashBytes.length);\n      verificationData.set(new Uint8Array(assertion.authenticatorData), 0);\n      verificationData.set(clientDataHashBytes, assertion.authenticatorData.length);\n      console.log('Verification data length:', verificationData.length);\n      console.log('Verification data (hex):', Buffer.from(verificationData).toString('hex'));\n\n      // Tạo ví tạm để trả phí giao dịch\n      const feePayer = web3.Keypair.generate();\n\n      // Xin SOL airdrop để trả phí\n      try {\n        const airdropSignature = await connection.requestAirdrop(feePayer.publicKey, web3.LAMPORTS_PER_SOL / 50 // 0.02 SOL để trả phí\n        );\n        await connection.confirmTransaction(airdropSignature);\n      } catch (airdropError) {\n        console.warn('Không thể airdrop SOL để trả phí:', airdropError);\n        // Tiếp tục thực hiện vì có thể account đã có sẵn SOL\n      }\n\n      // Thử cả hai cách: đảo và không đảo byte đầu tiên của public key\n      const verificationDataBuffer = Buffer.from(verificationData);\n\n      // Cách 1: Không đảo byte đầu tiên\n      try {\n        console.log(\"Thử xác minh với public key không đảo ngược...\");\n        const secp256r1Ix1 = createSecp256r1Instruction(verificationDataBuffer, webAuthnPubKey, normalizedSignature, false // Không đảo ngược public key\n        );\n        const transaction1 = new Transaction().add(secp256r1Ix1);\n        transaction1.feePayer = feePayer.publicKey;\n        const {\n          blockhash\n        } = await connection.getLatestBlockhash();\n        transaction1.recentBlockhash = blockhash;\n        transaction1.sign(feePayer);\n        console.log(\"Gửi transaction với public key không đảo ngược...\");\n        const txid1 = await connection.sendRawTransaction(transaction1.serialize(), {\n          skipPreflight: true,\n          preflightCommitment: 'confirmed'\n        });\n        console.log('Transaction xác minh chữ ký đã được gửi với ID:', txid1);\n        const confirmation1 = await connection.confirmTransaction(txid1, 'confirmed');\n        if (confirmation1.value.err) {\n          console.error(\"Lỗi khi xác minh với public key không đảo ngược:\", confirmation1.value.err);\n          throw new Error(`Lỗi: ${JSON.stringify(confirmation1.value.err)}`);\n        } else {\n          console.log(\"XÁC MINH THÀNH CÔNG với public key không đảo ngược!\");\n          setVerificationStatus(VerificationStatus.SUCCESS);\n          setVerificationMessage(`Xác minh chữ ký thành công! ID giao dịch: ${txid1}`);\n          return;\n        }\n      } catch (error1) {\n        console.error(\"Lỗi khi xác minh với public key không đảo ngược:\", error1);\n      }\n    } catch (error) {\n      console.error('Lỗi khi xác minh chữ ký:', error);\n      setVerificationStatus(VerificationStatus.ERROR);\n      setVerificationMessage(error.message || 'Đã xảy ra lỗi khi xác minh chữ ký');\n    }\n  };\n\n  // Render status message dựa trên txStatus\n  const renderStatusMessage = () => {\n    switch (txStatus) {\n      case TransactionStatus.PREPARING:\n        return 'Đang chuẩn bị giao dịch...';\n      case TransactionStatus.SIGNING:\n        return 'Vui lòng xác thực bằng WebAuthn (vân tay hoặc Face ID) khi được yêu cầu...';\n      case TransactionStatus.BUILDING_TX:\n        return 'Đang xây dựng giao dịch...';\n      case TransactionStatus.SUBMITTING:\n        return 'Đang gửi giao dịch lên blockchain...';\n      case TransactionStatus.CONFIRMING:\n        return 'Đang chờ xác nhận giao dịch...';\n      case TransactionStatus.SUCCESS:\n        return 'Giao dịch thành công!';\n      case TransactionStatus.ERROR:\n        return 'Giao dịch thất bại!';\n      default:\n        return '';\n    }\n  };\n\n  // Hiển thị ghi chú về validator cục bộ\n  const renderValidatorNote = () => {\n    if (connectionEndpoint.includes('localhost') || connectionEndpoint.includes('127.0.0.1')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-note\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"L\\u01B0u \\xFD:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 14\n          }, this), \" B\\u1EA1n \\u0111ang k\\u1EBFt n\\u1ED1i \\u0111\\u1EBFn validator c\\u1EE5c b\\u1ED9.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"C\\u1EA7n kh\\u1EDFi \\u0111\\u1ED9ng validator v\\u1EDBi c\\xE1c tham s\\u1ED1 \\u0111\\xFAng \\u0111\\u1EC3 c\\xE0i \\u0111\\u1EB7t ch\\u01B0\\u01A1ng tr\\xECnh MoonWallet:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: [\"solana-test-validator --bpf-program \", programID.toString(), \" path/to/moon_wallet.so\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transfer-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chuy\\u1EC3n SOL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"K\\u1EBFt n\\u1ED1i \\u0111\\u1EBFn: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: connectionEndpoint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"S\\u1ED1 d\\u01B0 hi\\u1EC7n t\\u1EA1i: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pdaBalance.toFixed(5), \" SOL\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !isMoonWalletAvailable ? \"warning-message\" : \"info-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tr\\u1EA1ng th\\xE1i ch\\u01B0\\u01A1ng tr\\xECnh:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: isMoonWalletAvailable ? \"status-ok\" : \"status-error\",\n              children: isMoonWalletAvailable ? '✅' : '❌'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 15\n            }, this), \"MoonWallet: \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: programID.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 11\n        }, this), renderValidatorNote(), !isMoonWalletAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"L\\u01B0u \\xFD:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 18\n            }, this), \" Ch\\u01B0\\u01A1ng tr\\xECnh MoonWallet ch\\u01B0a \\u0111\\u01B0\\u1EE3c c\\xE0i \\u0111\\u1EB7t tr\\xEAn validator.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0110\\u1EC3 c\\xE0i \\u0111\\u1EB7t, ch\\u1EA1y validator v\\u1EDBi l\\u1EC7nh:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: [\"solana-test-validator --bpf-program \", programID.toString(), \" path/to/moon_wallet.so\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verify-signature-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"X\\xE1c minh ch\\u1EEF k\\xFD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ki\\u1EC3m tra xem WebAuthn c\\u1EE7a b\\u1EA1n c\\xF3 ho\\u1EA1t \\u0111\\u1ED9ng \\u0111\\xFAng tr\\u01B0\\u1EDBc khi th\\u1EF1c hi\\u1EC7n giao d\\u1ECBch.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 9\n      }, this), verificationStatus !== VerificationStatus.IDLE && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: verificationStatus === VerificationStatus.SUCCESS ? \"success-message\" : verificationStatus === VerificationStatus.ERROR ? \"error-message\" : \"status-message\",\n        children: verificationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"secondary-button\",\n        onClick: handleVerifySignatureOnly,\n        disabled: verificationStatus === VerificationStatus.VERIFYING || !isMoonWalletAvailable,\n        children: verificationStatus === VerificationStatus.VERIFYING ? 'Đang xác minh...' : 'Chỉ xác minh chữ ký'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"destination\",\n          children: \"\\u0110\\u1ECBa ch\\u1EC9 \\u0111\\xEDch:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"destination\",\n          value: destinationAddress,\n          onChange: handleDestinationChange,\n          placeholder: \"Nh\\u1EADp \\u0111\\u1ECBa ch\\u1EC9 Solana\",\n          disabled: isTransferring,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"S\\u1ED1 l\\u01B0\\u1EE3ng SOL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"amount\",\n          value: amount,\n          onChange: handleAmountChange,\n          placeholder: \"V\\xED d\\u1EE5: 0.1\",\n          disabled: isTransferring,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 19\n      }, this), txStatus !== TransactionStatus.IDLE && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: renderStatusMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 13\n        }, this), txStatus === TransactionStatus.CONFIRMING && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-indicator\",\n          children: \"\\u0110ang x\\xE1c nh\\u1EADn...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 15\n        }, this), txId && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"transaction-id\",\n          children: [\"ID Giao d\\u1ECBch: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://explorer.solana.com/tx/${txId}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [txId.slice(0, 8), \"...\", txId.slice(-8)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"primary-button\",\n        disabled: isTransferring || !isMoonWalletAvailable,\n        children: isTransferring ? 'Đang xử lý...' : 'Chuyển SOL'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .success-message, .error-message, .warning-message, .info-message {\n            margin: 12px 0;\n            padding: 10px;\n            border-radius: 4px;\n            font-weight: 500;\n          }\n          \n          .success-message {\n            background-color: rgba(0, 200, 83, 0.1);\n            color: #00C853;\n            border: 1px solid #00C853;\n          }\n          \n          .error-message {\n            background-color: rgba(255, 87, 34, 0.1);\n            color: #FF5722;\n            border: 1px solid #FF5722;\n          }\n          \n          .warning-message {\n            background-color: rgba(255, 152, 0, 0.1);\n            color: #FF9800;\n            border: 1px solid #FF9800;\n          }\n          \n          .info-message {\n            background-color: rgba(33, 150, 243, 0.1);\n            color: #333;\n            border: 1px solid #2196F3;\n          }\n          \n          .status-message {\n            margin: 12px 0;\n            padding: 10px;\n            background-color: rgba(33, 150, 243, 0.1);\n            border: 1px solid #2196F3;\n            border-radius: 4px;\n            color: #2196F3;\n          }\n          \n          .loading-indicator {\n            margin-top: 8px;\n            font-style: italic;\n          }\n          \n          .transaction-id {\n            margin-top: 8px;\n            word-break: break-all;\n            font-size: 14px;\n          }\n          \n          .transaction-id a {\n            color: #2196F3;\n            text-decoration: none;\n          }\n          \n          .transaction-id a:hover {\n            text-decoration: underline;\n          }\n          \n          .status-ok {\n            color: #00C853;\n          }\n          \n          .status-error {\n            color: #FF5722;\n          }\n          \n          pre {\n            background-color: #f5f5f5;\n            padding: 10px;\n            border-radius: 4px;\n            overflow-x: auto;\n            font-size: 12px;\n          }\n          \n          ul {\n            padding-left: 20px;\n          }\n          \n          code {\n            font-family: monospace;\n            background-color: #f5f5f5;\n            padding: 2px 4px;\n            border-radius: 2px;\n          }\n          \n          .info-note {\n            margin-top: 12px;\n            padding: 8px;\n            background-color: #f8f9fa;\n            border-left: 4px solid #2196F3;\n            font-size: 0.9em;\n          }\n          \n          .verify-signature-section {\n            margin: 20px 0;\n            padding: 15px;\n            background-color: #f8f9fa;\n            border-radius: 4px;\n            border: 1px solid #e9ecef;\n          }\n          \n          .secondary-button {\n            background-color: #6c757d;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 4px;\n            cursor: pointer;\n            font-weight: 500;\n            margin-top: 10px;\n          }\n          \n          .secondary-button:hover {\n            background-color: #5a6268;\n          }\n          \n          .secondary-button:disabled {\n            background-color: #adb5bd;\n            cursor: not-allowed;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 922,\n    columnNumber: 5\n  }, this);\n};\n_s(TransferForm, \"2ITLgm8YZZXy3SW+2uV30GKYWQk=\");\n_c = TransferForm;\nvar _c;\n$RefreshReg$(_c, \"TransferForm\");","map":{"version":3,"names":["React","useState","useEffect","PublicKey","Transaction","SendTransactionError","web3","LAMPORTS_PER_SOL","createTransferTx","createSecp256r1Instruction","programID","SECP256R1_PROGRAM_ID","getWebAuthnAssertion","getGuardianPDA","getMultisigPDA","getWalletByCredentialId","Buffer","BN","jsxDEV","_jsxDEV","SECP256R1_ORDER","SECP256R1_HALF_ORDER","shrn","normalizeSignatureToLowS","sig","r","slice","s","sBN","console","log","toString","gt","sNormalized","sub","sNormalizedBuffer","toArrayLike","concat","convertDERtoRaw","derSignature","error","Uint8Array","rLength","rStart","rEnd","sLength","sStart","sEnd","rPadded","sPadded","length","set","rawSignature","TransactionStatus","VerificationStatus","TransferForm","walletAddress","credentialId","guardianId","onTransferSuccess","onTransferError","connection","pdaBalance","_s","destinationAddress","setDestinationAddress","amount","setAmount","isTransferring","setIsTransferring","setError","success","setSuccess","walletBalance","setWalletBalance","nonce","setNonce","txStatus","setTxStatus","IDLE","txId","setTxId","isMoonWalletAvailable","setIsMoonWalletAvailable","connectionEndpoint","setConnectionEndpoint","verificationStatus","setVerificationStatus","verificationMessage","setVerificationMessage","checkPrograms","endpoint","rpcEndpoint","moonWalletInfo","getAccountInfo","warn","undefined","loadWalletInfo","multisigPDA","accountInfo","transactionNonce","data","readBigUInt64LE","Number","handleDestinationChange","e","target","value","handleAmountChange","test","handleSubmit","preventDefault","PREPARING","errorMsg","Error","parseFloat","amountLamports","balance","getBalance","destinationPublicKey","feePayer","Keypair","generate","airdropSignature","requestAirdrop","publicKey","confirmTransaction","feePayerBalance","airdropError","nextNonce","timestamp","Math","floor","Date","now","webAuthnPubKey","credentialMapping","guardianPublicKey","localStorageData","localStorage","getItem","localMapping","JSON","parse","from","pubkeyHashBuffer","crypto","subtle","digest","pubkeyHashBytes","pubkeyHashHex","Array","map","b","padStart","join","formattedAmount","messageString","TextEncoder","encode","messageBytes","toBase58","guardianPDA","SIGNING","assertion","TextDecoder","decode","clientDataJSON","derToRaw","signature","normalizedSignature","BUILDING_TX","clientDataHash","clientDataHashBytes","verificationData","authenticatorData","secp256r1Ix","programId","dataLength","dataHex","substring","pubkeyLength","signatureLength","messageLength","transferTx","instructions","unshift","blockhash","getLatestBlockhash","recentBlockhash","sign","ix","keys","k","pubkey","isSigner","isWritable","dataSize","SUBMITTING","transactionId","sendRawTransaction","serialize","skipPreflight","preflightCommitment","CONFIRMING","confirmation","err","stringify","SUCCESS","sendError","message","logs","isArray","logError","errorMessage","includes","ERROR","handleVerifySignatureOnly","VERIFYING","testMessage","messageHash","messageHashBytes","clientDataObj","verificationDataBuffer","secp256r1Ix1","transaction1","add","txid1","confirmation1","error1","renderStatusMessage","renderValidatorNote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","type","onClick","disabled","onSubmit","htmlFor","id","onChange","placeholder","required","href","rel","_c","$RefreshReg$"],"sources":["/Users/tai/Documents/MoonWallet/moonwallet/frontend_test/src/components/TransferForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PublicKey, Transaction, Connection, SendTransactionError } from '@solana/web3.js';\nimport { web3 } from '@coral-xyz/anchor';\n// Xóa useConnection hook vì sẽ nhận connection từ props\n// import { useConnection } from '@solana/wallet-adapter-react';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport { \n  createTransferTx, \n  createSecp256r1Instruction,\n  programID,\n  SECP256R1_PROGRAM_ID\n} from '../utils/transactionUtils';\nimport { getWebAuthnAssertion } from '../utils/webauthnUtils';\nimport { getGuardianPDA, getMultisigPDA } from '../utils/credentialUtils';\nimport { getWalletByCredentialId } from '../firebase/webAuthnService';\nimport { Buffer } from 'buffer';\nimport BN from 'bn.js';\n\n// Thêm hằng số cho chuẩn hóa signature\nconst SECP256R1_ORDER = new BN('FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551', 16);\nconst SECP256R1_HALF_ORDER = SECP256R1_ORDER.shrn(1);\n\n/**\n * Chuẩn hóa chữ ký về dạng Low-S\n * @param signature - Chữ ký raw\n * @returns Chữ ký đã chuẩn hóa\n */\nconst normalizeSignatureToLowS = (sig: Buffer): Buffer => {\n  const r = sig.slice(0, 32);\n  const s = sig.slice(32, 64);\n  \n  const sBN = new BN(s);\n  console.log(\"S value (BN):\", sBN.toString(16));\n  console.log(\"HALF_ORDER:\", SECP256R1_HALF_ORDER.toString(16));\n  \n  // Kiểm tra nếu s > half_order\n  if (sBN.gt(SECP256R1_HALF_ORDER)) {\n    console.log(\"Chuẩn hóa signature về dạng Low-S\");\n    // Tính s' = order - s\n    const sNormalized = SECP256R1_ORDER.sub(sBN);\n    console.log(\"S normalized:\", sNormalized.toString(16));\n    const sNormalizedBuffer = sNormalized.toArrayLike(Buffer, 'be', 32);\n    return Buffer.concat([r, sNormalizedBuffer]);\n  }\n  \n  console.log(\"Signature đã ở dạng Low-S\");\n  return sig;\n};\n\n// Hàm chuyển đổi chữ ký DER sang raw (r, s) format\nconst convertDERtoRaw = (derSignature: Uint8Array): Uint8Array => {\n  // Đảm bảo đây là DER signature\n  if (derSignature[0] !== 0x30) {\n    console.error('Chữ ký không phải định dạng DER');\n    return new Uint8Array(64); // Trả về buffer rỗng nếu không đúng định dạng\n  }\n  \n  // Parse DER format\n  // Format: 0x30 [total-length] 0x02 [r-length] [r] 0x02 [s-length] [s]\n  const rLength = derSignature[3];\n  const rStart = 4;\n  const rEnd = rStart + rLength;\n  \n  const sLength = derSignature[rEnd + 1];\n  const sStart = rEnd + 2;\n  const sEnd = sStart + sLength;\n  \n  // Trích xuất r và s\n  let r = derSignature.slice(rStart, rEnd);\n  let s = derSignature.slice(sStart, sEnd);\n  \n  // Cần đảm bảo r và s đúng 32 bytes\n  // - Nếu dài hơn 32 bytes, cắt bớt (thường r và s có thể có padding)\n  // - Nếu ngắn hơn 32 bytes, thêm padding 0 vào đầu\n  const rPadded = new Uint8Array(32);\n  const sPadded = new Uint8Array(32);\n  \n  if (r.length <= 32) {\n    // Trường hợp r ngắn hơn 32 bytes, thêm padding\n    rPadded.set(r, 32 - r.length);\n  } else {\n    // Trường hợp r dài hơn 32 bytes, cắt bớt (thường là byte đầu tiên là 0)\n    rPadded.set(r.slice(r.length - 32));\n  }\n  \n  if (s.length <= 32) {\n    // Trường hợp s ngắn hơn 32 bytes, thêm padding\n    sPadded.set(s, 32 - s.length);\n  } else {\n    // Trường hợp s dài hơn 32 bytes, cắt bớt (thường là byte đầu tiên là 0)\n    sPadded.set(s.slice(s.length - 32));\n  }\n  \n  // Nối r và s lại\n  const rawSignature = new Uint8Array(64);\n  rawSignature.set(rPadded);\n  rawSignature.set(sPadded, 32);\n  \n  console.log('Đã chuyển đổi signature từ DER sang raw format:');\n  console.log('- DER length:', derSignature.length);\n  console.log('- Raw length:', rawSignature.length);\n  \n  return rawSignature;\n};\n\n// Interface cho props của component\ninterface TransferFormProps {\n  walletAddress: string;  \n  credentialId: string;   \n  guardianId: number;     \n  onTransferSuccess?: () => void;\n  onTransferError?: (error: Error) => void;\n  // Thêm connection vào props\n  connection: Connection;\n  // Thêm pdaBalance để hiển thị số dư chính xác\n  pdaBalance?: number;\n}\n\n// Enum cho các trạng thái giao dịch\nenum TransactionStatus {\n  IDLE = 'idle',\n  PREPARING = 'preparing',\n  SIGNING = 'signing',\n  BUILDING_TX = 'building_tx',\n  SUBMITTING = 'submitting',\n  CONFIRMING = 'confirming',\n  SUCCESS = 'success',\n  ERROR = 'error'\n}\n\n// Thêm enum để theo dõi trạng thái xác minh chữ ký\nenum VerificationStatus {\n  IDLE = 'idle',\n  VERIFYING = 'verifying',\n  SUCCESS = 'success',\n  ERROR = 'error'\n}\n\nexport const TransferForm: React.FC<TransferFormProps> = ({\n  walletAddress,\n  credentialId,\n  guardianId,\n  onTransferSuccess,\n  onTransferError,\n  // Thêm connection và pdaBalance vào tham số destructuring\n  connection,\n  pdaBalance = 0\n}) => {\n  // State\n  const [destinationAddress, setDestinationAddress] = useState<string>('');\n  const [amount, setAmount] = useState<string>('');\n  const [isTransferring, setIsTransferring] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [walletBalance, setWalletBalance] = useState<number>(0);\n  const [nonce, setNonce] = useState<number>(0);\n  const [txStatus, setTxStatus] = useState<TransactionStatus>(TransactionStatus.IDLE);\n  const [txId, setTxId] = useState<string>('');\n  const [isMoonWalletAvailable, setIsMoonWalletAvailable] = useState<boolean>(false);\n  const [connectionEndpoint, setConnectionEndpoint] = useState<string>('');\n  // Thêm state cho chức năng xác minh chữ ký\n  const [verificationStatus, setVerificationStatus] = useState<VerificationStatus>(VerificationStatus.IDLE);\n  const [verificationMessage, setVerificationMessage] = useState<string>('');\n  \n  // Kiểm tra chương trình MoonWallet\n  useEffect(() => {\n    const checkPrograms = async () => {\n      try {\n        // Lấy endpoint của connection để hiển thị\n        const endpoint = connection.rpcEndpoint;\n        setConnectionEndpoint(endpoint);\n        console.log(\"Đang kết nối đến:\", endpoint);\n        \n        // Chỉ kiểm tra chương trình MoonWallet\n        try {\n          const moonWalletInfo = await connection.getAccountInfo(programID);\n          setIsMoonWalletAvailable(moonWalletInfo !== null);\n          \n          if (moonWalletInfo === null) {\n            console.warn(\"Chương trình MoonWallet không tồn tại trên validator này!\");\n          } else {\n            console.log(\"Đã tìm thấy chương trình MoonWallet:\", programID.toString());\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi kiểm tra chương trình MoonWallet:\", error);\n          setIsMoonWalletAvailable(false);\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi kiểm tra chương trình:\", error);\n      }\n    };\n    \n    checkPrograms();\n  }, [connection]);\n  \n  // Cập nhật walletBalance khi pdaBalance thay đổi\n  useEffect(() => {\n    if (pdaBalance !== undefined) {\n      setWalletBalance(pdaBalance);\n    }\n  }, [pdaBalance]);\n  \n  // Lấy số dư ví và nonce hiện tại từ blockchain\n  useEffect(() => {\n    const loadWalletInfo = async () => {\n      try {\n        if (!walletAddress) return;\n        \n        // Tính PDA của ví từ credential ID\n        const multisigPDA = await getMultisigPDA(credentialId);\n        \n        // Lấy thông tin account\n        const accountInfo = await connection.getAccountInfo(multisigPDA);\n        \n        if (!accountInfo) {\n          console.error('Không tìm thấy thông tin ví');\n          return;\n        }\n        \n        try {\n          // Đọc nonce từ account data (từ vị trí thích hợp theo layout)\n          // Giả sử nonce nằm ở offset 18 (8 bytes for discriminator + 1 byte threshold + 1 byte guardian_count + 8 bytes recovery_nonce)\n          const transactionNonce = accountInfo.data.readBigUInt64LE(18);\n          setNonce(Number(transactionNonce));\n          console.log(\"Transaction nonce hiện tại:\", Number(transactionNonce));\n        } catch (error) {\n          console.error(\"Lỗi khi đọc nonce từ account data:\", error);\n          // Fallback về nonce = 0 nếu không đọc được\n          setNonce(0);\n        }\n        \n      } catch (error) {\n        console.error('Lỗi khi tải thông tin ví:', error);\n      }\n    };\n    \n    loadWalletInfo();\n  }, [walletAddress, credentialId, connection]);\n  \n  // Xử lý khi nhập địa chỉ đích\n  const handleDestinationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setDestinationAddress(e.target.value);\n    // Reset thông báo lỗi và thành công\n    setError('');\n    setSuccess('');\n    setTxStatus(TransactionStatus.IDLE);\n    setTxId('');\n  };\n  \n  // Xử lý khi nhập số lượng SOL\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // Chỉ cho phép nhập số dương và dấu chấm (số thập phân)\n    const value = e.target.value;\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setAmount(value);\n      // Reset thông báo lỗi và thành công\n      setError('');\n      setSuccess('');\n      setTxStatus(TransactionStatus.IDLE);\n      setTxId('');\n    }\n  };\n  \n  // Xử lý khi submit form\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    setIsTransferring(true);\n    setError('');\n    setSuccess('');\n    setTxStatus(TransactionStatus.PREPARING);\n    setTxId('');\n    \n    try {\n      // Kiểm tra nếu MoonWallet program không khả dụng\n      if (!isMoonWalletAvailable) {\n        let errorMsg = \"Không thể thực hiện giao dịch vì chương trình MoonWallet không tồn tại trên validator.\\n\";\n        errorMsg += `Địa chỉ chương trình: ${programID.toString()}\\n\\n`;\n        errorMsg += `Đảm bảo chạy validator với lệnh:\\n`;\n        errorMsg += `solana-test-validator --bpf-program ${programID.toString()} path/to/moon_wallet.so`;\n        \n        throw new Error(errorMsg);\n      }\n      \n      // Kiểm tra đầu vào\n      if (!destinationAddress) {\n        throw new Error('Vui lòng nhập địa chỉ đích');\n      }\n      \n      if (!amount || parseFloat(amount) <= 0) {\n        throw new Error('Vui lòng nhập số lượng SOL hợp lệ');\n      }\n      \n      // Chuyển đổi SOL sang lamports\n      const amountLamports = parseFloat(amount) * LAMPORTS_PER_SOL;\n      \n      // Kiểm tra số dư\n      const balance = await connection.getBalance(multisigPDA);\n      if (balance < amountLamports) {\n        throw new Error(\n          `Số dư không đủ. Hiện tại: ${\n            balance / LAMPORTS_PER_SOL\n          } SOL, Cần: ${amount} SOL`\n        );\n      }\n      \n      // Kiểm tra địa chỉ hợp lệ\n      let destinationPublicKey: PublicKey;\n      try {\n        destinationPublicKey = new PublicKey(destinationAddress);\n      } catch (error) {\n        throw new Error('Địa chỉ đích không hợp lệ');\n      }\n      \n      // Tạo ví tạm để trả phí giao dịch\n      const feePayer = web3.Keypair.generate();\n      \n      // Xin SOL airdrop để trả phí\n      try {\n        const airdropSignature = await connection.requestAirdrop(\n          feePayer.publicKey,\n          web3.LAMPORTS_PER_SOL / 50 // 0.02 SOL để trả phí\n        );\n        await connection.confirmTransaction(airdropSignature);\n        \n        // Kiểm tra số dư sau khi airdrop\n        const feePayerBalance = await connection.getBalance(feePayer.publicKey);\n        console.log(\n          `Fee payer balance: ${feePayerBalance / LAMPORTS_PER_SOL} SOL`\n        );\n        \n        if (feePayerBalance === 0) {\n          throw new Error(\"Không thể airdrop SOL cho fee payer\");\n        }\n      } catch (airdropError) {\n        console.warn(\"Không thể airdrop SOL để trả phí:\", airdropError);\n        // Tiếp tục thực hiện vì có thể account đã có sẵn SOL\n      }\n      \n      // Thêm 1 vào nonce hiện tại\n      const nextNonce = nonce + 1;\n      \n      // Lấy timestamp hiện tại (giây)\n      const timestamp = Math.floor(Date.now() / 1000);\n      \n      // LẤY WEBAUTHN PUBLIC KEY\n      console.log('Lấy WebAuthn public key...');\n      let webAuthnPubKey: Buffer;\n      \n      // Thử tìm trong Firebase\n      const credentialMapping = await getWalletByCredentialId(credentialId);\n      \n      if (!credentialMapping || !credentialMapping.guardianPublicKey || credentialMapping.guardianPublicKey.length === 0) {\n        // Thử tìm trong localStorage\n        console.log('Không tìm thấy trong Firebase, thử tìm trong localStorage...');\n        const localStorageData = localStorage.getItem('webauthn_credential_' + credentialId);\n        if (localStorageData) {\n          const localMapping = JSON.parse(localStorageData);\n          if (localMapping && localMapping.guardianPublicKey && localMapping.guardianPublicKey.length > 0) {\n            webAuthnPubKey = Buffer.from(new Uint8Array(localMapping.guardianPublicKey));\n          } else {\n            throw new Error('Không tìm thấy WebAuthn public key trong localStorage');\n          }\n        } else {\n          throw new Error('Không tìm thấy WebAuthn public key');\n        }\n      } else {\n        // Sử dụng WebAuthn public key từ Firebase\n        webAuthnPubKey = Buffer.from(new Uint8Array(credentialMapping.guardianPublicKey));\n      }\n      \n      // Kiểm tra độ dài khóa\n      if (webAuthnPubKey.length !== 33) {\n        console.warn(`WebAuthn public key có độ dài không đúng: ${webAuthnPubKey.length} bytes, cần 33 bytes`);\n      }\n      \n      // Tính hash của public key và lấy 6 bytes đầu dưới dạng hex\n      const pubkeyHashBuffer = await crypto.subtle.digest('SHA-256', webAuthnPubKey);\n      const pubkeyHashBytes = new Uint8Array(pubkeyHashBuffer).slice(0, 6);\n      const pubkeyHashHex = Array.from(pubkeyHashBytes)\n        .map(b => b.toString(16).padStart(2, '0'))\n        .join('');\n      \n      console.log('Public key hash (6 bytes):', pubkeyHashHex);\n      \n      // Format số lượng SOL để khớp với Rust\n      // Rust sẽ tính lại: amount as f64 / 1_000_000_000.0\n      const formattedAmount = (amountLamports / LAMPORTS_PER_SOL).toString();\n      \n      // Tạo message chuẩn theo format mới với pubkeyHash\n      // Đảm bảo định dạng khớp chính xác với contract\n      const messageString = `transfer:${formattedAmount}_SOL_to_${destinationAddress},nonce:${nextNonce},timestamp:${timestamp},pubkey:${pubkeyHashHex}`;\n      console.log('Message gốc:', messageString);\n      console.log('Message gửi đến contract (bytes):', Array.from(new TextEncoder().encode(messageString)));\n      \n      // Chuyển message thành bytes\n      const messageBytes = new TextEncoder().encode(messageString);\n      \n      // Lấy PDA từ credential ID\n      const multisigPDA = await getMultisigPDA(credentialId);\n      console.log('MultisigPDA:', multisigPDA.toBase58());\n      \n      // Lấy PDA của guardian\n      const guardianPDA = await getGuardianPDA(multisigPDA, guardianId);\n      console.log('GuardianPDA:', guardianPDA.toBase58());\n      \n      // Thử ký bằng WebAuthn\n      setTxStatus(TransactionStatus.SIGNING);\n      \n      // Hiển thị thông báo\n      console.log('Đang yêu cầu xác thực WebAuthn...');\n      setError(''); // Xóa thông báo lỗi trước đó\n      setSuccess('Đang hiển thị danh sách khóa WebAuthn, vui lòng chọn khóa để xác thực giao dịch...');\n      \n      // Sử dụng trực tiếp message làm dữ liệu để ký với WebAuthn\n      const assertion = await getWebAuthnAssertion(credentialId, messageString, true);\n      \n      if (!assertion) {\n        throw new Error('Lỗi khi ký message bằng WebAuthn hoặc người dùng đã hủy xác thực');\n      }\n      \n      console.log('Đã ký thành công bằng WebAuthn');\n      console.log('ClientDataJSON:', new TextDecoder().decode(assertion.clientDataJSON));\n      \n      setSuccess(''); // Xóa thông báo thành công tạm thời\n      \n      // Chuyển đổi signature từ DER sang raw format (r, s)\n      const derToRaw = (derSignature: Uint8Array): Uint8Array => {\n        try {\n          // Kiểm tra format DER\n          if (derSignature[0] !== 0x30) {\n            throw new Error('Chữ ký không đúng định dạng DER: byte đầu tiên không phải 0x30');\n          }\n          \n          // DER format: 0x30 [total-length] 0x02 [r-length] [r] 0x02 [s-length] [s]\n          const rLength = derSignature[3];\n          const rStart = 4;\n          const rEnd = rStart + rLength;\n          \n          const sLength = derSignature[rEnd + 1];\n          const sStart = rEnd + 2;\n          const sEnd = sStart + sLength;\n          \n          // Trích xuất r và s\n          let r = derSignature.slice(rStart, rEnd);\n          let s = derSignature.slice(sStart, sEnd);\n          \n          console.log('DER r length:', r.length, 'r (hex):', Buffer.from(r).toString('hex'));\n          console.log('DER s length:', s.length, 's (hex):', Buffer.from(s).toString('hex'));\n          \n          // Chuẩn bị r và s cho định dạng raw (mỗi phần 32 bytes)\n          const rPadded = new Uint8Array(32);\n          const sPadded = new Uint8Array(32);\n          \n          if (r.length <= 32) {\n            // Trường hợp r ngắn hơn 32 bytes, thêm padding\n            rPadded.set(r, 32 - r.length);\n          } else {\n            // Trường hợp r dài hơn 32 bytes (thường là có byte 0x00 ở đầu), lấy 32 bytes cuối\n            rPadded.set(r.slice(r.length - 32));\n          }\n          \n          if (s.length <= 32) {\n            // Trường hợp s ngắn hơn 32 bytes, thêm padding\n            sPadded.set(s, 32 - s.length);\n          } else {\n            // Trường hợp s dài hơn 32 bytes, lấy 32 bytes cuối\n            sPadded.set(s.slice(s.length - 32));\n          }\n          \n          // Nối r và s lại\n          const rawSignature = new Uint8Array(64);\n          rawSignature.set(rPadded);\n          rawSignature.set(sPadded, 32);\n          \n          return rawSignature;\n        } catch (e) {\n          console.error('Lỗi khi chuyển đổi DER sang raw:', e);\n          throw e;\n        }\n      };\n      \n      const rawSignature = derToRaw(assertion.signature);\n      const signature = Buffer.from(rawSignature);\n      \n      console.log('Signature sau khi chuyển đổi (raw format):', signature.toString('hex'));\n      \n      // Chuẩn hóa signature về dạng Low-S\n      const normalizedSignature = normalizeSignatureToLowS(signature);\n      console.log(\"Signature sau khi chuẩn hóa (Low-S format):\", normalizedSignature.toString(\"hex\"));\n      \n      // Tạo instruction secp256r1\n      setTxStatus(TransactionStatus.BUILDING_TX);\n      \n      // ĐÚNG QUY TRÌNH XÁC MINH WEBAUTHN:\n      // 1. Tính hash của clientDataJSON\n      const clientDataHash = await crypto.subtle.digest('SHA-256', assertion.clientDataJSON);\n      const clientDataHashBytes = new Uint8Array(clientDataHash);\n      console.log('clientDataJSON hash:', Buffer.from(clientDataHashBytes).toString('hex'));\n      \n      // 2. Tạo verification data đúng cách: authenticatorData + hash(clientDataJSON)\n      const verificationData = new Uint8Array(assertion.authenticatorData.length + clientDataHashBytes.length);\n      verificationData.set(new Uint8Array(assertion.authenticatorData), 0);\n      verificationData.set(clientDataHashBytes, assertion.authenticatorData.length);\n      \n      console.log('Verification data length:', verificationData.length);\n      console.log('Verification data (hex):', Buffer.from(verificationData).toString('hex'));\n      \n      // Tạo instruction cho secp256r1 với verification data\n      const secp256r1Ix = createSecp256r1Instruction(\n        Buffer.from(verificationData), // Sử dụng verification data\n        webAuthnPubKey, // publicKey\n        normalizedSignature, // signature đã chuẩn hóa\n        false // Không đảo ngược public key\n      );\n      \n      console.log(\"Secp256r1 instruction data:\", {\n        programId: secp256r1Ix.programId.toString(),\n        dataLength: secp256r1Ix.data.length,\n        dataHex: Buffer.from(secp256r1Ix.data).toString('hex').substring(0, 60) + '...',\n        pubkeyLength: webAuthnPubKey.length,\n        signatureLength: normalizedSignature.length,\n        messageLength: verificationData.length\n      });\n      \n      // Tiếp tục quá trình xử lý transaction như bình thường\n      const transferTx = createTransferTx(\n        multisigPDA,\n        guardianPDA,\n        destinationPublicKey,\n        amountLamports,\n        nextNonce,\n        timestamp,\n        Buffer.from(messageBytes), // Sử dụng message gốc, không phải hash\n        feePayer.publicKey\n      );\n      \n      // QUAN TRỌNG: Đặt secp256r1 instruction là ix đầu tiên (phải đứng trước verify_and_execute)\n      transferTx.instructions.unshift(secp256r1Ix);\n      \n      // Đặt fee payer và blockhash\n      transferTx.feePayer = feePayer.publicKey;\n      const { blockhash } = await connection.getLatestBlockhash();\n      transferTx.recentBlockhash = blockhash;\n      \n      // Ký transaction bằng fee payer\n      transferTx.sign(feePayer);\n      \n      // Log transaction để debug\n      console.log(\"Transaction info:\", {\n        feePayer: feePayer.publicKey.toString(),\n        instructions: transferTx.instructions.map(ix => ({\n          programId: ix.programId.toString(),\n          keys: ix.keys.map(k => ({\n            pubkey: k.pubkey.toString(),\n            isSigner: k.isSigner,\n            isWritable: k.isWritable\n          })),\n          dataSize: ix.data.length\n        }))\n      });\n      \n      // Gửi transaction\n      setTxStatus(TransactionStatus.SUBMITTING);\n      \n      try {\n        console.log('Sending transaction with secp256r1 instruction...');\n        console.log('Skip preflight:', true);\n        \n        const transactionId = await connection.sendRawTransaction(transferTx.serialize(), {\n          skipPreflight: true, // Bỏ qua preflight để tránh lỗi với instruction phức tạp\n          preflightCommitment: 'confirmed'\n        });\n        \n        console.log('Transaction đã được gửi với ID:', transactionId);\n        \n        setTxId(transactionId);\n        console.log('Transaction ID:', transactionId);\n        \n        // Chờ xác nhận\n        setTxStatus(TransactionStatus.CONFIRMING);\n        \n        const confirmation = await connection.confirmTransaction(transactionId, 'confirmed');\n        \n        if (confirmation.value.err) {\n          throw new Error(`Lỗi khi xác nhận giao dịch: ${JSON.stringify(confirmation.value.err)}`);\n        }\n        \n        // Hiển thị thông báo thành công\n        setTxStatus(TransactionStatus.SUCCESS);\n        setSuccess(`Đã chuyển ${amount} SOL đến ${destinationAddress} thành công! ID giao dịch: ${transactionId}`);\n        setAmount('');\n        setDestinationAddress('');\n        \n        // Gọi callback nếu có\n        if (onTransferSuccess) {\n          onTransferSuccess();\n        }\n        \n        return; // Không tiếp tục chạy code bên dưới\n      } catch (sendError: any) {\n        // Xử lý lỗi SendTransactionError\n        if (sendError instanceof SendTransactionError) {\n          console.error(\"Transaction simulation failed:\", sendError);\n          console.error(\"Error details:\", sendError.message);\n          \n          if (sendError.logs) {\n            console.error(\"Transaction logs:\", sendError.logs);\n          }\n          \n          // Cố gắng lấy logs chi tiết\n          let logs = \"\";\n          try {\n            if (sendError.logs && Array.isArray(sendError.logs)) {\n              logs = sendError.logs.join('\\n');\n            } else {\n              logs = \"Không có logs chi tiết.\";\n            }\n          } catch (logError) {\n            logs = \"Không thể lấy logs chi tiết.\";\n          }\n          \n          // Phân tích lỗi để đưa ra hướng dẫn cụ thể\n          let errorMessage = `Lỗi khi gửi giao dịch: ${sendError.message}\\n\\n`;\n          \n          if (logs.includes(\"Attempt to load a program that does not exist\")) {\n            // Xử lý lỗi chương trình không tồn tại\n            if (logs.includes(programID.toString())) {\n              errorMessage += `Chương trình MoonWallet chưa được cài đặt trên validator.\\n`;\n              errorMessage += `Địa chỉ chương trình: ${programID.toString()}\\n\\n`;\n              errorMessage += `Hãy cài đặt chương trình với lệnh:\\n`;\n              errorMessage += `solana-test-validator --bpf-program ${programID.toString()} path/to/moon_wallet.so`;\n            } else if (logs.includes(SECP256R1_PROGRAM_ID.toString())) {\n              errorMessage += `Chương trình Secp256r1 chưa được cài đặt trên validator.\\n`;\n              errorMessage += `Địa chỉ chương trình: ${SECP256R1_PROGRAM_ID.toString()}\\n\\n`;\n              errorMessage += `Hãy cài đặt chương trình với lệnh:\\n`;\n              errorMessage += `solana-test-validator --bpf-program ${SECP256R1_PROGRAM_ID.toString()} path/to/secp256r1_verify.so`;\n            } else {\n              errorMessage += `Một chương trình cần thiết không tồn tại trên validator.\\n\\n`;\n              errorMessage += `Chi tiết lỗi: ${logs}\\n\\n`;\n              errorMessage += `Thông tin kết nối:\\n`;\n              errorMessage += `- Endpoint validator: ${connectionEndpoint}\\n`;\n            }\n          } else {\n            // Lỗi khác\n            errorMessage += `Chi tiết lỗi: ${logs}\\n\\n`;\n            errorMessage += `Thông tin kết nối:\\n`;\n            errorMessage += `- Endpoint validator: ${connectionEndpoint}\\n`;\n            errorMessage += `- MoonWallet Program: ${isMoonWalletAvailable ? '✅ Đã cài đặt' : '❌ Chưa cài đặt'} (${programID.toString()})`;\n          }\n          \n          throw new Error(errorMessage);\n        } else {\n          throw sendError;\n        }\n      }\n    } catch (error: any) {\n      console.error('Lỗi khi chuyển tiền:', error);\n      setError(error.message || 'Đã xảy ra lỗi khi chuyển tiền');\n      setTxStatus(TransactionStatus.ERROR);\n      \n      // Gọi callback lỗi nếu có\n      if (onTransferError) {\n        onTransferError(error);\n      }\n    } finally {\n      setIsTransferring(false);\n    }\n  };\n  \n  // Hàm chỉ xác minh chữ ký, không thực hiện chuyển tiền\n  const handleVerifySignatureOnly = async () => {\n    setVerificationStatus(VerificationStatus.VERIFYING);\n    setVerificationMessage('');\n    \n    try {\n   \n      \n      // Tạo message mẫu để xác minh (có thể thay đổi theo yêu cầu)\n      const testMessage = `Test message for signature verification,timestamp:${Math.floor(Date.now() / 1000)}`;\n      console.log('Message gốc:', testMessage);\n      \n      // Chuyển message thành bytes\n      const messageBytes = new TextEncoder().encode(testMessage);\n      \n      console.log('Message bytes (UTF-8):', Array.from(messageBytes));\n      console.log('Message bytes (hex):', Array.from(messageBytes).map(b => b.toString(16).padStart(2, '0')).join(''));\n      \n      // Tính hash của message\n      const messageHash = await crypto.subtle.digest('SHA-256', messageBytes);\n      const messageHashBytes = new Uint8Array(messageHash);\n      console.log('Message hash bytes (hex):', Buffer.from(messageHashBytes).toString('hex'));\n      console.log('Message hash bytes (array):', Array.from(messageHashBytes));\n      \n      // Hiển thị thông báo\n      console.log('Đang yêu cầu xác thực WebAuthn...');\n      setVerificationMessage('Đang hiển thị danh sách khóa WebAuthn, vui lòng chọn khóa để xác thực...');\n      \n      // Sử dụng trực tiếp message gốc làm dữ liệu để ký với WebAuthn\n      const assertion = await getWebAuthnAssertion(credentialId, testMessage, true);\n      \n      if (!assertion) {\n        throw new Error('Lỗi khi ký message bằng WebAuthn hoặc người dùng đã hủy xác thực');\n      }\n   \n      const clientDataObj = JSON.parse(new TextDecoder().decode(assertion.clientDataJSON));\n     \n      const derToRaw = (derSignature: Uint8Array): Uint8Array => {\n        try {\n          // Kiểm tra format DER\n          if (derSignature[0] !== 0x30) {\n            throw new Error('Chữ ký không đúng định dạng DER: byte đầu tiên không phải 0x30');\n          }\n          \n          // DER format: 0x30 [total-length] 0x02 [r-length] [r] 0x02 [s-length] [s]\n          const rLength = derSignature[3];\n          const rStart = 4;\n          const rEnd = rStart + rLength;\n          \n          const sLength = derSignature[rEnd + 1];\n          const sStart = rEnd + 2;\n          const sEnd = sStart + sLength;\n          \n          // Trích xuất r và s\n          let r = derSignature.slice(rStart, rEnd);\n          let s = derSignature.slice(sStart, sEnd);\n          \n          console.log('DER r length:', r.length, 'r (hex):', Buffer.from(r).toString('hex'));\n          console.log('DER s length:', s.length, 's (hex):', Buffer.from(s).toString('hex'));\n          \n          // Chuẩn bị r và s cho định dạng raw (mỗi phần 32 bytes)\n          const rPadded = new Uint8Array(32);\n          const sPadded = new Uint8Array(32);\n          \n          if (r.length <= 32) {\n            // Trường hợp r ngắn hơn 32 bytes, thêm padding\n            rPadded.set(r, 32 - r.length);\n          } else {\n            // Trường hợp r dài hơn 32 bytes (thường là có byte 0x00 ở đầu), lấy 32 bytes cuối\n            rPadded.set(r.slice(r.length - 32));\n          }\n          \n          if (s.length <= 32) {\n            // Trường hợp s ngắn hơn 32 bytes, thêm padding\n            sPadded.set(s, 32 - s.length);\n          } else {\n            // Trường hợp s dài hơn 32 bytes, lấy 32 bytes cuối\n            sPadded.set(s.slice(s.length - 32));\n          }\n          \n          // Nối r và s lại\n          const rawSignature = new Uint8Array(64);\n          rawSignature.set(rPadded);\n          rawSignature.set(sPadded, 32);\n          \n          return rawSignature;\n        } catch (e) {\n          console.error('Lỗi khi chuyển đổi DER sang raw:', e);\n          throw e;\n        }\n      };\n      \n      const rawSignature = derToRaw(assertion.signature);\n      const signature = Buffer.from(rawSignature);\n      \n      console.log('Signature sau khi chuyển đổi (raw format):', signature.toString('hex'));\n      \n      // Chuẩn hóa signature về dạng Low-S\n      const normalizedSignature = normalizeSignatureToLowS(signature);\n      console.log(\"Signature sau khi chuẩn hóa (Low-S format):\", normalizedSignature.toString(\"hex\"));\n      \n      // LẤY WEBAUTHN PUBLIC KEY\n      console.log('Lấy WebAuthn public key...');\n      const credentialMapping = await getWalletByCredentialId(credentialId);\n      \n      let webAuthnPubKey: Buffer;\n      \n      if (!credentialMapping || !credentialMapping.guardianPublicKey || credentialMapping.guardianPublicKey.length === 0) {\n        // Thử tìm trong localStorage\n        console.log('Không tìm thấy trong Firebase, thử tìm trong localStorage...');\n        const localStorageData = localStorage.getItem('webauthn_credential_' + credentialId);\n        if (localStorageData) {\n          const localMapping = JSON.parse(localStorageData);\n          if (localMapping && localMapping.guardianPublicKey && localMapping.guardianPublicKey.length > 0) {\n            webAuthnPubKey = Buffer.from(new Uint8Array(localMapping.guardianPublicKey));\n          } else {\n            throw new Error('Không tìm thấy WebAuthn public key trong localStorage');\n          }\n        } else {\n          throw new Error('Không tìm thấy WebAuthn public key');\n        }\n      } else {\n        // Sử dụng WebAuthn public key từ Firebase\n        webAuthnPubKey = Buffer.from(new Uint8Array(credentialMapping.guardianPublicKey));\n      }\n      \n      // Kiểm tra độ dài khóa\n      if (webAuthnPubKey.length !== 33) {\n        console.warn(`WebAuthn public key có độ dài không đúng: ${webAuthnPubKey.length} bytes, cần 33 bytes`);\n      }\n      \n      // ĐÚNG QUY TRÌNH XÁC MINH WEBAUTHN:\n      // 1. Tính hash của clientDataJSON\n      const clientDataHash = await crypto.subtle.digest('SHA-256', assertion.clientDataJSON);\n      const clientDataHashBytes = new Uint8Array(clientDataHash);\n      console.log('clientDataJSON hash:', Buffer.from(clientDataHashBytes).toString('hex'));\n      \n      // 2. Tạo verification data đúng cách: authenticatorData + hash(clientDataJSON)\n      const verificationData = new Uint8Array(assertion.authenticatorData.length + clientDataHashBytes.length);\n      verificationData.set(new Uint8Array(assertion.authenticatorData), 0);\n      verificationData.set(clientDataHashBytes, assertion.authenticatorData.length);\n      \n      console.log('Verification data length:', verificationData.length);\n      console.log('Verification data (hex):', Buffer.from(verificationData).toString('hex'));\n      \n      // Tạo ví tạm để trả phí giao dịch\n      const feePayer = web3.Keypair.generate();\n      \n      // Xin SOL airdrop để trả phí\n      try {\n        const airdropSignature = await connection.requestAirdrop(\n          feePayer.publicKey,\n          web3.LAMPORTS_PER_SOL / 50 // 0.02 SOL để trả phí\n        );\n        await connection.confirmTransaction(airdropSignature);\n      } catch (airdropError) {\n        console.warn('Không thể airdrop SOL để trả phí:', airdropError);\n        // Tiếp tục thực hiện vì có thể account đã có sẵn SOL\n      }\n      \n      // Thử cả hai cách: đảo và không đảo byte đầu tiên của public key\n      const verificationDataBuffer = Buffer.from(verificationData);\n      \n      // Cách 1: Không đảo byte đầu tiên\n      try {\n        console.log(\"Thử xác minh với public key không đảo ngược...\");\n        \n        const secp256r1Ix1 = createSecp256r1Instruction(\n          verificationDataBuffer,\n          webAuthnPubKey,\n          normalizedSignature,\n          false // Không đảo ngược public key\n        );\n        \n        const transaction1 = new Transaction().add(secp256r1Ix1);\n        transaction1.feePayer = feePayer.publicKey;\n        const { blockhash } = await connection.getLatestBlockhash();\n        transaction1.recentBlockhash = blockhash;\n        transaction1.sign(feePayer);\n        \n        console.log(\"Gửi transaction với public key không đảo ngược...\");\n        const txid1 = await connection.sendRawTransaction(transaction1.serialize(), {\n          skipPreflight: true,\n          preflightCommitment: 'confirmed'\n        });\n        \n        console.log('Transaction xác minh chữ ký đã được gửi với ID:', txid1);\n        \n        const confirmation1 = await connection.confirmTransaction(txid1, 'confirmed');\n        if (confirmation1.value.err) {\n          console.error(\"Lỗi khi xác minh với public key không đảo ngược:\", confirmation1.value.err);\n          throw new Error(`Lỗi: ${JSON.stringify(confirmation1.value.err)}`);\n        } else {\n          console.log(\"XÁC MINH THÀNH CÔNG với public key không đảo ngược!\");\n          setVerificationStatus(VerificationStatus.SUCCESS);\n          setVerificationMessage(`Xác minh chữ ký thành công! ID giao dịch: ${txid1}`);\n          return;\n        }\n      } catch (error1) {\n        console.error(\"Lỗi khi xác minh với public key không đảo ngược:\", error1);\n        \n       \n      }\n    } catch (error: any) {\n      console.error('Lỗi khi xác minh chữ ký:', error);\n      setVerificationStatus(VerificationStatus.ERROR);\n      setVerificationMessage(error.message || 'Đã xảy ra lỗi khi xác minh chữ ký');\n    }\n  };\n  \n  // Render status message dựa trên txStatus\n  const renderStatusMessage = () => {\n    switch (txStatus) {\n      case TransactionStatus.PREPARING:\n        return 'Đang chuẩn bị giao dịch...';\n      case TransactionStatus.SIGNING:\n        return 'Vui lòng xác thực bằng WebAuthn (vân tay hoặc Face ID) khi được yêu cầu...';\n      case TransactionStatus.BUILDING_TX:\n        return 'Đang xây dựng giao dịch...';\n      case TransactionStatus.SUBMITTING:\n        return 'Đang gửi giao dịch lên blockchain...';\n      case TransactionStatus.CONFIRMING:\n        return 'Đang chờ xác nhận giao dịch...';\n      case TransactionStatus.SUCCESS:\n        return 'Giao dịch thành công!';\n      case TransactionStatus.ERROR:\n        return 'Giao dịch thất bại!';\n      default:\n        return '';\n    }\n  };\n  \n  // Hiển thị ghi chú về validator cục bộ\n  const renderValidatorNote = () => {\n    if (connectionEndpoint.includes('localhost') || connectionEndpoint.includes('127.0.0.1')) {\n      return (\n        <div className=\"info-note\">\n          <p><strong>Lưu ý:</strong> Bạn đang kết nối đến validator cục bộ.</p>\n          <p>Cần khởi động validator với các tham số đúng để cài đặt chương trình MoonWallet:</p>\n          <pre>\n            solana-test-validator --bpf-program {programID.toString()} path/to/moon_wallet.so\n          </pre>\n        </div>\n      );\n    }\n    return null;\n  };\n  \n  \n  \n  return (\n    <div className=\"transfer-form\">\n      <h2>Chuyển SOL</h2>\n      \n      <div className=\"wallet-info\">\n        <p>Kết nối đến: <strong>{connectionEndpoint}</strong></p>\n        <p>Số dư hiện tại: <strong>{pdaBalance.toFixed(5)} SOL</strong></p>\n        \n        {/* Hiển thị trạng thái MoonWallet program */}\n        <div className={!isMoonWalletAvailable ? \"warning-message\" : \"info-message\"}>\n          <p><strong>Trạng thái chương trình:</strong></p>\n          <ul>\n            <li>\n              <span className={isMoonWalletAvailable ? \"status-ok\" : \"status-error\"}>\n                {isMoonWalletAvailable ? '✅' : '❌'}\n              </span> \n              MoonWallet: <code>{programID.toString()}</code>\n            </li>\n          </ul>\n          \n          {renderValidatorNote()}\n          \n          {!isMoonWalletAvailable && (\n            <div>\n              <p><strong>Lưu ý:</strong> Chương trình MoonWallet chưa được cài đặt trên validator.</p>\n              <p>Để cài đặt, chạy validator với lệnh:</p>\n              <pre>\n                solana-test-validator --bpf-program {programID.toString()} path/to/moon_wallet.so\n              </pre>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Thêm nút \"Chỉ xác minh chữ ký\" */}\n      <div className=\"verify-signature-section\">\n        <h3>Xác minh chữ ký</h3>\n        <p>Kiểm tra xem WebAuthn của bạn có hoạt động đúng trước khi thực hiện giao dịch.</p>\n        \n        {verificationStatus !== VerificationStatus.IDLE && (\n          <div className={\n            verificationStatus === VerificationStatus.SUCCESS ? \"success-message\" : \n            verificationStatus === VerificationStatus.ERROR ? \"error-message\" : \n            \"status-message\"\n          }>\n            {verificationMessage}\n          </div>\n        )}\n        \n        <button \n          type=\"button\" \n          className=\"secondary-button\" \n          onClick={handleVerifySignatureOnly}\n          disabled={verificationStatus === VerificationStatus.VERIFYING || !isMoonWalletAvailable}\n        >\n          {verificationStatus === VerificationStatus.VERIFYING ? 'Đang xác minh...' : 'Chỉ xác minh chữ ký'}\n        </button>\n      </div>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"destination\">Địa chỉ đích:</label>\n          <input\n            type=\"text\"\n            id=\"destination\"\n            value={destinationAddress}\n            onChange={handleDestinationChange}\n            placeholder=\"Nhập địa chỉ Solana\"\n            disabled={isTransferring}\n            required\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Số lượng SOL:</label>\n          <input\n            type=\"text\"\n            id=\"amount\"\n            value={amount}\n            onChange={handleAmountChange}\n            placeholder=\"Ví dụ: 0.1\"\n            disabled={isTransferring}\n            required\n          />\n        </div>\n        \n        {success && <div className=\"success-message\">{success}</div>}\n        {error && <div className=\"error-message\">{error}</div>}\n        \n        {txStatus !== TransactionStatus.IDLE && (\n          <div className=\"status-message\">\n            <p>{renderStatusMessage()}</p>\n            {txStatus === TransactionStatus.CONFIRMING && (\n              <div className=\"loading-indicator\">Đang xác nhận...</div>\n            )}\n            {txId && (\n              <p className=\"transaction-id\">\n                ID Giao dịch: <a href={`https://explorer.solana.com/tx/${txId}`} target=\"_blank\" rel=\"noopener noreferrer\">{txId.slice(0, 8)}...{txId.slice(-8)}</a>\n              </p>\n            )}\n          </div>\n        )}\n        \n        <button \n          type=\"submit\" \n          className=\"primary-button\" \n          disabled={isTransferring || !isMoonWalletAvailable}\n        >\n          {isTransferring ? 'Đang xử lý...' : 'Chuyển SOL'}\n        </button>\n      </form>\n      \n      <style>\n        {`\n          .success-message, .error-message, .warning-message, .info-message {\n            margin: 12px 0;\n            padding: 10px;\n            border-radius: 4px;\n            font-weight: 500;\n          }\n          \n          .success-message {\n            background-color: rgba(0, 200, 83, 0.1);\n            color: #00C853;\n            border: 1px solid #00C853;\n          }\n          \n          .error-message {\n            background-color: rgba(255, 87, 34, 0.1);\n            color: #FF5722;\n            border: 1px solid #FF5722;\n          }\n          \n          .warning-message {\n            background-color: rgba(255, 152, 0, 0.1);\n            color: #FF9800;\n            border: 1px solid #FF9800;\n          }\n          \n          .info-message {\n            background-color: rgba(33, 150, 243, 0.1);\n            color: #333;\n            border: 1px solid #2196F3;\n          }\n          \n          .status-message {\n            margin: 12px 0;\n            padding: 10px;\n            background-color: rgba(33, 150, 243, 0.1);\n            border: 1px solid #2196F3;\n            border-radius: 4px;\n            color: #2196F3;\n          }\n          \n          .loading-indicator {\n            margin-top: 8px;\n            font-style: italic;\n          }\n          \n          .transaction-id {\n            margin-top: 8px;\n            word-break: break-all;\n            font-size: 14px;\n          }\n          \n          .transaction-id a {\n            color: #2196F3;\n            text-decoration: none;\n          }\n          \n          .transaction-id a:hover {\n            text-decoration: underline;\n          }\n          \n          .status-ok {\n            color: #00C853;\n          }\n          \n          .status-error {\n            color: #FF5722;\n          }\n          \n          pre {\n            background-color: #f5f5f5;\n            padding: 10px;\n            border-radius: 4px;\n            overflow-x: auto;\n            font-size: 12px;\n          }\n          \n          ul {\n            padding-left: 20px;\n          }\n          \n          code {\n            font-family: monospace;\n            background-color: #f5f5f5;\n            padding: 2px 4px;\n            border-radius: 2px;\n          }\n          \n          .info-note {\n            margin-top: 12px;\n            padding: 8px;\n            background-color: #f8f9fa;\n            border-left: 4px solid #2196F3;\n            font-size: 0.9em;\n          }\n          \n          .verify-signature-section {\n            margin: 20px 0;\n            padding: 15px;\n            background-color: #f8f9fa;\n            border-radius: 4px;\n            border: 1px solid #e9ecef;\n          }\n          \n          .secondary-button {\n            background-color: #6c757d;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 4px;\n            cursor: pointer;\n            font-weight: 500;\n            margin-top: 10px;\n          }\n          \n          .secondary-button:hover {\n            background-color: #5a6268;\n          }\n          \n          .secondary-button:disabled {\n            background-color: #adb5bd;\n            cursor: not-allowed;\n          }\n        `}\n      </style>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}