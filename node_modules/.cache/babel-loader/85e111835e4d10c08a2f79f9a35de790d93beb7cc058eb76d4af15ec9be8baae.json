{"ast":null,"code":"import { Connection, Keypair, Transaction, SystemProgram, LAMPORTS_PER_SOL, clusterApiUrl, sendAndConfirmTransaction } from '@solana/web3.js';\n/**\n * Hàm đơn giản để chuyển SOL giữa các tài khoản\n * Phiên bản này chỉ sử dụng SystemProgram.transfer\n */\nexport const transferFunds = async (sender, recipient, amount, signatureInstruction) => {\n  try {\n    // Kết nối đến mạng Solana\n    const connection = new Connection(clusterApiUrl('devnet'), 'confirmed');\n\n    // Lấy ví từ localStorage (hoặc từ nguồn phù hợp khác)\n    const privateKeyString = localStorage.getItem('privateKey');\n    if (!privateKeyString) {\n      throw new Error('Không tìm thấy khóa riêng tư trong localStorage');\n    }\n\n    // Tạo keypair từ khóa riêng tư\n    const privateKeyData = JSON.parse(privateKeyString);\n    const secretKey = new Uint8Array(privateKeyData);\n    const feePayer = Keypair.fromSecretKey(secretKey);\n\n    // Kiểm tra số dư\n    const senderBalance = await connection.getBalance(sender);\n    const lamportsToSend = Math.floor(amount * LAMPORTS_PER_SOL);\n    if (senderBalance < lamportsToSend) {\n      throw new Error(`Số dư không đủ. Hiện tại: ${senderBalance / LAMPORTS_PER_SOL} SOL`);\n    }\n\n    // Tạo transaction chuyển tiền\n    const transaction = new Transaction();\n\n    // Nếu có instruction xác minh chữ ký, thêm vào trước\n    if (signatureInstruction) {\n      console.log(\"Thêm instruction xác minh chữ ký WebAuthn vào transaction\");\n      transaction.add(signatureInstruction);\n    }\n\n    // Thêm instruction chuyển tiền\n    transaction.add(SystemProgram.transfer({\n      fromPubkey: sender,\n      toPubkey: recipient,\n      lamports: lamportsToSend\n    }));\n\n    // Gửi và xác nhận giao dịch\n    const signature = await sendAndConfirmTransaction(connection, transaction, [feePayer]);\n    console.log(`Chuyển ${amount} SOL thành công. Signature: ${signature}`);\n    return signature;\n  } catch (error) {\n    console.error('Lỗi khi chuyển tiền:', error);\n    throw new Error(`Lỗi khi chuyển tiền: ${error.message}`);\n  }\n};","map":{"version":3,"names":["Connection","Keypair","Transaction","SystemProgram","LAMPORTS_PER_SOL","clusterApiUrl","sendAndConfirmTransaction","transferFunds","sender","recipient","amount","signatureInstruction","connection","privateKeyString","localStorage","getItem","Error","privateKeyData","JSON","parse","secretKey","Uint8Array","feePayer","fromSecretKey","senderBalance","getBalance","lamportsToSend","Math","floor","transaction","console","log","add","transfer","fromPubkey","toPubkey","lamports","signature","error","message"],"sources":["/Users/tai/Documents/MoonWallet/moonwallet/acacac/src/utils/transferUtils.ts"],"sourcesContent":["import { \n  Connection,\n  PublicKey,\n  Keypair,\n  Transaction,\n  TransactionInstruction,\n  SystemProgram,\n  LAMPORTS_PER_SOL,\n  clusterApiUrl,\n  sendAndConfirmTransaction\n} from '@solana/web3.js';\nimport { Buffer } from 'buffer';\n\n/**\n * Hàm đơn giản để chuyển SOL giữa các tài khoản\n * Phiên bản này chỉ sử dụng SystemProgram.transfer\n */\nexport const transferFunds = async (\n  sender: PublicKey,\n  recipient: PublicKey,\n  amount: number,\n  signatureInstruction?: TransactionInstruction\n): Promise<string> => {\n  try {\n    // Kết nối đến mạng Solana\n    const connection = new Connection(clusterApiUrl('devnet'), 'confirmed');\n    \n    // Lấy ví từ localStorage (hoặc từ nguồn phù hợp khác)\n    const privateKeyString = localStorage.getItem('privateKey');\n    if (!privateKeyString) {\n      throw new Error('Không tìm thấy khóa riêng tư trong localStorage');\n    }\n    \n    // Tạo keypair từ khóa riêng tư\n    const privateKeyData = JSON.parse(privateKeyString);\n    const secretKey = new Uint8Array(privateKeyData);\n    const feePayer = Keypair.fromSecretKey(secretKey);\n    \n    // Kiểm tra số dư\n    const senderBalance = await connection.getBalance(sender);\n    const lamportsToSend = Math.floor(amount * LAMPORTS_PER_SOL);\n    \n    if (senderBalance < lamportsToSend) {\n      throw new Error(`Số dư không đủ. Hiện tại: ${senderBalance / LAMPORTS_PER_SOL} SOL`);\n    }\n    \n    // Tạo transaction chuyển tiền\n    const transaction = new Transaction();\n    \n    // Nếu có instruction xác minh chữ ký, thêm vào trước\n    if (signatureInstruction) {\n      console.log(\"Thêm instruction xác minh chữ ký WebAuthn vào transaction\");\n      transaction.add(signatureInstruction);\n    }\n    \n    // Thêm instruction chuyển tiền\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: sender,\n        toPubkey: recipient,\n        lamports: lamportsToSend\n      })\n    );\n    \n    // Gửi và xác nhận giao dịch\n    const signature = await sendAndConfirmTransaction(\n      connection,\n      transaction,\n      [feePayer]\n    );\n    \n    console.log(`Chuyển ${amount} SOL thành công. Signature: ${signature}`);\n    return signature;\n  } catch (error: any) {\n    console.error('Lỗi khi chuyển tiền:', error);\n    throw new Error(`Lỗi khi chuyển tiền: ${error.message}`);\n  }\n}; "],"mappings":"AAAA,SACEA,UAAU,EAEVC,OAAO,EACPC,WAAW,EAEXC,aAAa,EACbC,gBAAgB,EAChBC,aAAa,EACbC,yBAAyB,QACpB,iBAAiB;AAGxB;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAC3BC,MAAiB,EACjBC,SAAoB,EACpBC,MAAc,EACdC,oBAA6C,KACzB;EACpB,IAAI;IACF;IACA,MAAMC,UAAU,GAAG,IAAIZ,UAAU,CAACK,aAAa,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC;;IAEvE;IACA,MAAMQ,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC3D,IAAI,CAACF,gBAAgB,EAAE;MACrB,MAAM,IAAIG,KAAK,CAAC,iDAAiD,CAAC;IACpE;;IAEA;IACA,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACN,gBAAgB,CAAC;IACnD,MAAMO,SAAS,GAAG,IAAIC,UAAU,CAACJ,cAAc,CAAC;IAChD,MAAMK,QAAQ,GAAGrB,OAAO,CAACsB,aAAa,CAACH,SAAS,CAAC;;IAEjD;IACA,MAAMI,aAAa,GAAG,MAAMZ,UAAU,CAACa,UAAU,CAACjB,MAAM,CAAC;IACzD,MAAMkB,cAAc,GAAGC,IAAI,CAACC,KAAK,CAAClB,MAAM,GAAGN,gBAAgB,CAAC;IAE5D,IAAIoB,aAAa,GAAGE,cAAc,EAAE;MAClC,MAAM,IAAIV,KAAK,CAAC,6BAA6BQ,aAAa,GAAGpB,gBAAgB,MAAM,CAAC;IACtF;;IAEA;IACA,MAAMyB,WAAW,GAAG,IAAI3B,WAAW,CAAC,CAAC;;IAErC;IACA,IAAIS,oBAAoB,EAAE;MACxBmB,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;MACxEF,WAAW,CAACG,GAAG,CAACrB,oBAAoB,CAAC;IACvC;;IAEA;IACAkB,WAAW,CAACG,GAAG,CACb7B,aAAa,CAAC8B,QAAQ,CAAC;MACrBC,UAAU,EAAE1B,MAAM;MAClB2B,QAAQ,EAAE1B,SAAS;MACnB2B,QAAQ,EAAEV;IACZ,CAAC,CACH,CAAC;;IAED;IACA,MAAMW,SAAS,GAAG,MAAM/B,yBAAyB,CAC/CM,UAAU,EACViB,WAAW,EACX,CAACP,QAAQ,CACX,CAAC;IAEDQ,OAAO,CAACC,GAAG,CAAC,UAAUrB,MAAM,+BAA+B2B,SAAS,EAAE,CAAC;IACvE,OAAOA,SAAS;EAClB,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAM,IAAItB,KAAK,CAAC,wBAAwBsB,KAAK,CAACC,OAAO,EAAE,CAAC;EAC1D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}