{"ast":null,"code":"import { collection, doc, setDoc, getDoc, query, where, getDocs, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"./config\";\n\n// Định nghĩa interface cho ánh xạ WebAuthn credential\n\n/**\n * Lưu ánh xạ giữa WebAuthn credential và địa chỉ ví\n * @param credentialId ID của credential WebAuthn\n * @param walletAddress Địa chỉ ví multisig\n * @param guardianPublicKey Khóa công khai WebAuthn của guardian dưới dạng mảng số\n * @returns Trả về true nếu lưu thành công\n */\nexport const saveWebAuthnCredentialMapping = async (credentialId, walletAddress, guardianPublicKey) => {\n  try {\n    // Tạo một document dưới collection webauthn_credentials\n    await setDoc(doc(db, \"webauthn_credentials\", credentialId), {\n      credentialId,\n      walletAddress,\n      guardianPublicKey\n    });\n    console.log('Đã lưu ánh xạ WebAuthn credential thành công');\n    return true;\n  } catch (error) {\n    console.error('Lỗi khi lưu ánh xạ WebAuthn credential:', error);\n    return false;\n  }\n};\n\n/**\n * Lấy thông tin ví từ credential ID\n * @param credentialId ID của credential WebAuthn\n * @returns Thông tin ánh xạ hoặc null nếu không tìm thấy\n */\nexport const getWalletByCredentialId = async credentialId => {\n  try {\n    const docRef = doc(db, \"webauthn_credentials\", credentialId);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      return docSnap.data();\n    } else {\n      console.log('Không tìm thấy ánh xạ cho credential ID này');\n      return null;\n    }\n  } catch (error) {\n    console.error('Lỗi khi lấy thông tin ví từ credential ID:', error);\n    return null;\n  }\n};\n\n/**\n * Lấy tất cả credential đã đăng ký cho một ví\n * @param walletAddress Địa chỉ ví multisig\n * @returns Danh sách các ánh xạ credential\n */\nexport const getCredentialsByWallet = async walletAddress => {\n  try {\n    const q = query(collection(db, \"webauthn_credentials\"), where(\"walletAddress\", \"==\", walletAddress));\n    const querySnapshot = await getDocs(q);\n    const results = [];\n    querySnapshot.forEach(doc => {\n      results.push(doc.data());\n    });\n    return results;\n  } catch (error) {\n    console.error('Lỗi khi lấy danh sách credentials cho ví:', error);\n    return [];\n  }\n};\n\n/**\n * Xóa một ánh xạ credential\n * @param credentialId ID của credential WebAuthn cần xóa\n * @returns Trả về true nếu xóa thành công\n */\nexport const deleteCredentialMapping = async credentialId => {\n  try {\n    await deleteDoc(doc(db, \"webauthn_credentials\", credentialId));\n    console.log('Đã xóa ánh xạ credential thành công');\n    return true;\n  } catch (error) {\n    console.error('Lỗi khi xóa ánh xạ credential:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["collection","doc","setDoc","getDoc","query","where","getDocs","deleteDoc","db","saveWebAuthnCredentialMapping","credentialId","walletAddress","guardianPublicKey","console","log","error","getWalletByCredentialId","docRef","docSnap","exists","data","getCredentialsByWallet","q","querySnapshot","results","forEach","push","deleteCredentialMapping"],"sources":["/Users/tai/Documents/MoonWallet/moonwallet/acacac/src/firebase/webAuthnService.ts"],"sourcesContent":["import { \n  collection, doc, setDoc, getDoc, query, \n  where, getDocs, deleteDoc, serverTimestamp\n} from \"firebase/firestore\";\nimport { db } from \"./config\";\n\n// Định nghĩa interface cho ánh xạ WebAuthn credential\nexport interface WebAuthnCredentialMapping {\n  credentialId: string;\n  walletAddress: string;\n  guardianPublicKey: number[]; // Lưu khóa công khai dưới dạng mảng số\n}\n\n/**\n * Lưu ánh xạ giữa WebAuthn credential và địa chỉ ví\n * @param credentialId ID của credential WebAuthn\n * @param walletAddress Địa chỉ ví multisig\n * @param guardianPublicKey Khóa công khai WebAuthn của guardian dưới dạng mảng số\n * @returns Trả về true nếu lưu thành công\n */\nexport const saveWebAuthnCredentialMapping = async (\n  credentialId: string,\n  walletAddress: string,\n  guardianPublicKey: number[]\n): Promise<boolean> => {\n  try {\n    // Tạo một document dưới collection webauthn_credentials\n    await setDoc(doc(db, \"webauthn_credentials\", credentialId), {\n      credentialId,\n      walletAddress,\n      guardianPublicKey\n    });\n\n    console.log('Đã lưu ánh xạ WebAuthn credential thành công');\n    return true;\n  } catch (error) {\n    console.error('Lỗi khi lưu ánh xạ WebAuthn credential:', error);\n    return false;\n  }\n};\n\n/**\n * Lấy thông tin ví từ credential ID\n * @param credentialId ID của credential WebAuthn\n * @returns Thông tin ánh xạ hoặc null nếu không tìm thấy\n */\nexport const getWalletByCredentialId = async (\n  credentialId: string\n): Promise<WebAuthnCredentialMapping | null> => {\n  try {\n    const docRef = doc(db, \"webauthn_credentials\", credentialId);\n    const docSnap = await getDoc(docRef);\n    \n    if (docSnap.exists()) {\n      return docSnap.data() as WebAuthnCredentialMapping;\n    } else {\n      console.log('Không tìm thấy ánh xạ cho credential ID này');\n      return null;\n    }\n  } catch (error) {\n    console.error('Lỗi khi lấy thông tin ví từ credential ID:', error);\n    return null;\n  }\n};\n\n/**\n * Lấy tất cả credential đã đăng ký cho một ví\n * @param walletAddress Địa chỉ ví multisig\n * @returns Danh sách các ánh xạ credential\n */\nexport const getCredentialsByWallet = async (\n  walletAddress: string\n): Promise<WebAuthnCredentialMapping[]> => {\n  try {\n    const q = query(\n      collection(db, \"webauthn_credentials\"),\n      where(\"walletAddress\", \"==\", walletAddress)\n    );\n    \n    const querySnapshot = await getDocs(q);\n    const results: WebAuthnCredentialMapping[] = [];\n    \n    querySnapshot.forEach((doc) => {\n      results.push(doc.data() as WebAuthnCredentialMapping);\n    });\n    \n    return results;\n  } catch (error) {\n    console.error('Lỗi khi lấy danh sách credentials cho ví:', error);\n    return [];\n  }\n};\n\n/**\n * Xóa một ánh xạ credential\n * @param credentialId ID của credential WebAuthn cần xóa\n * @returns Trả về true nếu xóa thành công\n */\nexport const deleteCredentialMapping = async (\n  credentialId: string\n): Promise<boolean> => {\n  try {\n    await deleteDoc(doc(db, \"webauthn_credentials\", credentialId));\n    console.log('Đã xóa ánh xạ credential thành công');\n    return true;\n  } catch (error) {\n    console.error('Lỗi khi xóa ánh xạ credential:', error);\n    return false;\n  }\n}; "],"mappings":"AAAA,SACEA,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EACtCC,KAAK,EAAEC,OAAO,EAAEC,SAAS,QACpB,oBAAoB;AAC3B,SAASC,EAAE,QAAQ,UAAU;;AAE7B;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,6BAA6B,GAAG,MAAAA,CAC3CC,YAAoB,EACpBC,aAAqB,EACrBC,iBAA2B,KACN;EACrB,IAAI;IACF;IACA,MAAMV,MAAM,CAACD,GAAG,CAACO,EAAE,EAAE,sBAAsB,EAAEE,YAAY,CAAC,EAAE;MAC1DA,YAAY;MACZC,aAAa;MACbC;IACF,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;IAC3D,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,uBAAuB,GAAG,MACrCN,YAAoB,IAC0B;EAC9C,IAAI;IACF,MAAMO,MAAM,GAAGhB,GAAG,CAACO,EAAE,EAAE,sBAAsB,EAAEE,YAAY,CAAC;IAC5D,MAAMQ,OAAO,GAAG,MAAMf,MAAM,CAACc,MAAM,CAAC;IAEpC,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;MACpB,OAAOD,OAAO,CAACE,IAAI,CAAC,CAAC;IACvB,CAAC,MAAM;MACLP,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;MAC1D,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IAClE,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMM,sBAAsB,GAAG,MACpCV,aAAqB,IACoB;EACzC,IAAI;IACF,MAAMW,CAAC,GAAGlB,KAAK,CACbJ,UAAU,CAACQ,EAAE,EAAE,sBAAsB,CAAC,EACtCH,KAAK,CAAC,eAAe,EAAE,IAAI,EAAEM,aAAa,CAC5C,CAAC;IAED,MAAMY,aAAa,GAAG,MAAMjB,OAAO,CAACgB,CAAC,CAAC;IACtC,MAAME,OAAoC,GAAG,EAAE;IAE/CD,aAAa,CAACE,OAAO,CAAExB,GAAG,IAAK;MAC7BuB,OAAO,CAACE,IAAI,CAACzB,GAAG,CAACmB,IAAI,CAAC,CAA8B,CAAC;IACvD,CAAC,CAAC;IAEF,OAAOI,OAAO;EAChB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACjE,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMY,uBAAuB,GAAG,MACrCjB,YAAoB,IACC;EACrB,IAAI;IACF,MAAMH,SAAS,CAACN,GAAG,CAACO,EAAE,EAAE,sBAAsB,EAAEE,YAAY,CAAC,CAAC;IAC9DG,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}