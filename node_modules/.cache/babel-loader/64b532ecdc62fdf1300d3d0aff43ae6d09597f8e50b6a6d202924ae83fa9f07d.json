{"ast":null,"code":"import { collection, doc, setDoc, getDoc, query, where, getDocs, deleteDoc, serverTimestamp, updateDoc } from \"firebase/firestore\";\nimport { db } from \"./config\";\n\n// Định nghĩa interface cho dữ liệu guardian\n\n// Interface cho dữ liệu invitation\n\n// Lưu thông tin invitation khi tạo mã mời\nexport const saveInvitation = async inviteData => {\n  try {\n    const inviteRef = doc(collection(db, \"invitations\"));\n    // Thêm trường inviteCode nếu chưa có\n    const inviteCode = inviteData.inviteCode || inviteRef.id;\n    await setDoc(inviteRef, {\n      ...inviteData,\n      inviteCode,\n      createdAt: serverTimestamp()\n    });\n\n    // Tạo document theo inviteCode để dễ truy vấn\n    await setDoc(doc(db, \"invitations_lookup\", inviteCode), {\n      inviteId: inviteRef.id,\n      createdAt: serverTimestamp()\n    });\n    return inviteCode;\n  } catch (error) {\n    console.error(\"Lỗi khi lưu invitation:\", error);\n    throw error;\n  }\n};\n\n// Lấy thông tin invitation theo mã mời\nexport const getInvitation = async inviteCode => {\n  try {\n    // Tìm trong bảng lookup\n    const lookupRef = doc(db, \"invitations_lookup\", inviteCode);\n    const lookupSnap = await getDoc(lookupRef);\n    if (!lookupSnap.exists()) return null;\n\n    // Lấy ID của document gốc\n    const inviteId = lookupSnap.data().inviteId;\n    const inviteRef = doc(db, \"invitations\", inviteId);\n    const inviteSnap = await getDoc(inviteRef);\n    if (!inviteSnap.exists()) return null;\n    return inviteSnap.data();\n  } catch (error) {\n    console.error(\"Lỗi khi lấy invitation:\", error);\n    return null;\n  }\n};\n\n// Lưu thông tin guardian khi đăng ký\nexport const saveGuardianData = async guardianData => {\n  try {\n    const {\n      inviteCode\n    } = guardianData;\n    // Lưu thông tin guardian\n    await setDoc(doc(db, \"guardians\", inviteCode), {\n      ...guardianData,\n      createdAt: serverTimestamp()\n    });\n\n    // Cập nhật trạng thái invitation\n    const lookupRef = doc(db, \"invitations_lookup\", inviteCode);\n    const lookupSnap = await getDoc(lookupRef);\n    if (lookupSnap.exists()) {\n      const inviteId = lookupSnap.data().inviteId;\n      const inviteRef = doc(db, \"invitations\", inviteId);\n      await updateDoc(inviteRef, {\n        status: 'ready'\n      });\n    }\n  } catch (error) {\n    console.error(\"Lỗi khi lưu guardian data:\", error);\n    throw error;\n  }\n};\n\n// Lấy thông tin guardian theo mã mời\nexport const getGuardianData = async inviteCode => {\n  try {\n    const guardianRef = doc(db, \"guardians\", inviteCode);\n    const guardianSnap = await getDoc(guardianRef);\n    if (!guardianSnap.exists()) return null;\n    return guardianSnap.data();\n  } catch (error) {\n    console.error(\"Lỗi khi lấy guardian data:\", error);\n    return null;\n  }\n};\n\n// Cập nhật trạng thái guardian sau khi hoàn tất\nexport const updateGuardianStatus = async (inviteCode, status, txSignature) => {\n  try {\n    const updateData = {\n      status\n    };\n    if (status === 'completed') {\n      updateData.completedAt = serverTimestamp();\n      if (txSignature) updateData.txSignature = txSignature;\n    }\n\n    // Cập nhật guardian\n    await updateDoc(doc(db, \"guardians\", inviteCode), updateData);\n\n    // Cập nhật invitation\n    const lookupRef = doc(db, \"invitations_lookup\", inviteCode);\n    const lookupSnap = await getDoc(lookupRef);\n    if (lookupSnap.exists()) {\n      const inviteId = lookupSnap.data().inviteId;\n      await updateDoc(doc(db, \"invitations\", inviteId), {\n        status\n      });\n    }\n  } catch (error) {\n    console.error(\"Lỗi khi cập nhật trạng thái guardian:\", error);\n    throw error;\n  }\n};\n\n// Lấy danh sách mã mời đang chờ xử lý\nexport const getPendingInvites = async (ownerId, multisigAddress) => {\n  try {\n    // Tạo query cơ bản\n    let invitesQuery = query(collection(db, \"invitations\"), where(\"ownerId\", \"==\", ownerId), where(\"status\", \"==\", \"ready\"));\n\n    // Nếu có multisigAddress, lọc thêm theo ví multisig\n    if (multisigAddress) {\n      invitesQuery = query(collection(db, \"invitations\"), where(\"ownerId\", \"==\", ownerId), where(\"multisigAddress\", \"==\", multisigAddress), where(\"status\", \"==\", \"ready\"));\n    }\n    const querySnapshot = await getDocs(invitesQuery);\n    console.log(`Tìm thấy ${querySnapshot.size} guardian đang chờ hoàn tất cho ví ${multisigAddress || \"tất cả các ví\"}`);\n    return querySnapshot.docs.map(doc => doc.data().inviteCode);\n  } catch (error) {\n    console.error(\"Lỗi khi lấy danh sách mã mời:\", error);\n    return [];\n  }\n};\n\n// Xóa guardian và invitation data cũ (có thể gọi bằng Cloud Function)\nexport const cleanupOldData = async () => {\n  try {\n    const thirtyMinutesAgo = new Date(Date.now() - 30 * 60 * 1000);\n\n    // Tìm các invitation cũ có trạng thái là pending hoặc ready\n    const oldInvitesQuery = query(collection(db, \"invitations\"), where(\"createdAt\", \"<\", thirtyMinutesAgo), where(\"status\", \"in\", [\"pending\", \"ready\"]));\n    const querySnapshot = await getDocs(oldInvitesQuery);\n    console.log(`Tìm thấy ${querySnapshot.size} invitation cần dọn dẹp.`);\n\n    // Xóa từng invitation cũ\n    const batch = querySnapshot.docs.map(async docSnapshot => {\n      const inviteCode = docSnapshot.data().inviteCode;\n      console.log(`Đang xóa dữ liệu cho invitation: ${inviteCode}`);\n\n      // Xóa lookup\n      await deleteDoc(doc(db, \"invitations_lookup\", inviteCode));\n\n      // Xóa guardian data nếu có\n      const guardianRef = doc(db, \"guardians\", inviteCode);\n      const guardianSnap = await getDoc(guardianRef);\n      if (guardianSnap.exists()) {\n        await deleteDoc(guardianRef);\n      }\n\n      // Xóa invitation\n      await deleteDoc(docSnapshot.ref);\n    });\n    await Promise.all(batch);\n  } catch (error) {\n    console.error(\"Lỗi khi dọn dẹp dữ liệu cũ:\", error);\n  }\n};\n\n// Xóa guardian, invitation và lookup data khi hoàn tất đăng ký\nexport const deleteGuardianData = async inviteCode => {\n  try {\n    console.log(`Đang xóa dữ liệu guardian với mã mời: ${inviteCode}`);\n\n    // Xóa guardian data\n    const guardianRef = doc(db, \"guardians\", inviteCode);\n    const guardianSnap = await getDoc(guardianRef);\n    if (guardianSnap.exists()) {\n      await deleteDoc(guardianRef);\n      console.log(`Đã xóa guardian data với mã mời: ${inviteCode}`);\n    }\n\n    // Tìm và xóa invitation\n    const lookupRef = doc(db, \"invitations_lookup\", inviteCode);\n    const lookupSnap = await getDoc(lookupRef);\n    if (lookupSnap.exists()) {\n      const inviteId = lookupSnap.data().inviteId;\n\n      // Xóa invitation\n      await deleteDoc(doc(db, \"invitations\", inviteId));\n      console.log(`Đã xóa invitation với ID: ${inviteId}`);\n\n      // Xóa lookup\n      await deleteDoc(lookupRef);\n      console.log(`Đã xóa invitation lookup với mã mời: ${inviteCode}`);\n    }\n    return true;\n  } catch (error) {\n    console.error(\"Lỗi khi xóa dữ liệu guardian:\", error);\n    return false;\n  }\n};","map":{"version":3,"names":["collection","doc","setDoc","getDoc","query","where","getDocs","deleteDoc","serverTimestamp","updateDoc","db","saveInvitation","inviteData","inviteRef","inviteCode","id","createdAt","inviteId","error","console","getInvitation","lookupRef","lookupSnap","exists","data","inviteSnap","saveGuardianData","guardianData","status","getGuardianData","guardianRef","guardianSnap","updateGuardianStatus","txSignature","updateData","completedAt","getPendingInvites","ownerId","multisigAddress","invitesQuery","querySnapshot","log","size","docs","map","cleanupOldData","thirtyMinutesAgo","Date","now","oldInvitesQuery","batch","docSnapshot","ref","Promise","all","deleteGuardianData"],"sources":["/Users/tai/Documents/MoonWallet/moonwallet/acacac/src/firebase/guardianService.ts"],"sourcesContent":["import { \n  collection, doc, setDoc, getDoc, query, \n  where, getDocs, deleteDoc, serverTimestamp,\n  Timestamp, updateDoc \n} from \"firebase/firestore\";\nimport { db } from \"./config\";\n\n// Định nghĩa interface cho dữ liệu guardian\nexport interface GuardianData {\n  inviteCode: string;\n  guardianId: number;\n  multisigAddress: string;\n  guardianName: string;\n  hashedRecoveryBytes: number[]; // Lưu dưới dạng mảng số\n  webauthnCredentialId: string;\n  webauthnPublicKey: number[]; // Lưu khóa công khai dưới dạng mảng số\n  status: 'pending' | 'ready' | 'completed'; // Trạng thái guardian\n  createdAt: Timestamp;\n  completedAt?: Timestamp;\n  txSignature?: string; // Chữ ký giao dịch khi hoàn tất\n}\n\n// Interface cho dữ liệu invitation\nexport interface InviteData {\n  inviteCode: string;\n  multisigAddress: string;\n  guardianId: number;\n  ownerId: string;\n  status: 'pending' | 'ready' | 'completed';\n  createdAt: Timestamp;\n}\n\n// Lưu thông tin invitation khi tạo mã mời\nexport const saveInvitation = async (inviteData: Omit<InviteData, 'createdAt'>): Promise<string> => {\n  try {\n    const inviteRef = doc(collection(db, \"invitations\"));\n    // Thêm trường inviteCode nếu chưa có\n    const inviteCode = inviteData.inviteCode || inviteRef.id;\n    \n    await setDoc(inviteRef, {\n      ...inviteData,\n      inviteCode,\n      createdAt: serverTimestamp(),\n    });\n\n    // Tạo document theo inviteCode để dễ truy vấn\n    await setDoc(doc(db, \"invitations_lookup\", inviteCode), {\n      inviteId: inviteRef.id,\n      createdAt: serverTimestamp()\n    });\n\n    return inviteCode;\n  } catch (error) {\n    console.error(\"Lỗi khi lưu invitation:\", error);\n    throw error;\n  }\n};\n\n// Lấy thông tin invitation theo mã mời\nexport const getInvitation = async (inviteCode: string): Promise<InviteData | null> => {\n  try {\n    // Tìm trong bảng lookup\n    const lookupRef = doc(db, \"invitations_lookup\", inviteCode);\n    const lookupSnap = await getDoc(lookupRef);\n    \n    if (!lookupSnap.exists()) return null;\n    \n    // Lấy ID của document gốc\n    const inviteId = lookupSnap.data().inviteId;\n    const inviteRef = doc(db, \"invitations\", inviteId);\n    const inviteSnap = await getDoc(inviteRef);\n    \n    if (!inviteSnap.exists()) return null;\n    \n    return inviteSnap.data() as InviteData;\n  } catch (error) {\n    console.error(\"Lỗi khi lấy invitation:\", error);\n    return null;\n  }\n};\n\n// Lưu thông tin guardian khi đăng ký\nexport const saveGuardianData = async (guardianData: Omit<GuardianData, 'createdAt'>): Promise<void> => {\n  try {\n    const { inviteCode } = guardianData;\n    // Lưu thông tin guardian\n    await setDoc(doc(db, \"guardians\", inviteCode), {\n      ...guardianData,\n      createdAt: serverTimestamp()\n    });\n    \n    // Cập nhật trạng thái invitation\n    const lookupRef = doc(db, \"invitations_lookup\", inviteCode);\n    const lookupSnap = await getDoc(lookupRef);\n    \n    if (lookupSnap.exists()) {\n      const inviteId = lookupSnap.data().inviteId;\n      const inviteRef = doc(db, \"invitations\", inviteId);\n      await updateDoc(inviteRef, {\n        status: 'ready'\n      });\n    }\n  } catch (error) {\n    console.error(\"Lỗi khi lưu guardian data:\", error);\n    throw error;\n  }\n};\n\n// Lấy thông tin guardian theo mã mời\nexport const getGuardianData = async (inviteCode: string): Promise<GuardianData | null> => {\n  try {\n    const guardianRef = doc(db, \"guardians\", inviteCode);\n    const guardianSnap = await getDoc(guardianRef);\n    \n    if (!guardianSnap.exists()) return null;\n    \n    return guardianSnap.data() as GuardianData;\n  } catch (error) {\n    console.error(\"Lỗi khi lấy guardian data:\", error);\n    return null;\n  }\n};\n\n// Cập nhật trạng thái guardian sau khi hoàn tất\nexport const updateGuardianStatus = async (\n  inviteCode: string, \n  status: 'pending' | 'ready' | 'completed',\n  txSignature?: string\n): Promise<void> => {\n  try {\n    const updateData: any = { status };\n    if (status === 'completed') {\n      updateData.completedAt = serverTimestamp();\n      if (txSignature) updateData.txSignature = txSignature;\n    }\n    \n    // Cập nhật guardian\n    await updateDoc(doc(db, \"guardians\", inviteCode), updateData);\n    \n    // Cập nhật invitation\n    const lookupRef = doc(db, \"invitations_lookup\", inviteCode);\n    const lookupSnap = await getDoc(lookupRef);\n    \n    if (lookupSnap.exists()) {\n      const inviteId = lookupSnap.data().inviteId;\n      await updateDoc(doc(db, \"invitations\", inviteId), { status });\n    }\n  } catch (error) {\n    console.error(\"Lỗi khi cập nhật trạng thái guardian:\", error);\n    throw error;\n  }\n};\n\n// Lấy danh sách mã mời đang chờ xử lý\nexport const getPendingInvites = async (ownerId: string, multisigAddress?: string): Promise<string[]> => {\n  try {\n    // Tạo query cơ bản\n    let invitesQuery = query(\n      collection(db, \"invitations\"),\n      where(\"ownerId\", \"==\", ownerId),\n      where(\"status\", \"==\", \"ready\")\n    );\n    \n    // Nếu có multisigAddress, lọc thêm theo ví multisig\n    if (multisigAddress) {\n      invitesQuery = query(\n        collection(db, \"invitations\"),\n        where(\"ownerId\", \"==\", ownerId),\n        where(\"multisigAddress\", \"==\", multisigAddress),\n        where(\"status\", \"==\", \"ready\")\n      );\n    }\n    \n    const querySnapshot = await getDocs(invitesQuery);\n    console.log(`Tìm thấy ${querySnapshot.size} guardian đang chờ hoàn tất cho ví ${multisigAddress || \"tất cả các ví\"}`);\n    return querySnapshot.docs.map(doc => doc.data().inviteCode);\n  } catch (error) {\n    console.error(\"Lỗi khi lấy danh sách mã mời:\", error);\n    return [];\n  }\n};\n\n// Xóa guardian và invitation data cũ (có thể gọi bằng Cloud Function)\nexport const cleanupOldData = async (): Promise<void> => {\n  try {\n    const thirtyMinutesAgo = new Date(Date.now() - 30 * 60 * 1000);\n    \n    // Tìm các invitation cũ có trạng thái là pending hoặc ready\n    const oldInvitesQuery = query(\n      collection(db, \"invitations\"),\n      where(\"createdAt\", \"<\", thirtyMinutesAgo),\n      where(\"status\", \"in\", [\"pending\", \"ready\"])\n    );\n    \n    const querySnapshot = await getDocs(oldInvitesQuery);\n    console.log(`Tìm thấy ${querySnapshot.size} invitation cần dọn dẹp.`);\n    \n    // Xóa từng invitation cũ\n    const batch = querySnapshot.docs.map(async (docSnapshot) => {\n      const inviteCode = docSnapshot.data().inviteCode;\n      console.log(`Đang xóa dữ liệu cho invitation: ${inviteCode}`);\n      \n      // Xóa lookup\n      await deleteDoc(doc(db, \"invitations_lookup\", inviteCode));\n      \n      // Xóa guardian data nếu có\n      const guardianRef = doc(db, \"guardians\", inviteCode);\n      const guardianSnap = await getDoc(guardianRef);\n      if (guardianSnap.exists()) {\n        await deleteDoc(guardianRef);\n      }\n      \n      // Xóa invitation\n      await deleteDoc(docSnapshot.ref);\n    });\n    \n    await Promise.all(batch);\n  } catch (error) {\n    console.error(\"Lỗi khi dọn dẹp dữ liệu cũ:\", error);\n  }\n};\n\n// Xóa guardian, invitation và lookup data khi hoàn tất đăng ký\nexport const deleteGuardianData = async (inviteCode: string): Promise<boolean> => {\n  try {\n    console.log(`Đang xóa dữ liệu guardian với mã mời: ${inviteCode}`);\n    \n    // Xóa guardian data\n    const guardianRef = doc(db, \"guardians\", inviteCode);\n    const guardianSnap = await getDoc(guardianRef);\n    if (guardianSnap.exists()) {\n      await deleteDoc(guardianRef);\n      console.log(`Đã xóa guardian data với mã mời: ${inviteCode}`);\n    }\n    \n    // Tìm và xóa invitation\n    const lookupRef = doc(db, \"invitations_lookup\", inviteCode);\n    const lookupSnap = await getDoc(lookupRef);\n    \n    if (lookupSnap.exists()) {\n      const inviteId = lookupSnap.data().inviteId;\n      \n      // Xóa invitation\n      await deleteDoc(doc(db, \"invitations\", inviteId));\n      console.log(`Đã xóa invitation với ID: ${inviteId}`);\n      \n      // Xóa lookup\n      await deleteDoc(lookupRef);\n      console.log(`Đã xóa invitation lookup với mã mời: ${inviteCode}`);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error(\"Lỗi khi xóa dữ liệu guardian:\", error);\n    return false;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}